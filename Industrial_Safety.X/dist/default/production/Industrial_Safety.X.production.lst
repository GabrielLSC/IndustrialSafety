

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Fri Nov 11 09:38:44 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1336                           INDF equ 00h ;# 
  1337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1338                           TMR0 equ 01h ;# 
  1339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1340                           PCL equ 02h ;# 
  1341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1342                           STATUS equ 03h ;# 
  1343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1344                           FSR equ 04h ;# 
  1345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1346                           PORTA equ 05h ;# 
  1347  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1348                           PORTB equ 06h ;# 
  1349  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1350                           PORTC equ 07h ;# 
  1351  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1352                           PORTD equ 08h ;# 
  1353  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1354                           PORTE equ 09h ;# 
  1355  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1356                           PCLATH equ 0Ah ;# 
  1357  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1358                           INTCON equ 0Bh ;# 
  1359  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1360                           PIR1 equ 0Ch ;# 
  1361  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1362                           PIR2 equ 0Dh ;# 
  1363  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1364                           TMR1 equ 0Eh ;# 
  1365  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1366                           TMR1L equ 0Eh ;# 
  1367  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1368                           TMR1H equ 0Fh ;# 
  1369  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1370                           T1CON equ 010h ;# 
  1371  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1372                           TMR2 equ 011h ;# 
  1373  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1374                           T2CON equ 012h ;# 
  1375  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1376                           SSPBUF equ 013h ;# 
  1377  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1378                           SSPCON equ 014h ;# 
  1379  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1380                           CCPR1 equ 015h ;# 
  1381  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1382                           CCPR1L equ 015h ;# 
  1383  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1384                           CCPR1H equ 016h ;# 
  1385  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1386                           CCP1CON equ 017h ;# 
  1387  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1388                           RCSTA equ 018h ;# 
  1389  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1390                           TXREG equ 019h ;# 
  1391  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1392                           RCREG equ 01Ah ;# 
  1393  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1394                           CCPR2 equ 01Bh ;# 
  1395  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1396                           CCPR2L equ 01Bh ;# 
  1397  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1398                           CCPR2H equ 01Ch ;# 
  1399  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1400                           CCP2CON equ 01Dh ;# 
  1401  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1402                           ADRESH equ 01Eh ;# 
  1403  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1404                           ADCON0 equ 01Fh ;# 
  1405  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1406                           OPTION_REG equ 081h ;# 
  1407  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1408                           TRISA equ 085h ;# 
  1409  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1410                           TRISB equ 086h ;# 
  1411  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1412                           TRISC equ 087h ;# 
  1413  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1414                           TRISD equ 088h ;# 
  1415  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1416                           TRISE equ 089h ;# 
  1417  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1418                           PIE1 equ 08Ch ;# 
  1419  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1420                           PIE2 equ 08Dh ;# 
  1421  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1422                           PCON equ 08Eh ;# 
  1423  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1424                           OSCCON equ 08Fh ;# 
  1425  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1426                           OSCTUNE equ 090h ;# 
  1427  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1428                           SSPCON2 equ 091h ;# 
  1429  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1430                           PR2 equ 092h ;# 
  1431  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1432                           SSPADD equ 093h ;# 
  1433  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1434                           SSPMSK equ 093h ;# 
  1435  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1436                           MSK equ 093h ;# 
  1437  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1438                           SSPSTAT equ 094h ;# 
  1439  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1440                           WPUB equ 095h ;# 
  1441  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1442                           IOCB equ 096h ;# 
  1443  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1444                           VRCON equ 097h ;# 
  1445  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1446                           TXSTA equ 098h ;# 
  1447  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1448                           SPBRG equ 099h ;# 
  1449  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1450                           SPBRGH equ 09Ah ;# 
  1451  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1452                           PWM1CON equ 09Bh ;# 
  1453  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1454                           ECCPAS equ 09Ch ;# 
  1455  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1456                           PSTRCON equ 09Dh ;# 
  1457  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1458                           ADRESL equ 09Eh ;# 
  1459  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1460                           ADCON1 equ 09Fh ;# 
  1461  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1462                           WDTCON equ 0105h ;# 
  1463  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1464                           CM1CON0 equ 0107h ;# 
  1465  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1466                           CM2CON0 equ 0108h ;# 
  1467  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1468                           CM2CON1 equ 0109h ;# 
  1469  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1470                           EEDATA equ 010Ch ;# 
  1471  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1472                           EEDAT equ 010Ch ;# 
  1473  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1474                           EEADR equ 010Dh ;# 
  1475  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1476                           EEDATH equ 010Eh ;# 
  1477  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1478                           EEADRH equ 010Fh ;# 
  1479  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1480                           SRCON equ 0185h ;# 
  1481  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1482                           BAUDCTL equ 0187h ;# 
  1483  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1484                           ANSEL equ 0188h ;# 
  1485  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1486                           ANSELH equ 0189h ;# 
  1487  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1488                           EECON1 equ 018Ch ;# 
  1489  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1490                           EECON2 equ 018Dh ;# 
  1491  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1492                           INDF equ 00h ;# 
  1493  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1494                           TMR0 equ 01h ;# 
  1495  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1496                           PCL equ 02h ;# 
  1497  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1498                           STATUS equ 03h ;# 
  1499  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1500                           FSR equ 04h ;# 
  1501  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1502                           PORTA equ 05h ;# 
  1503  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1504                           PORTB equ 06h ;# 
  1505  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1506                           PORTC equ 07h ;# 
  1507  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1508                           PORTD equ 08h ;# 
  1509  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1510                           PORTE equ 09h ;# 
  1511  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1512                           PCLATH equ 0Ah ;# 
  1513  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1514                           INTCON equ 0Bh ;# 
  1515  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1516                           PIR1 equ 0Ch ;# 
  1517  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1518                           PIR2 equ 0Dh ;# 
  1519  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1520                           TMR1 equ 0Eh ;# 
  1521  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1522                           TMR1L equ 0Eh ;# 
  1523  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1524                           TMR1H equ 0Fh ;# 
  1525  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1526                           T1CON equ 010h ;# 
  1527  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1528                           TMR2 equ 011h ;# 
  1529  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1530                           T2CON equ 012h ;# 
  1531  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1532                           SSPBUF equ 013h ;# 
  1533  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1534                           SSPCON equ 014h ;# 
  1535  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1536                           CCPR1 equ 015h ;# 
  1537  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1538                           CCPR1L equ 015h ;# 
  1539  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1540                           CCPR1H equ 016h ;# 
  1541  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1542                           CCP1CON equ 017h ;# 
  1543  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1544                           RCSTA equ 018h ;# 
  1545  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1546                           TXREG equ 019h ;# 
  1547  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1548                           RCREG equ 01Ah ;# 
  1549  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1550                           CCPR2 equ 01Bh ;# 
  1551  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1552                           CCPR2L equ 01Bh ;# 
  1553  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1554                           CCPR2H equ 01Ch ;# 
  1555  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1556                           CCP2CON equ 01Dh ;# 
  1557  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1558                           ADRESH equ 01Eh ;# 
  1559  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1560                           ADCON0 equ 01Fh ;# 
  1561  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1562                           OPTION_REG equ 081h ;# 
  1563  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1564                           TRISA equ 085h ;# 
  1565  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1566                           TRISB equ 086h ;# 
  1567  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1568                           TRISC equ 087h ;# 
  1569  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1570                           TRISD equ 088h ;# 
  1571  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1572                           TRISE equ 089h ;# 
  1573  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1574                           PIE1 equ 08Ch ;# 
  1575  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1576                           PIE2 equ 08Dh ;# 
  1577  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1578                           PCON equ 08Eh ;# 
  1579  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1580                           OSCCON equ 08Fh ;# 
  1581  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1582                           OSCTUNE equ 090h ;# 
  1583  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1584                           SSPCON2 equ 091h ;# 
  1585  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1586                           PR2 equ 092h ;# 
  1587  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1588                           SSPADD equ 093h ;# 
  1589  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1590                           SSPMSK equ 093h ;# 
  1591  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1592                           MSK equ 093h ;# 
  1593  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1594                           SSPSTAT equ 094h ;# 
  1595  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1596                           WPUB equ 095h ;# 
  1597  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1598                           IOCB equ 096h ;# 
  1599  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1600                           VRCON equ 097h ;# 
  1601  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1602                           TXSTA equ 098h ;# 
  1603  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1604                           SPBRG equ 099h ;# 
  1605  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1606                           SPBRGH equ 09Ah ;# 
  1607  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1608                           PWM1CON equ 09Bh ;# 
  1609  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1610                           ECCPAS equ 09Ch ;# 
  1611  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1612                           PSTRCON equ 09Dh ;# 
  1613  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1614                           ADRESL equ 09Eh ;# 
  1615  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1616                           ADCON1 equ 09Fh ;# 
  1617  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1618                           WDTCON equ 0105h ;# 
  1619  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1620                           CM1CON0 equ 0107h ;# 
  1621  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1622                           CM2CON0 equ 0108h ;# 
  1623  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1624                           CM2CON1 equ 0109h ;# 
  1625  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1626                           EEDATA equ 010Ch ;# 
  1627  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1628                           EEDAT equ 010Ch ;# 
  1629  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1630                           EEADR equ 010Dh ;# 
  1631  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1632                           EEDATH equ 010Eh ;# 
  1633  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1634                           EEADRH equ 010Fh ;# 
  1635  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1636                           SRCON equ 0185h ;# 
  1637  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1638                           BAUDCTL equ 0187h ;# 
  1639  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1640                           ANSEL equ 0188h ;# 
  1641  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1642                           ANSELH equ 0189h ;# 
  1643  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1644                           EECON1 equ 018Ch ;# 
  1645  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1646                           EECON2 equ 018Dh ;# 
  1647  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1648                           INDF equ 00h ;# 
  1649  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1650                           TMR0 equ 01h ;# 
  1651  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1652                           PCL equ 02h ;# 
  1653  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1654                           STATUS equ 03h ;# 
  1655  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1656                           FSR equ 04h ;# 
  1657  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1658                           PORTA equ 05h ;# 
  1659  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1660                           PORTB equ 06h ;# 
  1661  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1662                           PORTC equ 07h ;# 
  1663  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1664                           PORTD equ 08h ;# 
  1665  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1666                           PORTE equ 09h ;# 
  1667  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1668                           PCLATH equ 0Ah ;# 
  1669  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1670                           INTCON equ 0Bh ;# 
  1671  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1672                           PIR1 equ 0Ch ;# 
  1673  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1674                           PIR2 equ 0Dh ;# 
  1675  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1676                           TMR1 equ 0Eh ;# 
  1677  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1678                           TMR1L equ 0Eh ;# 
  1679  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1680                           TMR1H equ 0Fh ;# 
  1681  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1682                           T1CON equ 010h ;# 
  1683  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1684                           TMR2 equ 011h ;# 
  1685  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1686                           T2CON equ 012h ;# 
  1687  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1688                           SSPBUF equ 013h ;# 
  1689  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1690                           SSPCON equ 014h ;# 
  1691  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1692                           CCPR1 equ 015h ;# 
  1693  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1694                           CCPR1L equ 015h ;# 
  1695  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1696                           CCPR1H equ 016h ;# 
  1697  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1698                           CCP1CON equ 017h ;# 
  1699  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1700                           RCSTA equ 018h ;# 
  1701  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1702                           TXREG equ 019h ;# 
  1703  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1704                           RCREG equ 01Ah ;# 
  1705  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1706                           CCPR2 equ 01Bh ;# 
  1707  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1708                           CCPR2L equ 01Bh ;# 
  1709  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1710                           CCPR2H equ 01Ch ;# 
  1711  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1712                           CCP2CON equ 01Dh ;# 
  1713  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1714                           ADRESH equ 01Eh ;# 
  1715  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1716                           ADCON0 equ 01Fh ;# 
  1717  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1718                           OPTION_REG equ 081h ;# 
  1719  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1720                           TRISA equ 085h ;# 
  1721  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1722                           TRISB equ 086h ;# 
  1723  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1724                           TRISC equ 087h ;# 
  1725  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1726                           TRISD equ 088h ;# 
  1727  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1728                           TRISE equ 089h ;# 
  1729  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1730                           PIE1 equ 08Ch ;# 
  1731  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1732                           PIE2 equ 08Dh ;# 
  1733  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1734                           PCON equ 08Eh ;# 
  1735  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1736                           OSCCON equ 08Fh ;# 
  1737  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1738                           OSCTUNE equ 090h ;# 
  1739  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1740                           SSPCON2 equ 091h ;# 
  1741  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1742                           PR2 equ 092h ;# 
  1743  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1744                           SSPADD equ 093h ;# 
  1745  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1746                           SSPMSK equ 093h ;# 
  1747  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1748                           MSK equ 093h ;# 
  1749  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1750                           SSPSTAT equ 094h ;# 
  1751  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1752                           WPUB equ 095h ;# 
  1753  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1754                           IOCB equ 096h ;# 
  1755  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1756                           VRCON equ 097h ;# 
  1757  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1758                           TXSTA equ 098h ;# 
  1759  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1760                           SPBRG equ 099h ;# 
  1761  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1762                           SPBRGH equ 09Ah ;# 
  1763  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1764                           PWM1CON equ 09Bh ;# 
  1765  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1766                           ECCPAS equ 09Ch ;# 
  1767  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1768                           PSTRCON equ 09Dh ;# 
  1769  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1770                           ADRESL equ 09Eh ;# 
  1771  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1772                           ADCON1 equ 09Fh ;# 
  1773  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1774                           WDTCON equ 0105h ;# 
  1775  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1776                           CM1CON0 equ 0107h ;# 
  1777  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1778                           CM2CON0 equ 0108h ;# 
  1779  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1780                           CM2CON1 equ 0109h ;# 
  1781  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1782                           EEDATA equ 010Ch ;# 
  1783  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1784                           EEDAT equ 010Ch ;# 
  1785  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1786                           EEADR equ 010Dh ;# 
  1787  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1788                           EEDATH equ 010Eh ;# 
  1789  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1790                           EEADRH equ 010Fh ;# 
  1791  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1792                           SRCON equ 0185h ;# 
  1793  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1794                           BAUDCTL equ 0187h ;# 
  1795  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1796                           ANSEL equ 0188h ;# 
  1797  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1798                           ANSELH equ 0189h ;# 
  1799  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1800                           EECON1 equ 018Ch ;# 
  1801  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1802                           EECON2 equ 018Dh ;# 
  1803  018D  ;; Function _rfid_read is unused but had its address taken
  1804                           global _rfid_read
  1805                           _rfid_read equ 0
  1806  0000  ;; Function _rfid_read_wait is unused but had its address taken
  1807                           global _rfid_read_wait
  1808                           _rfid_read_wait equ 0
  1809  0000  ;; Function _rfid_display is unused but had its address taken
  1810                           global _rfid_display
  1811                           _rfid_display equ 0
  1812  0000  ;; Function _rfid_display_wait is unused but had its address taken
  1813                           global _rfid_display_wait
  1814                           _rfid_display_wait equ 0
  1815  0000                     	FNCALL	_main,_MFRC522_AntiColl
  1816                           	FNCALL	_main,_delay_ms
  1817                           	FNCALL	_main,_hex2Ascii
  1818                           	FNCALL	_main,_lcd_clr
  1819                           	FNCALL	_main,_lcd_init
  1820                           	FNCALL	_main,_lcd_print
  1821                           	FNCALL	_main,_mfrc522Iniciar
  1822                           	FNCALL	_main,_procura_tag
  1823                           	FNCALL	_main,_prs_detect
  1824                           	FNCALL	_main,_sensors_init
  1825                           	FNCALL	_main,_spiSoftIniciar
  1826                           	FNCALL	_main,_spi_hardware_disable
  1827                           	FNCALL	_main,_tag_false
  1828                           	FNCALL	_main,_tmr_tick_init
  1829                           	FNCALL	_main,_uts_trigger
  1830                           	FNCALL	_prs_detect,_delay_ms
  1831                           	FNCALL	_procura_tag,_spiSoftTxCmd
  1832                           	FNCALL	_procura_tag,_spiSoftTxDat
  1833                           	FNCALL	_procura_tag,_tagTxCmd
  1834                           	FNCALL	_tagTxCmd,_mfrc522ClrBit
  1835                           	FNCALL	_tagTxCmd,_mfrc522SetBit
  1836                           	FNCALL	_tagTxCmd,_spiSoftRxDat
  1837                           	FNCALL	_tagTxCmd,_spiSoftTxCmd
  1838                           	FNCALL	_tagTxCmd,_spiSoftTxDat
  1839                           	FNCALL	_mfrc522ClrBit,_spiSoftRxDat
  1840                           	FNCALL	_mfrc522ClrBit,_spiSoftTxCmd
  1841                           	FNCALL	_mfrc522ClrBit,_spiSoftTxDat
  1842                           	FNCALL	_mfrc522Iniciar,_mfrc522AntOn
  1843                           	FNCALL	_mfrc522Iniciar,_mfrc522Rst
  1844                           	FNCALL	_mfrc522Iniciar,_spiSoftTxCmd
  1845                           	FNCALL	_mfrc522Iniciar,_spiSoftTxDat
  1846                           	FNCALL	_mfrc522Rst,_spiSoftTxCmd
  1847                           	FNCALL	_mfrc522Rst,_spiSoftTxDat
  1848                           	FNCALL	_mfrc522AntOn,_mfrc522SetBit
  1849                           	FNCALL	_mfrc522SetBit,_spiSoftRxDat
  1850                           	FNCALL	_mfrc522SetBit,_spiSoftTxCmd
  1851                           	FNCALL	_mfrc522SetBit,_spiSoftTxDat
  1852                           	FNCALL	_spiSoftTxCmd,_spiSoftClk
  1853                           	FNCALL	_lcd_print,_lcd_data
  1854                           	FNCALL	_lcd_print,_lcd_lincol
  1855                           	FNCALL	_lcd_lincol,_lcd_inst
  1856                           	FNCALL	_lcd_init,_lcd_inst
  1857                           	FNCALL	_lcd_clr,_lcd_inst
  1858                           	FNCALL	_MFRC522_AntiColl,_MFRC522_Clear_Bit
  1859                           	FNCALL	_MFRC522_AntiColl,_MFRC522_ToCard
  1860                           	FNCALL	_MFRC522_AntiColl,_MFRC522_Wr
  1861                           	FNCALL	_MFRC522_ToCard,_MFRC522_Clear_Bit
  1862                           	FNCALL	_MFRC522_ToCard,_MFRC522_Rd
  1863                           	FNCALL	_MFRC522_ToCard,_MFRC522_Set_Bit
  1864                           	FNCALL	_MFRC522_ToCard,_MFRC522_Wr
  1865                           	FNCALL	_MFRC522_Set_Bit,_MFRC522_Rd
  1866                           	FNCALL	_MFRC522_Set_Bit,_MFRC522_Wr
  1867                           	FNCALL	_MFRC522_Clear_Bit,_MFRC522_Rd
  1868                           	FNCALL	_MFRC522_Clear_Bit,_MFRC522_Wr
  1869                           	FNCALL	_MFRC522_Wr,_spiSoftTxDat
  1870                           	FNCALL	_MFRC522_Rd,_spiSoftRxDat
  1871                           	FNCALL	_MFRC522_Rd,_spiSoftTxDat
  1872                           	FNCALL	_spiSoftTxDat,_spiSoftClk
  1873                           	FNCALL	_spiSoftRxDat,_spiSoftClk
  1874                           	FNROOT	_main
  1875                           	FNCALL	_isr,___aldiv
  1876                           	FNCALL	_isr,___lmul
  1877                           	FNCALL	_isr,_tmr_tick_int
  1878                           	FNCALL	intlevel1,_isr
  1879                           	global	intlevel1
  1880                           	FNROOT	intlevel1
  1881                           	global	_TAG
  1882                           	global	main@F1412
  1883                           	global	main@F1418
  1884                           	global	main@F1414
  1885                           	global	_UID
  1886                           	global	_matEeprom
  1887                           	global	main@F1416
  1888                           	global	_uidAsci
  1889                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1890                           global __pidataBANK0
  1891                           __pidataBANK0:
  1892  07FB                     	file	"fsm_rfid.c"
  1893                           	line	17
  1894                           
  1895                           ;initializer for _TAG
  1896                           	retlw	030h
  1897  07FB  3430               	retlw	030h
  1898  07FC  3430               	retlw	030h
  1899  07FD  3430               	retlw	030h
  1900  07FE  3430               	retlw	low(0)
  1901  07FF  3400               psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1902                           global __pidataBANK1
  1903                           __pidataBANK1:
  1904  091C                     	file	"main.c"
  1905                           	line	33
  1906                           
  1907                           ;initializer for main@F1412
  1908                           	retlw	030h
  1909  091C  3430               	retlw	030h
  1910  091D  3430               	retlw	030h
  1911  091E  3430               	retlw	030h
  1912  091F  3430               	retlw	030h
  1913  0920  3430               	retlw	030h
  1914  0921  3430               	retlw	low(0)
  1915  0922  3400               	line	36
  1916                           
  1917                           ;initializer for main@F1418
  1918                           	retlw	0DAh
  1919  0923  34DA               	retlw	08h
  1920  0924  3408               	retlw	07Eh
  1921  0925  347E               	retlw	080h
  1922  0926  3480               	retlw	02Ch
  1923  0927  342C               	retlw	low(0)
  1924  0928  3400               	line	34
  1925                           
  1926                           ;initializer for main@F1414
  1927                           	retlw	030h
  1928  0929  3430               	retlw	030h
  1929  092A  3430               	retlw	030h
  1930  092B  3430               	retlw	030h
  1931  092C  3430               	retlw	low(0)
  1932  092D  3400               	file	"fsm_rfid.c"
  1933                           	line	16
  1934                           
  1935                           ;initializer for _UID
  1936                           	retlw	030h
  1937  092E  3430               	retlw	030h
  1938  092F  3430               	retlw	030h
  1939  0930  3430               	retlw	030h
  1940  0931  3430               	retlw	030h
  1941  0932  3430               	retlw	030h
  1942  0933  3430               	retlw	low(0)
  1943  0934  3400               psect	idataBANK2,class=CODE,space=0,delta=2,noexec
  1944                           global __pidataBANK2
  1945                           __pidataBANK2:
  1946  0B28                     	file	"eeprom.c"
  1947                           	line	51
  1948                           
  1949                           ;initializer for _matEeprom
  1950                           	retlw	0FFh
  1951  0B28  34FF               	retlw	0FFh
  1952  0B29  34FF               	retlw	0FFh
  1953  0B2A  34FF               	retlw	0FFh
  1954  0B2B  34FF               	retlw	0FFh
  1955  0B2C  34FF               	retlw	0FFh
  1956  0B2D  34FF               	retlw	0FFh
  1957  0B2E  34FF               	retlw	0FFh
  1958  0B2F  34FF               	retlw	0FFh
  1959  0B30  34FF               	retlw	0FFh
  1960  0B31  34FF               	retlw	0FFh
  1961  0B32  34FF               	retlw	0FFh
  1962  0B33  34FF               	retlw	0FFh
  1963  0B34  34FF               	retlw	0FFh
  1964  0B35  34FF               	retlw	0FFh
  1965  0B36  34FF               	retlw	0FFh
  1966  0B37  34FF               	retlw	0FFh
  1967  0B38  34FF               	retlw	0FFh
  1968  0B39  34FF               	retlw	0FFh
  1969  0B3A  34FF               	retlw	0FFh
  1970  0B3B  34FF               	retlw	0FFh
  1971  0B3C  34FF               	retlw	0FFh
  1972  0B3D  34FF               	retlw	0FFh
  1973  0B3E  34FF               	retlw	0FFh
  1974  0B3F  34FF               	retlw	0FFh
  1975  0B40  34FF               	retlw	0FFh
  1976  0B41  34FF               	retlw	0FFh
  1977  0B42  34FF               	retlw	0FFh
  1978  0B43  34FF               	retlw	0FFh
  1979  0B44  34FF               	retlw	0FFh
  1980  0B45  34FF               	retlw	0FFh
  1981  0B46  34FF               	retlw	0FFh
  1982  0B47  34FF               	retlw	0FFh
  1983  0B48  34FF               	retlw	0FFh
  1984  0B49  34FF               	retlw	0FFh
  1985  0B4A  34FF               	retlw	0FFh
  1986  0B4B  34FF               	retlw	0FFh
  1987  0B4C  34FF               	retlw	0FFh
  1988  0B4D  34FF               	retlw	0FFh
  1989  0B4E  34FF               	retlw	0FFh
  1990  0B4F  34FF               	retlw	0FFh
  1991  0B50  34FF               	retlw	0FFh
  1992  0B51  34FF               	retlw	0FFh
  1993  0B52  34FF               	retlw	0FFh
  1994  0B53  34FF               	retlw	0FFh
  1995  0B54  34FF               	retlw	0FFh
  1996  0B55  34FF               	retlw	0FFh
  1997  0B56  34FF               	retlw	0FFh
  1998  0B57  34FF               	retlw	0FFh
  1999  0B58  34FF               	retlw	0FFh
  2000  0B59  34FF               	retlw	0FFh
  2001  0B5A  34FF               	retlw	0FFh
  2002  0B5B  34FF               	retlw	0FFh
  2003  0B5C  34FF               	retlw	0FFh
  2004  0B5D  34FF               	retlw	0FFh
  2005  0B5E  34FF               psect	idataBANK3,class=CODE,space=0,delta=2,noexec
  2006                           global __pidataBANK3
  2007                           __pidataBANK3:
  2008  09CF                     	file	"rfid.c"
  2009                           	line	25
  2010                           
  2011                           ;initializer for _dados_tag
  2012                           	retlw	05Fh
  2013  09CF  345F               	retlw	05Fh
  2014  09D0  345F               	retlw	05Fh
  2015  09D1  345F               	retlw	05Fh
  2016  09D2  345F               	retlw	05Fh
  2017  09D3  345F               	retlw	05Fh
  2018  09D4  345F               	retlw	05Fh
  2019  09D5  345F               	retlw	05Fh
  2020  09D6  345F               	retlw	05Fh
  2021  09D7  345F               	retlw	05Fh
  2022  09D8  345F               	retlw	05Fh
  2023  09D9  345F               	retlw	05Fh
  2024  09DA  345F               	retlw	05Fh
  2025  09DB  345F               	retlw	05Fh
  2026  09DC  345F               	retlw	05Fh
  2027  09DD  345F               	retlw	05Fh
  2028  09DE  345F               	retlw	low(0)
  2029  09DF  3400               	file	"main.c"
  2030                           	line	35
  2031                           
  2032                           ;initializer for main@F1416
  2033                           	retlw	05Fh
  2034  09E0  345F               	retlw	05Fh
  2035  09E1  345F               	retlw	05Fh
  2036  09E2  345F               	retlw	05Fh
  2037  09E3  345F               	retlw	05Fh
  2038  09E4  345F               	retlw	05Fh
  2039  09E5  345F               	retlw	05Fh
  2040  09E6  345F               	retlw	05Fh
  2041  09E7  345F               	retlw	05Fh
  2042  09E8  345F               	retlw	05Fh
  2043  09E9  345F               	retlw	05Fh
  2044  09EA  345F               	retlw	05Fh
  2045  09EB  345F               	retlw	low(0)
  2046  09EC  3400               	file	"fsm_rfid.c"
  2047                           	line	18
  2048                           
  2049                           ;initializer for _uidAsci
  2050                           	retlw	05Fh
  2051  09ED  345F               	retlw	05Fh
  2052  09EE  345F               	retlw	05Fh
  2053  09EF  345F               	retlw	05Fh
  2054  09F0  345F               	retlw	05Fh
  2055  09F1  345F               	retlw	05Fh
  2056  09F2  345F               	retlw	05Fh
  2057  09F3  345F               	retlw	05Fh
  2058  09F4  345F               	retlw	05Fh
  2059  09F5  345F               	retlw	05Fh
  2060  09F6  345F               	retlw	05Fh
  2061  09F7  345F               	retlw	05Fh
  2062  09F8  345F               	retlw	low(0)
  2063  09F9  3400               psect	strings,class=STRING,delta=2,noexec
  2064                           global __pstrings
  2065                           __pstrings:
  2066  0800                     stringtab:
  2067  0800                     	global    __stringtab
  2068                           __stringtab:
  2069  0800                     ;	String table - string pointers are 1 byte each
  2070                           	btfsc	(btemp+1),7
  2071  0800  1BFF               	ljmp	stringcode
  2072  0801  280A               	bcf	status,7
  2073  0802  1383               	btfsc	(btemp+1),0
  2074  0803  187F               	bsf	status,7
  2075  0804  1783               	movf	indf,w
  2076  0805  0800               	incf fsr
  2077  0806  0A84               skipnz
  2078  0807  1903               incf btemp+1
  2079  0808  0AFF               	return
  2080  0809  0008               stringcode:stringdir:
  2081  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
  2082  080A  3008               movwf pclath
  2083  080B  008A               movf fsr,w
  2084  080C  0804               incf fsr
  2085  080D  0A84               	addwf pc
  2086  080E  0782               	global __stringbase
  2087                           __stringbase:
  2088  080F                     	retlw	0
  2089  080F  3400               psect	strings
  2090                           	global    __end_of__stringtab
  2091                           __end_of__stringtab:
  2092  0810                     	file	"tmr_tick.c"
  2093                           	line	4
  2094                           _tmr_tick_reload:
  2095  0810                     	retlw	078h
  2096  0810  3478               	retlw	0ECh
  2097  0811  34EC               
  2098                           	global __end_of_tmr_tick_reload
  2099                           __end_of_tmr_tick_reload:
  2100  0812                     	global	_timer
  2101                           	global	_time
  2102                           	global	_t_sensor
  2103                           	global	_uid
  2104                           	global	_ret
  2105                           	global	_dist
  2106                           	global	_PORTAbits
  2107                           _PORTAbits	set	0x5
  2108  0005                     	global	_PIR1bits
  2109                           _PIR1bits	set	0xC
  2110  000C                     	global	_T1CONbits
  2111                           _T1CONbits	set	0x10
  2112  0010                     	global	_TMR1L
  2113                           _TMR1L	set	0xE
  2114  000E                     	global	_TMR1H
  2115                           _TMR1H	set	0xF
  2116  000F                     	global	_PORTBbits
  2117                           _PORTBbits	set	0x6
  2118  0006                     	global	_INTCONbits
  2119                           _INTCONbits	set	0xB
  2120  000B                     	global	_PORTD
  2121                           _PORTD	set	0x8
  2122  0008                     	global	_PORTDbits
  2123                           _PORTDbits	set	0x8
  2124  0008                     	global	_PORTCbits
  2125                           _PORTCbits	set	0x7
  2126  0007                     	global	_SSPEN
  2127                           _SSPEN	set	0xA5
  2128  00A5                     	global	_IOCBbits
  2129                           _IOCBbits	set	0x96
  2130  0096                     	global	_TRISAbits
  2131                           _TRISAbits	set	0x85
  2132  0085                     	global	_PIE1bits
  2133                           _PIE1bits	set	0x8C
  2134  008C                     	global	_TRISDbits
  2135                           _TRISDbits	set	0x88
  2136  0088                     	global	_TRISBbits
  2137                           _TRISBbits	set	0x86
  2138  0086                     	global	_TRISCbits
  2139                           _TRISCbits	set	0x87
  2140  0087                     	global	_SSPIE
  2141                           _SSPIE	set	0x463
  2142  0463                     	global	_EEDATA
  2143                           _EEDATA	set	0x10C
  2144  010C                     	global	_EEADR
  2145                           _EEADR	set	0x10D
  2146  010D                     	global	_C2ON
  2147                           _C2ON	set	0x847
  2148  0847                     	global	_EECON2
  2149                           _EECON2	set	0x18D
  2150  018D                     	global	_EECON1bits
  2151                           _EECON1bits	set	0x18C
  2152  018C                     	global	_ANSELH
  2153                           _ANSELH	set	0x189
  2154  0189                     	global	_ANSEL
  2155                           _ANSEL	set	0x188
  2156  0188                     	
  2157                           STR_9:	
  2158  0812                     	retlw	77	;'M'
  2159  0812  344D               	retlw	65	;'A'
  2160  0813  3441               	retlw	81	;'Q'
  2161  0814  3451               	retlw	46	;'.'
  2162  0815  342E               	retlw	32	;' '
  2163  0816  3420               	retlw	69	;'E'
  2164  0817  3445               	retlw	78	;'N'
  2165  0818  344E               	retlw	69	;'E'
  2166  0819  3445               	retlw	82	;'R'
  2167  081A  3452               	retlw	71	;'G'
  2168  081B  3447               	retlw	73	;'I'
  2169  081C  3449               	retlw	90	;'Z'
  2170  081D  345A               	retlw	65	;'A'
  2171  081E  3441               	retlw	68	;'D'
  2172  081F  3444               	retlw	65	;'A'
  2173  0820  3441               	retlw	0
  2174  0821  3400               psect	strings
  2175                           	
  2176                           STR_6:	
  2177  0822                     	retlw	71	;'G'
  2178  0822  3447               	retlw	97	;'a'
  2179  0823  3461               	retlw	98	;'b'
  2180  0824  3462               	retlw	114	;'r'
  2181  0825  3472               	retlw	105	;'i'
  2182  0826  3469               	retlw	101	;'e'
  2183  0827  3465               	retlw	108	;'l'
  2184  0828  346C               	retlw	32	;' '
  2185  0829  3420               	retlw	76	;'L'
  2186  082A  344C               	retlw	97	;'a'
  2187  082B  3461               	retlw	99	;'c'
  2188  082C  3463               	retlw	101	;'e'
  2189  082D  3465               	retlw	114	;'r'
  2190  082E  3472               	retlw	100	;'d'
  2191  082F  3464               	retlw	97	;'a'
  2192  0830  3461               	retlw	0
  2193  0831  3400               psect	strings
  2194                           	
  2195                           STR_1:	
  2196  0832                     	retlw	73	;'I'
  2197  0832  3449               	retlw	78	;'N'
  2198  0833  344E               	retlw	68	;'D'
  2199  0834  3444               	retlw	85	;'U'
  2200  0835  3455               	retlw	83	;'S'
  2201  0836  3453               	retlw	84	;'T'
  2202  0837  3454               	retlw	82	;'R'
  2203  0838  3452               	retlw	73	;'I'
  2204  0839  3449               	retlw	65	;'A'
  2205  083A  3441               	retlw	76	;'L'
  2206  083B  344C               	retlw	0
  2207  083C  3400               psect	strings
  2208                           	
  2209                           STR_3:	
  2210  083D                     	retlw	69	;'E'
  2211  083D  3445               	retlw	83	;'S'
  2212  083E  3453               	retlw	80	;'P'
  2213  083F  3450               	retlw	69	;'E'
  2214  0840  3445               	retlw	82	;'R'
  2215  0841  3452               	retlw	65	;'A'
  2216  0842  3441               	retlw	78	;'N'
  2217  0843  344E               	retlw	68	;'D'
  2218  0844  3444               	retlw	79	;'O'
  2219  0845  344F               	retlw	0
  2220  0846  3400               psect	strings
  2221                           	
  2222                           STR_13:	
  2223  0847                     	retlw	32	;' '
  2224  0847  3420               	retlw	76	;'L'
  2225  0848  344C               	retlw	73	;'I'
  2226  0849  3449               	retlw	86	;'V'
  2227  084A  3456               	retlw	82	;'R'
  2228  084B  3452               	retlw	69	;'E'
  2229  084C  3445               	retlw	32	;' '
  2230  084D  3420               	retlw	32	;' '
  2231  084E  3420               	retlw	0
  2232  084F  3400               psect	strings
  2233                           	
  2234                           STR_8:	
  2235  0850                     	retlw	76	;'L'
  2236  0850  344C               	retlw	73	;'I'
  2237  0851  3449               	retlw	66	;'B'
  2238  0852  3442               	retlw	69	;'E'
  2239  0853  3445               	retlw	82	;'R'
  2240  0854  3452               	retlw	65	;'A'
  2241  0855  3441               	retlw	68	;'D'
  2242  0856  3444               	retlw	79	;'O'
  2243  0857  344F               	retlw	0
  2244  0858  3400               psect	strings
  2245                           	
  2246                           STR_12:	
  2247  0859                     	retlw	32	;' '
  2248  0859  3420               	retlw	65	;'A'
  2249  085A  3441               	retlw	76	;'L'
  2250  085B  344C               	retlw	69	;'E'
  2251  085C  3445               	retlw	82	;'R'
  2252  085D  3452               	retlw	84	;'T'
  2253  085E  3454               	retlw	65	;'A'
  2254  085F  3441               	retlw	0
  2255  0860  3400               psect	strings
  2256                           	
  2257                           STR_11:	
  2258  0861                     	retlw	78	;'N'
  2259  0861  344E               	retlw	69	;'E'
  2260  0862  3445               	retlw	71	;'G'
  2261  0863  3447               	retlw	65	;'A'
  2262  0864  3441               	retlw	68	;'D'
  2263  0865  3444               	retlw	79	;'O'
  2264  0866  344F               	retlw	0
  2265  0867  3400               psect	strings
  2266                           	
  2267                           STR_4:	
  2268  0868                     	retlw	65	;'A'
  2269  0868  3441               	retlw	67	;'C'
  2270  0869  3443               	retlw	69	;'E'
  2271  086A  3445               	retlw	83	;'S'
  2272  086B  3453               	retlw	83	;'S'
  2273  086C  3453               	retlw	79	;'O'
  2274  086D  344F               	retlw	0
  2275  086E  3400               psect	strings
  2276                           	
  2277                           STR_2:	
  2278  086F                     	retlw	83	;'S'
  2279  086F  3453               	retlw	65	;'A'
  2280  0870  3441               	retlw	70	;'F'
  2281  0871  3446               	retlw	69	;'E'
  2282  0872  3445               	retlw	84	;'T'
  2283  0873  3454               	retlw	89	;'Y'
  2284  0874  3459               	retlw	0
  2285  0875  3400               psect	strings
  2286                           	
  2287                           STR_5:	
  2288  0876                     	retlw	84	;'T'
  2289  0876  3454               	retlw	65	;'A'
  2290  0877  3441               	retlw	71	;'G'
  2291  0878  3447               	retlw	32	;' '
  2292  0879  3420               	retlw	58	;':'
  2293  087A  343A               	retlw	0
  2294  087B  3400               psect	strings
  2295                           	
  2296                           STR_14:	
  2297  087C                     	retlw	80	;'P'
  2298  087C  3450               	retlw	65	;'A'
  2299  087D  3441               	retlw	82	;'R'
  2300  087E  3452               	retlw	65	;'A'
  2301  087F  3441               	retlw	82	;'R'
  2302  0880  3452               	retlw	0
  2303  0881  3400               psect	strings
  2304                           	
  2305                           STR_15:	
  2306  0882                     	retlw	60	;'<'
  2307  0882  343C               	retlw	0
  2308  0883  3400               psect	strings
  2309                           	
  2310                           STR_16:	
  2311  0884                     	retlw	62	;'>'
  2312  0884  343E               	retlw	0
  2313  0885  3400               psect	strings
  2314                           STR_7	equ	STR_4+0
  2315  0868                     STR_10	equ	STR_4+0
  2316  0868                     ; #config settings
  2317                           global __CFG_FOSC$HS
  2318                           __CFG_FOSC$HS equ 0x0
  2319  0000                     global __CFG_WDTE$OFF
  2320                           __CFG_WDTE$OFF equ 0x0
  2321  0000                     global __CFG_PWRTE$OFF
  2322                           __CFG_PWRTE$OFF equ 0x0
  2323  0000                     global __CFG_MCLRE$OFF
  2324                           __CFG_MCLRE$OFF equ 0x0
  2325  0000                     global __CFG_CP$OFF
  2326                           __CFG_CP$OFF equ 0x0
  2327  0000                     global __CFG_CPD$OFF
  2328                           __CFG_CPD$OFF equ 0x0
  2329  0000                     global __CFG_BOREN$OFF
  2330                           __CFG_BOREN$OFF equ 0x0
  2331  0000                     global __CFG_IESO$OFF
  2332                           __CFG_IESO$OFF equ 0x0
  2333  0000                     global __CFG_FCMEN$OFF
  2334                           __CFG_FCMEN$OFF equ 0x0
  2335  0000                     global __CFG_LVP$OFF
  2336                           __CFG_LVP$OFF equ 0x0
  2337  0000                     global __CFG_BOR4V$BOR40V
  2338                           __CFG_BOR4V$BOR40V equ 0x0
  2339  0000                     global __CFG_WRT$OFF
  2340                           __CFG_WRT$OFF equ 0x0
  2341  0000                     	file	"C:\Users\211934~3.000\AppData\Local\Temp\s8po."
  2342                           	line	#
  2343                           psect cinit,class=CODE,delta=2
  2344                           global start_initialization
  2345                           start_initialization:
  2346  0013                     
  2347                           global __initialization
  2348                           __initialization:
  2349  0013                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2350                           global __pbssCOMMON
  2351                           __pbssCOMMON:
  2352  007A                     _f_mp:
  2353  007A                            ds      1
  2354  007A                     
  2355                           _c:
  2356  007B                            ds      1
  2357  007B                     
  2358                           _find:
  2359  007C                            ds      1
  2360  007C                     
  2361                           _b:
  2362  007D                            ds      1
  2363  007D                     
  2364                           psect	bssBANK0,class=BANK0,space=1,noexec
  2365                           global __pbssBANK0
  2366                           __pbssBANK0:
  2367  0041                     _timer:
  2368  0041                            ds      8
  2369  0041                     
  2370                           _time:
  2371  0049                            ds      4
  2372  0049                     
  2373                           _t_sensor:
  2374  004D                            ds      2
  2375  004D                     
  2376                           _uid:
  2377  004F                            ds      1
  2378  004F                     
  2379                           _ret:
  2380  0050                            ds      1
  2381  0050                     
  2382                           psect	dataBANK0,class=BANK0,space=1,noexec
  2383                           global __pdataBANK0
  2384                           __pdataBANK0:
  2385  0051                     	file	"fsm_rfid.c"
  2386                           	line	17
  2387                           _TAG:
  2388  0051                            ds      5
  2389  0051                     
  2390                           psect	bssBANK1,class=BANK1,space=1,noexec
  2391                           global __pbssBANK1
  2392                           __pbssBANK1:
  2393  00E8                     _dist:
  2394  00E8                            ds      4
  2395  00E8                     
  2396                           psect	dataBANK1,class=BANK1,space=1,noexec
  2397                           global __pdataBANK1
  2398                           __pdataBANK1:
  2399  00CF                     	file	"main.c"
  2400                           	line	33
  2401                           main@F1412:
  2402  00CF                            ds      7
  2403  00CF                     
  2404                           psect	dataBANK1
  2405                           	file	"main.c"
  2406                           	line	36
  2407                           main@F1418:
  2408  00D6                            ds      6
  2409  00D6                     
  2410                           psect	dataBANK1
  2411                           	file	"main.c"
  2412                           	line	34
  2413                           main@F1414:
  2414  00DC                            ds      5
  2415  00DC                     
  2416                           psect	dataBANK1
  2417                           	file	"fsm_rfid.c"
  2418                           	line	16
  2419                           _UID:
  2420  00E1                            ds      7
  2421  00E1                     
  2422                           psect	dataBANK3,class=BANK3,space=1,noexec
  2423                           global __pdataBANK3
  2424                           __pdataBANK3:
  2425  0190                     	file	"rfid.c"
  2426                           	line	25
  2427                           _dados_tag:
  2428  0190                            ds      17
  2429  0190                     
  2430                           psect	dataBANK3
  2431                           	file	"main.c"
  2432                           	line	35
  2433                           main@F1416:
  2434  01A1                            ds      13
  2435  01A1                     
  2436                           psect	dataBANK3
  2437                           	file	"fsm_rfid.c"
  2438                           	line	18
  2439                           _uidAsci:
  2440  01AE                            ds      13
  2441  01AE                     
  2442                           psect	dataBANK2,class=BANK2,space=1,noexec
  2443                           global __pdataBANK2
  2444                           __pdataBANK2:
  2445  0110                     	file	"eeprom.c"
  2446                           	line	51
  2447                           _matEeprom:
  2448  0110                            ds      55
  2449  0110                     
  2450                           	file	"C:\Users\211934~3.000\AppData\Local\Temp\s8po."
  2451                           	line	#
  2452                           global btemp
  2453                           psect inittext,class=CODE,delta=2
  2454                           global init_fetch0,btemp
  2455                           ;	Called with low address in FSR and high address in W
  2456                           init_fetch0:
  2457  089C                     	movf btemp,w
  2458  089C  087E               	movwf pclath
  2459  089D  008A               	movf btemp+1,w
  2460  089E  087F               	movwf pc
  2461  089F  0082               global init_ram0
  2462                           ;Called with:
  2463                           ;	high address of idata address in btemp 
  2464                           ;	low address of idata address in btemp+1 
  2465                           ;	low address of data in FSR
  2466                           ;	high address + 1 of data in btemp-1
  2467                           init_ram0:
  2468  08A0                     	fcall init_fetch0
  2469  08A0  120A  158A  209C  120A  158A  	movwf indf,f
  2470  08A5  0080               	incf fsr,f
  2471  08A6  0A84               	movf fsr,w
  2472  08A7  0804               	xorwf btemp-1,w
  2473  08A8  067D               	btfsc status,2
  2474  08A9  1903               	retlw 0
  2475  08AA  3400               	incf btemp+1,f
  2476  08AB  0AFF               	btfsc status,2
  2477  08AC  1903               	incf btemp,f
  2478  08AD  0AFE               	goto init_ram0
  2479  08AE  28A0               ; Initialize objects allocated to BANK3
  2480                           psect cinit,class=CODE,delta=2,merge=1
  2481                           global init_ram0, __pidataBANK3
  2482                           	bsf	status, 7	;select IRP bank2
  2483  0013  1783               	movlw low(__pdataBANK3+43)
  2484  0014  30BB               	movwf btemp-1,f
  2485  0015  00FD               	movlw high(__pidataBANK3)
  2486  0016  3009               	movwf btemp,f
  2487  0017  00FE               	movlw low(__pidataBANK3)
  2488  0018  30CF               	movwf btemp+1,f
  2489  0019  00FF               	movlw low(__pdataBANK3)
  2490  001A  3090               	movwf fsr,f
  2491  001B  0084               	fcall init_ram0
  2492  001C  120A  158A  20A0  120A  118A  ; Initialize objects allocated to BANK2
  2493                           psect cinit,class=CODE,delta=2,merge=1
  2494                           global init_ram0, __pidataBANK2
  2495                           	movlw low(__pdataBANK2+55)
  2496  0021  3047               	movwf btemp-1,f
  2497  0022  00FD               	movlw high(__pidataBANK2)
  2498  0023  300B               	movwf btemp,f
  2499  0024  00FE               	movlw low(__pidataBANK2)
  2500  0025  3028               	movwf btemp+1,f
  2501  0026  00FF               	movlw low(__pdataBANK2)
  2502  0027  3010               	movwf fsr,f
  2503  0028  0084               	fcall init_ram0
  2504  0029  120A  158A  20A0  120A  118A  ; Initialize objects allocated to BANK1
  2505                           psect cinit,class=CODE,delta=2,merge=1
  2506                           global init_ram0, __pidataBANK1
  2507                           	bcf	status, 7	;select IRP bank0
  2508  002E  1383               	movlw low(__pdataBANK1+25)
  2509  002F  30E8               	movwf btemp-1,f
  2510  0030  00FD               	movlw high(__pidataBANK1)
  2511  0031  3009               	movwf btemp,f
  2512  0032  00FE               	movlw low(__pidataBANK1)
  2513  0033  301C               	movwf btemp+1,f
  2514  0034  00FF               	movlw low(__pdataBANK1)
  2515  0035  30CF               	movwf fsr,f
  2516  0036  0084               	fcall init_ram0
  2517  0037  120A  158A  20A0  120A  118A  ; Initialize objects allocated to BANK0
  2518                           psect cinit,class=CODE,delta=2,merge=1
  2519                           global init_ram0, __pidataBANK0
  2520                           	movlw low(__pdataBANK0+5)
  2521  003C  3056               	movwf btemp-1,f
  2522  003D  00FD               	movlw high(__pidataBANK0)
  2523  003E  3007               	movwf btemp,f
  2524  003F  00FE               	movlw low(__pidataBANK0)
  2525  0040  30FB               	movwf btemp+1,f
  2526  0041  00FF               	movlw low(__pdataBANK0)
  2527  0042  3051               	movwf fsr,f
  2528  0043  0084               	fcall init_ram0
  2529  0044  120A  158A  20A0  120A  118A  	line	#
  2530                           psect clrtext,class=CODE,delta=2
  2531                           global clear_ram0
  2532                           ;	Called with FSR containing the base address, and
  2533                           ;	W with the last address+1
  2534                           clear_ram0:
  2535  17D3                     	clrwdt			;clear the watchdog before getting into this loop
  2536  17D3  0064               clrloop0:
  2537  17D4                     	clrf	indf		;clear RAM location pointed to by FSR
  2538  17D4  0180               	incf	fsr,f		;increment pointer
  2539  17D5  0A84               	xorwf	fsr,w		;XOR with final address
  2540  17D6  0604               	btfsc	status,2	;have we reached the end yet?
  2541  17D7  1903               	retlw	0		;all done for this memory range, return
  2542  17D8  3400               	xorwf	fsr,w		;XOR again to restore value
  2543  17D9  0604               	goto	clrloop0		;do the next byte
  2544  17DA  2FD4               
  2545                           ; Clear objects allocated to BANK1
  2546                           psect cinit,class=CODE,delta=2,merge=1
  2547                           	bsf	status, 5	;RP0=1, select bank1
  2548  0049  1683               	bcf	status, 6	;RP1=0, select bank1
  2549  004A  1303               	clrf	((__pbssBANK1)+0)&07Fh
  2550  004B  01E8               	clrf	((__pbssBANK1)+1)&07Fh
  2551  004C  01E9               	clrf	((__pbssBANK1)+2)&07Fh
  2552  004D  01EA               	clrf	((__pbssBANK1)+3)&07Fh
  2553  004E  01EB               ; Clear objects allocated to BANK0
  2554                           psect cinit,class=CODE,delta=2,merge=1
  2555                           	movlw	low(__pbssBANK0)
  2556  004F  3041               	movwf	fsr
  2557  0050  0084               	movlw	low((__pbssBANK0)+010h)
  2558  0051  3051               	fcall	clear_ram0
  2559  0052  160A  118A  27D3  120A  118A  ; Clear objects allocated to COMMON
  2560                           psect cinit,class=CODE,delta=2,merge=1
  2561                           	clrf	((__pbssCOMMON)+0)&07Fh
  2562  0057  01FA               	clrf	((__pbssCOMMON)+1)&07Fh
  2563  0058  01FB               	clrf	((__pbssCOMMON)+2)&07Fh
  2564  0059  01FC               	clrf	((__pbssCOMMON)+3)&07Fh
  2565  005A  01FD               psect cinit,class=CODE,delta=2,merge=1
  2566                           global end_of_initialization,__end_of__initialization
  2567                           
  2568                           ;End of C runtime variable initialization code
  2569                           
  2570                           end_of_initialization:
  2571  005B                     __end_of__initialization:
  2572  005B                     clrf status
  2573  005B  0183               ljmp _main	;jump to C main() function
  2574  005C  120A  118A  285F   psect	cstackBANK3,class=BANK3,space=1,noexec
  2575                           global __pcstackBANK3
  2576                           __pcstackBANK3:
  2577  01BB                     	global	main@uidAsci
  2578                           main@uidAsci:	; 13 bytes @ 0x0
  2579  01BB                     	ds	13
  2580  01BB                     	global	main@senha
  2581                           main@senha:	; 6 bytes @ 0xD
  2582  01C8                     	ds	6
  2583  01C8                     	global	main@TAG
  2584                           main@TAG:	; 5 bytes @ 0x13
  2585  01CE                     	ds	5
  2586  01CE                     	global	main@UID
  2587                           main@UID:	; 7 bytes @ 0x18
  2588  01D3                     	ds	7
  2589  01D3                     	global	main@perigo
  2590                           main@perigo:	; 2 bytes @ 0x1F
  2591  01DA                     	ds	2
  2592  01DA                     	global	main@uid
  2593                           main@uid:	; 1 bytes @ 0x21
  2594  01DC                     	ds	1
  2595  01DC                     	global	main@state
  2596                           main@state:	; 1 bytes @ 0x22
  2597  01DD                     	ds	1
  2598  01DD                     psect	cstackBANK1,class=BANK1,space=1,noexec
  2599                           global __pcstackBANK1
  2600                           __pcstackBANK1:
  2601  00A0                     ??_spi_hardware_disable:	; 1 bytes @ 0x0
  2602  00A0                     ??_spiSoftIniciar:	; 1 bytes @ 0x0
  2603  00A0                     ??_sensors_init:	; 1 bytes @ 0x0
  2604  00A0                     ??_tmr_tick_init:	; 1 bytes @ 0x0
  2605  00A0                     ?_delay_ms:	; 1 bytes @ 0x0
  2606  00A0                     ?_hex2Ascii:	; 1 bytes @ 0x0
  2607  00A0                     ?_tag_false:	; 1 bytes @ 0x0
  2608  00A0                     ??_uts_trigger:	; 1 bytes @ 0x0
  2609  00A0                     ?_spiSoftTxCmd:	; 1 bytes @ 0x0
  2610  00A0                     ??_spiSoftRxDat:	; 1 bytes @ 0x0
  2611  00A0                     ??_spiSoftTxDat:	; 1 bytes @ 0x0
  2612  00A0                     ??_lcd_inst:	; 1 bytes @ 0x0
  2613  00A0                     ??_lcd_data:	; 1 bytes @ 0x0
  2614  00A0                     ??_spiSoftClk:	; 1 bytes @ 0x0
  2615  00A0                     	global	tag_false@p2
  2616                           tag_false@p2:	; 1 bytes @ 0x0
  2617  00A0                     	global	spiSoftTxCmd@oper
  2618                           spiSoftTxCmd@oper:	; 1 bytes @ 0x0
  2619  00A0                     	global	delay_ms@t
  2620                           delay_ms@t:	; 2 bytes @ 0x0
  2621  00A0                     	global	hex2Ascii@strIn
  2622                           hex2Ascii@strIn:	; 2 bytes @ 0x0
  2623  00A0                     	ds	1
  2624  00A0                     ??_tag_false:	; 1 bytes @ 0x1
  2625  00A1                     ??_spiSoftTxCmd:	; 1 bytes @ 0x1
  2626  00A1                     	ds	1
  2627  00A1                     ??_delay_ms:	; 1 bytes @ 0x2
  2628  00A2                     	global	lcd_inst@i
  2629                           lcd_inst@i:	; 1 bytes @ 0x2
  2630  00A2                     	global	lcd_data@d
  2631                           lcd_data@d:	; 1 bytes @ 0x2
  2632  00A2                     	global	hex2Ascii@strOut
  2633                           hex2Ascii@strOut:	; 1 bytes @ 0x2
  2634  00A2                     	global	spiSoftTxDat@dado
  2635                           spiSoftTxDat@dado:	; 1 bytes @ 0x2
  2636  00A2                     	global	spiSoftRxDat@rc
  2637                           spiSoftRxDat@rc:	; 1 bytes @ 0x2
  2638  00A2                     	ds	1
  2639  00A2                     ??_lcd_init:	; 1 bytes @ 0x3
  2640  00A3                     ??_lcd_clr:	; 1 bytes @ 0x3
  2641  00A3                     ?_lcd_lincol:	; 1 bytes @ 0x3
  2642  00A3                     	global	lcd_lincol@col
  2643                           lcd_lincol@col:	; 1 bytes @ 0x3
  2644  00A3                     	global	hex2Ascii@cntDig
  2645                           hex2Ascii@cntDig:	; 1 bytes @ 0x3
  2646  00A3                     	global	spiSoftTxCmd@end
  2647                           spiSoftTxCmd@end:	; 1 bytes @ 0x3
  2648  00A3                     	global	spiSoftTxDat@reg
  2649                           spiSoftTxDat@reg:	; 1 bytes @ 0x3
  2650  00A3                     	global	spiSoftRxDat@a
  2651                           spiSoftRxDat@a:	; 1 bytes @ 0x3
  2652  00A3                     	ds	1
  2653  00A3                     ??_hex2Ascii:	; 1 bytes @ 0x4
  2654  00A4                     ??_prs_detect:	; 1 bytes @ 0x4
  2655  00A4                     ??_lcd_lincol:	; 1 bytes @ 0x4
  2656  00A4                     	global	tag_false@p1
  2657                           tag_false@p1:	; 1 bytes @ 0x4
  2658  00A4                     	global	spiSoftTxCmd@a
  2659                           spiSoftTxCmd@a:	; 1 bytes @ 0x4
  2660  00A4                     	global	spiSoftTxDat@a
  2661                           spiSoftTxDat@a:	; 1 bytes @ 0x4
  2662  00A4                     	ds	1
  2663  00A4                     ??_MFRC522_Rd:	; 1 bytes @ 0x5
  2664  00A5                     	global	lcd_lincol@lin
  2665                           lcd_lincol@lin:	; 1 bytes @ 0x5
  2666  00A5                     	global	tag_false@ret
  2667                           tag_false@ret:	; 1 bytes @ 0x5
  2668  00A5                     	global	spiSoftTxCmd@reg
  2669                           spiSoftTxCmd@reg:	; 1 bytes @ 0x5
  2670  00A5                     	ds	1
  2671  00A5                     ?_lcd_print:	; 1 bytes @ 0x6
  2672  00A6                     ?_mfrc522ClrBit:	; 1 bytes @ 0x6
  2673  00A6                     ?_mfrc522SetBit:	; 1 bytes @ 0x6
  2674  00A6                     ??_mfrc522Rst:	; 1 bytes @ 0x6
  2675  00A6                     	global	lcd_print@col
  2676                           lcd_print@col:	; 1 bytes @ 0x6
  2677  00A6                     	global	mfrc522ClrBit@mascara
  2678                           mfrc522ClrBit@mascara:	; 1 bytes @ 0x6
  2679  00A6                     	global	mfrc522SetBit@mascara
  2680                           mfrc522SetBit@mascara:	; 1 bytes @ 0x6
  2681  00A6                     	global	MFRC522_Rd@addr
  2682                           MFRC522_Rd@addr:	; 1 bytes @ 0x6
  2683  00A6                     	global	tag_false@i
  2684                           tag_false@i:	; 1 bytes @ 0x6
  2685  00A6                     	ds	1
  2686  00A6                     ??_mfrc522ClrBit:	; 1 bytes @ 0x7
  2687  00A7                     ??_mfrc522SetBit:	; 1 bytes @ 0x7
  2688  00A7                     	global	MFRC522_Rd@value
  2689                           MFRC522_Rd@value:	; 1 bytes @ 0x7
  2690  00A7                     	global	lcd_print@str
  2691                           lcd_print@str:	; 2 bytes @ 0x7
  2692  00A7                     	ds	1
  2693  00A7                     ?_MFRC522_Wr:	; 1 bytes @ 0x8
  2694  00A8                     	global	mfrc522ClrBit@end
  2695                           mfrc522ClrBit@end:	; 1 bytes @ 0x8
  2696  00A8                     	global	mfrc522SetBit@end
  2697                           mfrc522SetBit@end:	; 1 bytes @ 0x8
  2698  00A8                     	global	MFRC522_Wr@value
  2699                           MFRC522_Wr@value:	; 1 bytes @ 0x8
  2700  00A8                     	global	hex2Ascii@b
  2701                           hex2Ascii@b:	; 1 bytes @ 0x8
  2702  00A8                     	ds	1
  2703  00A8                     ??_lcd_print:	; 1 bytes @ 0x9
  2704  00A9                     ??_MFRC522_Wr:	; 1 bytes @ 0x9
  2705  00A9                     	global	mfrc522ClrBit@lido
  2706                           mfrc522ClrBit@lido:	; 1 bytes @ 0x9
  2707  00A9                     	global	mfrc522SetBit@lido
  2708                           mfrc522SetBit@lido:	; 1 bytes @ 0x9
  2709  00A9                     	global	hex2Ascii@a
  2710                           hex2Ascii@a:	; 1 bytes @ 0x9
  2711  00A9                     	ds	1
  2712  00A9                     ??_mfrc522AntOn:	; 1 bytes @ 0xA
  2713  00AA                     ?_tagTxCmd:	; 1 bytes @ 0xA
  2714  00AA                     	global	lcd_print@pos
  2715                           lcd_print@pos:	; 1 bytes @ 0xA
  2716  00AA                     	global	MFRC522_Wr@addr
  2717                           MFRC522_Wr@addr:	; 1 bytes @ 0xA
  2718  00AA                     	global	hex2Ascii@uni
  2719                           hex2Ascii@uni:	; 1 bytes @ 0xA
  2720  00AA                     	global	tagTxCmd@data
  2721                           tagTxCmd@data:	; 2 bytes @ 0xA
  2722  00AA                     	ds	1
  2723  00AA                     ??_mfrc522Iniciar:	; 1 bytes @ 0xB
  2724  00AB                     ?_MFRC522_Clear_Bit:	; 1 bytes @ 0xB
  2725  00AB                     ?_MFRC522_Set_Bit:	; 1 bytes @ 0xB
  2726  00AB                     	global	lcd_print@lin
  2727                           lcd_print@lin:	; 1 bytes @ 0xB
  2728  00AB                     	global	MFRC522_Clear_Bit@mask
  2729                           MFRC522_Clear_Bit@mask:	; 1 bytes @ 0xB
  2730  00AB                     	global	MFRC522_Set_Bit@mask
  2731                           MFRC522_Set_Bit@mask:	; 1 bytes @ 0xB
  2732  00AB                     	global	hex2Ascii@dez
  2733                           hex2Ascii@dez:	; 1 bytes @ 0xB
  2734  00AB                     	ds	1
  2735  00AB                     ??_MFRC522_Clear_Bit:	; 1 bytes @ 0xC
  2736  00AC                     ??_MFRC522_Set_Bit:	; 1 bytes @ 0xC
  2737  00AC                     	global	tagTxCmd@dlen
  2738                           tagTxCmd@dlen:	; 1 bytes @ 0xC
  2739  00AC                     	ds	1
  2740  00AC                     	global	MFRC522_Set_Bit@addr
  2741                           MFRC522_Set_Bit@addr:	; 1 bytes @ 0xD
  2742  00AD                     	global	tagTxCmd@result
  2743                           tagTxCmd@result:	; 2 bytes @ 0xD
  2744  00AD                     	ds	1
  2745  00AD                     	global	MFRC522_Clear_Bit@addr
  2746                           MFRC522_Clear_Bit@addr:	; 1 bytes @ 0xE
  2747  00AE                     	ds	1
  2748  00AE                     ?_MFRC522_ToCard:	; 1 bytes @ 0xF
  2749  00AF                     	global	tagTxCmd@rlen
  2750                           tagTxCmd@rlen:	; 1 bytes @ 0xF
  2751  00AF                     	global	MFRC522_ToCard@sendData
  2752                           MFRC522_ToCard@sendData:	; 2 bytes @ 0xF
  2753  00AF                     	ds	1
  2754  00AF                     ??_tagTxCmd:	; 1 bytes @ 0x10
  2755  00B0                     	ds	1
  2756  00B0                     	global	MFRC522_ToCard@sendLen
  2757                           MFRC522_ToCard@sendLen:	; 1 bytes @ 0x11
  2758  00B1                     	ds	1
  2759  00B1                     	global	MFRC522_ToCard@backData
  2760                           MFRC522_ToCard@backData:	; 2 bytes @ 0x12
  2761  00B2                     	ds	1
  2762  00B2                     	global	tagTxCmd@waitIRq
  2763                           tagTxCmd@waitIRq:	; 1 bytes @ 0x13
  2764  00B3                     	ds	1
  2765  00B3                     	global	tagTxCmd@status
  2766                           tagTxCmd@status:	; 1 bytes @ 0x14
  2767  00B4                     	global	MFRC522_ToCard@backLen
  2768                           MFRC522_ToCard@backLen:	; 1 bytes @ 0x14
  2769  00B4                     	ds	1
  2770  00B4                     ??_MFRC522_ToCard:	; 1 bytes @ 0x15
  2771  00B5                     	global	tagTxCmd@a
  2772                           tagTxCmd@a:	; 1 bytes @ 0x15
  2773  00B5                     	ds	1
  2774  00B5                     	global	tagTxCmd@irqEn
  2775                           tagTxCmd@irqEn:	; 1 bytes @ 0x16
  2776  00B6                     	ds	1
  2777  00B6                     	global	tagTxCmd@lastBits
  2778                           tagTxCmd@lastBits:	; 1 bytes @ 0x17
  2779  00B7                     	ds	1
  2780  00B7                     	global	tagTxCmd@cmd
  2781                           tagTxCmd@cmd:	; 1 bytes @ 0x18
  2782  00B8                     	global	MFRC522_ToCard@irqEn
  2783                           MFRC522_ToCard@irqEn:	; 1 bytes @ 0x18
  2784  00B8                     	ds	1
  2785  00B8                     	global	tagTxCmd@i
  2786                           tagTxCmd@i:	; 1 bytes @ 0x19
  2787  00B9                     	global	MFRC522_ToCard@waitIRq
  2788                           MFRC522_ToCard@waitIRq:	; 1 bytes @ 0x19
  2789  00B9                     	ds	1
  2790  00B9                     	global	tagTxCmd@n
  2791                           tagTxCmd@n:	; 1 bytes @ 0x1A
  2792  00BA                     	global	MFRC522_ToCard@_status
  2793                           MFRC522_ToCard@_status:	; 1 bytes @ 0x1A
  2794  00BA                     	ds	1
  2795  00BA                     ?_procura_tag:	; 1 bytes @ 0x1B
  2796  00BB                     	global	MFRC522_ToCard@lastBits
  2797                           MFRC522_ToCard@lastBits:	; 1 bytes @ 0x1B
  2798  00BB                     	global	procura_tag@data
  2799                           procura_tag@data:	; 2 bytes @ 0x1B
  2800  00BB                     	ds	1
  2801  00BB                     	global	MFRC522_ToCard@command
  2802                           MFRC522_ToCard@command:	; 1 bytes @ 0x1C
  2803  00BC                     	ds	1
  2804  00BC                     ??_procura_tag:	; 1 bytes @ 0x1D
  2805  00BD                     	global	MFRC522_ToCard@i
  2806                           MFRC522_ToCard@i:	; 2 bytes @ 0x1D
  2807  00BD                     	ds	2
  2808  00BD                     	global	procura_tag@modo
  2809                           procura_tag@modo:	; 1 bytes @ 0x1F
  2810  00BF                     	global	MFRC522_ToCard@n
  2811                           MFRC522_ToCard@n:	; 1 bytes @ 0x1F
  2812  00BF                     	ds	1
  2813  00BF                     ?_MFRC522_AntiColl:	; 1 bytes @ 0x20
  2814  00C0                     	global	procura_tag@status
  2815                           procura_tag@status:	; 1 bytes @ 0x20
  2816  00C0                     	global	MFRC522_AntiColl@serNum
  2817                           MFRC522_AntiColl@serNum:	; 2 bytes @ 0x20
  2818  00C0                     	ds	1
  2819  00C0                     	global	procura_tag@len
  2820                           procura_tag@len:	; 1 bytes @ 0x21
  2821  00C1                     	ds	1
  2822  00C1                     ??_MFRC522_AntiColl:	; 1 bytes @ 0x22
  2823  00C2                     	ds	5
  2824  00C2                     	global	MFRC522_AntiColl@serNumCheck
  2825                           MFRC522_AntiColl@serNumCheck:	; 1 bytes @ 0x27
  2826  00C7                     	ds	1
  2827  00C7                     	global	MFRC522_AntiColl@unLen
  2828                           MFRC522_AntiColl@unLen:	; 1 bytes @ 0x28
  2829  00C8                     	ds	1
  2830  00C8                     	global	MFRC522_AntiColl@_status
  2831                           MFRC522_AntiColl@_status:	; 1 bytes @ 0x29
  2832  00C9                     	ds	1
  2833  00C9                     	global	MFRC522_AntiColl@i
  2834                           MFRC522_AntiColl@i:	; 1 bytes @ 0x2A
  2835  00CA                     	ds	1
  2836  00CA                     ??_main:	; 1 bytes @ 0x2B
  2837  00CB                     	ds	4
  2838  00CB                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2839                           global __pcstackCOMMON
  2840                           __pcstackCOMMON:
  2841  0070                     ?_spi_hardware_disable:	; 1 bytes @ 0x0
  2842  0070                     ?_spiSoftIniciar:	; 1 bytes @ 0x0
  2843  0070                     ?_mfrc522Iniciar:	; 1 bytes @ 0x0
  2844  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  2845  0070                     ?_sensors_init:	; 1 bytes @ 0x0
  2846  0070                     ?_tmr_tick_init:	; 1 bytes @ 0x0
  2847  0070                     ?_lcd_clr:	; 1 bytes @ 0x0
  2848  0070                     ?_uts_trigger:	; 1 bytes @ 0x0
  2849  0070                     ?_prs_detect:	; 1 bytes @ 0x0
  2850  0070                     ?_tmr_tick_int:	; 1 bytes @ 0x0
  2851  0070                     ??_tmr_tick_int:	; 1 bytes @ 0x0
  2852  0070                     ?_spiSoftRxDat:	; 1 bytes @ 0x0
  2853  0070                     ?_spiSoftTxDat:	; 1 bytes @ 0x0
  2854  0070                     ?_main:	; 1 bytes @ 0x0
  2855  0070                     ?_lcd_inst:	; 1 bytes @ 0x0
  2856  0070                     ?_lcd_data:	; 1 bytes @ 0x0
  2857  0070                     ?_isr:	; 1 bytes @ 0x0
  2858  0070                     ?_mfrc522AntOn:	; 1 bytes @ 0x0
  2859  0070                     ?_mfrc522Rst:	; 1 bytes @ 0x0
  2860  0070                     ?_MFRC522_Rd:	; 1 bytes @ 0x0
  2861  0070                     ?_spiSoftClk:	; 1 bytes @ 0x0
  2862  0070                     	global	?___lmul
  2863                           ?___lmul:	; 4 bytes @ 0x0
  2864  0070                     	global	___lmul@multiplier
  2865                           ___lmul@multiplier:	; 4 bytes @ 0x0
  2866  0070                     	ds	3
  2867  0070                     	global	tmr_tick_int@i
  2868                           tmr_tick_int@i:	; 1 bytes @ 0x3
  2869  0073                     	ds	1
  2870  0073                     	global	___lmul@multiplicand
  2871                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  2872  0074                     	ds	4
  2873  0074                     ??___lmul:	; 1 bytes @ 0x8
  2874  0078                     	ds	1
  2875  0078                     ??___aldiv:	; 1 bytes @ 0x9
  2876  0079                     	ds	1
  2877  0079                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2878                           global __pcstackBANK0
  2879                           __pcstackBANK0:
  2880  0020                     	global	___lmul@product
  2881                           ___lmul@product:	; 4 bytes @ 0x0
  2882  0020                     	ds	4
  2883  0020                     	global	?___aldiv
  2884                           ?___aldiv:	; 4 bytes @ 0x4
  2885  0024                     	global	___aldiv@divisor
  2886                           ___aldiv@divisor:	; 4 bytes @ 0x4
  2887  0024                     	ds	4
  2888  0024                     	global	___aldiv@dividend
  2889                           ___aldiv@dividend:	; 4 bytes @ 0x8
  2890  0028                     	ds	4
  2891  0028                     	global	___aldiv@counter
  2892                           ___aldiv@counter:	; 1 bytes @ 0xC
  2893  002C                     	ds	1
  2894  002C                     	global	___aldiv@sign
  2895                           ___aldiv@sign:	; 1 bytes @ 0xD
  2896  002D                     	ds	1
  2897  002D                     	global	___aldiv@quotient
  2898                           ___aldiv@quotient:	; 4 bytes @ 0xE
  2899  002E                     	ds	4
  2900  002E                     ??_isr:	; 1 bytes @ 0x12
  2901  0032                     	ds	7
  2902  0032                     	global	_isr$1615
  2903                           _isr$1615:	; 4 bytes @ 0x19
  2904  0039                     	ds	4
  2905  0039                     	global	_isr$1616
  2906                           _isr$1616:	; 4 bytes @ 0x1D
  2907  003D                     	ds	4
  2908  003D                     ;!
  2909                           ;!Data Sizes:
  2910                           ;!    Strings     116
  2911                           ;!    Constant    2
  2912                           ;!    Data        128
  2913                           ;!    BSS         24
  2914                           ;!    Persistent  0
  2915                           ;!    Stack       0
  2916                           ;!
  2917                           ;!Auto Spaces:
  2918                           ;!    Space          Size  Autos    Used
  2919                           ;!    COMMON           14     10      14
  2920                           ;!    BANK0            80     33      54
  2921                           ;!    BANK1            80     47      76
  2922                           ;!    BANK3            96     35      78
  2923                           ;!    BANK2            96      0      55
  2924                           
  2925                           ;!
  2926                           ;!Pointer List with Targets:
  2927                           ;!
  2928                           ;!    sp__rfid_display_wait	PTR void  size(1) Largest target is 2
  2929                           ;!		 -> rfid_display_wait(), rfid_read(), 
  2930                           ;!
  2931                           ;!    sp__rfid_display	PTR void  size(1) Largest target is 2
  2932                           ;!		 -> rfid_display(), rfid_read(), 
  2933                           ;!
  2934                           ;!    sp__rfid_read_wait	PTR void  size(1) Largest target is 2
  2935                           ;!		 -> rfid_read_wait(), rfid_display(), 
  2936                           ;!
  2937                           ;!    sp__rfid_read	PTR void  size(1) Largest target is 2
  2938                           ;!		 -> rfid_display(), rfid_read(), 
  2939                           ;!
  2940                           ;!    hex2Ascii@strOut	PTR unsigned char  size(1) Largest target is 13
  2941                           ;!		 -> uidAsci(BANK3[13]), main@uidAsci(BANK3[13]), 
  2942                           ;!
  2943                           ;!    hex2Ascii@strIn	PTR unsigned char  size(2) Largest target is 7
  2944                           ;!		 -> UID(BANK1[7]), main@UID(BANK3[7]), 
  2945                           ;!
  2946                           ;!    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 7
  2947                           ;!		 -> UID(BANK1[7]), main@UID(BANK3[7]), 
  2948                           ;!
  2949                           ;!    tag_false@p2	PTR unsigned char  size(1) Largest target is 6
  2950                           ;!		 -> main@senha(BANK3[6]), 
  2951                           ;!
  2952                           ;!    tag_false@p1	PTR unsigned char  size(1) Largest target is 7
  2953                           ;!		 -> main@UID(BANK3[7]), 
  2954                           ;!
  2955                           ;!    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 7
  2956                           ;!		 -> UID(BANK1[7]), main@UID(BANK3[7]), 
  2957                           ;!
  2958                           ;!    MFRC522_ToCard@backLen	PTR unsigned char  size(1) Largest target is 1
  2959                           ;!		 -> MFRC522_AntiColl@unLen(BANK1[1]), 
  2960                           ;!
  2961                           ;!    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 7
  2962                           ;!		 -> UID(BANK1[7]), main@UID(BANK3[7]), 
  2963                           ;!
  2964                           ;!    procura_tag@data	PTR unsigned char  size(2) Largest target is 5
  2965                           ;!		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 
  2966                           ;!
  2967                           ;!    tagTxCmd@result	PTR unsigned char  size(2) Largest target is 5
  2968                           ;!		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 
  2969                           ;!
  2970                           ;!    tagTxCmd@rlen	PTR unsigned char  size(1) Largest target is 1
  2971                           ;!		 -> procura_tag@len(BANK1[1]), 
  2972                           ;!
  2973                           ;!    tagTxCmd@data	PTR unsigned char  size(2) Largest target is 5
  2974                           ;!		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 
  2975                           ;!
  2976                           ;!    lcd_print@str	PTR const unsigned char  size(2) Largest target is 16
  2977                           ;!		 -> uidAsci(BANK3[13]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[6]), 
  2978                           ;!		 -> STR_13(CODE[9]), STR_12(CODE[8]), STR_11(CODE[7]), STR_10(CODE[7]), 
  2979                           ;!		 -> STR_9(CODE[16]), STR_8(CODE[9]), STR_7(CODE[7]), STR_6(CODE[16]), 
  2980                           ;!		 -> STR_5(CODE[6]), STR_4(CODE[7]), STR_3(CODE[10]), STR_2(CODE[7]), 
  2981                           ;!		 -> STR_1(CODE[11]), 
  2982                           ;!
  2983                           
  2984                           
  2985                           ;!
  2986                           ;!Critical Paths under _main in COMMON
  2987                           ;!
  2988                           ;!    None.
  2989                           ;!
  2990                           ;!Critical Paths under _isr in COMMON
  2991                           ;!
  2992                           ;!    _isr->___aldiv
  2993                           ;!    ___aldiv->___lmul
  2994                           ;!
  2995                           ;!Critical Paths under _main in BANK0
  2996                           ;!
  2997                           ;!    None.
  2998                           ;!
  2999                           ;!Critical Paths under _isr in BANK0
  3000                           ;!
  3001                           ;!    _isr->___aldiv
  3002                           ;!    ___aldiv->___lmul
  3003                           ;!
  3004                           ;!Critical Paths under _main in BANK1
  3005                           ;!
  3006                           ;!    _main->_MFRC522_AntiColl
  3007                           ;!    _prs_detect->_delay_ms
  3008                           ;!    _procura_tag->_tagTxCmd
  3009                           ;!    _tagTxCmd->_mfrc522ClrBit
  3010                           ;!    _tagTxCmd->_mfrc522SetBit
  3011                           ;!    _mfrc522ClrBit->_spiSoftTxCmd
  3012                           ;!    _mfrc522Iniciar->_mfrc522AntOn
  3013                           ;!    _mfrc522Rst->_spiSoftTxCmd
  3014                           ;!    _mfrc522AntOn->_mfrc522SetBit
  3015                           ;!    _mfrc522SetBit->_spiSoftTxCmd
  3016                           ;!    _lcd_print->_lcd_lincol
  3017                           ;!    _lcd_lincol->_lcd_inst
  3018                           ;!    _lcd_init->_lcd_inst
  3019                           ;!    _lcd_clr->_lcd_inst
  3020                           ;!    _MFRC522_AntiColl->_MFRC522_ToCard
  3021                           ;!    _MFRC522_ToCard->_MFRC522_Clear_Bit
  3022                           ;!    _MFRC522_Set_Bit->_MFRC522_Wr
  3023                           ;!    _MFRC522_Clear_Bit->_MFRC522_Wr
  3024                           ;!    _MFRC522_Wr->_MFRC522_Rd
  3025                           ;!    _MFRC522_Rd->_spiSoftTxDat
  3026                           ;!
  3027                           ;!Critical Paths under _isr in BANK1
  3028                           ;!
  3029                           ;!    None.
  3030                           ;!
  3031                           ;!Critical Paths under _main in BANK3
  3032                           ;!
  3033                           ;!    None.
  3034                           ;!
  3035                           ;!Critical Paths under _isr in BANK3
  3036                           ;!
  3037                           ;!    None.
  3038                           ;!
  3039                           ;!Critical Paths under _main in BANK2
  3040                           ;!
  3041                           ;!    None.
  3042                           ;!
  3043                           ;!Critical Paths under _isr in BANK2
  3044                           ;!
  3045                           ;!    None.
  3046                           
  3047 ;;
  3048 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3049 ;;
  3050                           
  3051                           ;!
  3052                           ;!Call Graph Tables:
  3053                           ;!
  3054                           ;! ---------------------------------------------------------------------------------
  3055                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3056                           ;! ---------------------------------------------------------------------------------
  3057                           ;! (0) _main                                                39    39      0   36449
  3058                           ;!                                             43 BANK1      4     4      0
  3059                           ;!                                              0 BANK3     35    35      0
  3060                           ;!                   _MFRC522_AntiColl
  3061                           ;!                           _delay_ms
  3062                           ;!                          _hex2Ascii
  3063                           ;!                            _lcd_clr
  3064                           ;!                           _lcd_init
  3065                           ;!                          _lcd_print
  3066                           ;!                     _mfrc522Iniciar
  3067                           ;!                        _procura_tag
  3068                           ;!                         _prs_detect
  3069                           ;!                       _sensors_init
  3070                           ;!                     _spiSoftIniciar
  3071                           ;!               _spi_hardware_disable
  3072                           ;!                          _tag_false
  3073                           ;!                      _tmr_tick_init
  3074                           ;!                        _uts_trigger
  3075                           ;! ---------------------------------------------------------------------------------
  3076                           ;! (1) _uts_trigger                                          1     1      0       0
  3077                           ;!                                              0 BANK1      1     1      0
  3078                           ;! ---------------------------------------------------------------------------------
  3079                           ;! (1) _tmr_tick_init                                        0     0      0       0
  3080                           ;! ---------------------------------------------------------------------------------
  3081                           ;! (1) _tag_false                                            7     6      1     355
  3082                           ;!                                              0 BANK1      7     6      1
  3083                           ;! ---------------------------------------------------------------------------------
  3084                           ;! (1) _spi_hardware_disable                                 0     0      0       0
  3085                           ;! ---------------------------------------------------------------------------------
  3086                           ;! (1) _spiSoftIniciar                                       2     2      0       0
  3087                           ;!                                              0 BANK1      2     2      0
  3088                           ;! ---------------------------------------------------------------------------------
  3089                           ;! (1) _sensors_init                                         0     0      0       0
  3090                           ;! ---------------------------------------------------------------------------------
  3091                           ;! (1) _prs_detect                                           0     0      0     574
  3092                           ;!                           _delay_ms
  3093                           ;! ---------------------------------------------------------------------------------
  3094                           ;! (2) _delay_ms                                             4     2      2     574
  3095                           ;!                                              0 BANK1      4     2      2
  3096                           ;! ---------------------------------------------------------------------------------
  3097                           ;! (1) _procura_tag                                          7     5      2   13018
  3098                           ;!                                             27 BANK1      7     5      2
  3099                           ;!                       _spiSoftTxCmd
  3100                           ;!                       _spiSoftTxDat
  3101                           ;!                           _tagTxCmd
  3102                           ;! ---------------------------------------------------------------------------------
  3103                           ;! (2) _tagTxCmd                                            17    11      6   10145
  3104                           ;!                                             10 BANK1     17    11      6
  3105                           ;!                      _mfrc522ClrBit
  3106                           ;!                      _mfrc522SetBit
  3107                           ;!                       _spiSoftRxDat
  3108                           ;!                       _spiSoftTxCmd
  3109                           ;!                       _spiSoftTxDat
  3110                           ;! ---------------------------------------------------------------------------------
  3111                           ;! (3) _mfrc522ClrBit                                        4     3      1    2800
  3112                           ;!                                              6 BANK1      4     3      1
  3113                           ;!                       _spiSoftRxDat
  3114                           ;!                       _spiSoftTxCmd
  3115                           ;!                       _spiSoftTxDat
  3116                           ;! ---------------------------------------------------------------------------------
  3117                           ;! (1) _mfrc522Iniciar                                       0     0      0    7536
  3118                           ;!                       _mfrc522AntOn
  3119                           ;!                         _mfrc522Rst
  3120                           ;!                       _spiSoftTxCmd
  3121                           ;!                       _spiSoftTxDat
  3122                           ;! ---------------------------------------------------------------------------------
  3123                           ;! (2) _mfrc522Rst                                           0     0      0    2323
  3124                           ;!                       _spiSoftTxCmd
  3125                           ;!                       _spiSoftTxDat
  3126                           ;! ---------------------------------------------------------------------------------
  3127                           ;! (2) _mfrc522AntOn                                         1     1      0    2890
  3128                           ;!                                             10 BANK1      1     1      0
  3129                           ;!                      _mfrc522SetBit
  3130                           ;! ---------------------------------------------------------------------------------
  3131                           ;! (3) _mfrc522SetBit                                        4     3      1    2890
  3132                           ;!                                              6 BANK1      4     3      1
  3133                           ;!                       _spiSoftRxDat
  3134                           ;!                       _spiSoftTxCmd
  3135                           ;!                       _spiSoftTxDat
  3136                           ;! ---------------------------------------------------------------------------------
  3137                           ;! (3) _spiSoftTxCmd                                         6     5      1    2156
  3138                           ;!                                              0 BANK1      6     5      1
  3139                           ;!                         _spiSoftClk
  3140                           ;! ---------------------------------------------------------------------------------
  3141                           ;! (1) _lcd_print                                            6     3      3    3776
  3142                           ;!                                              6 BANK1      6     3      3
  3143                           ;!                           _lcd_data
  3144                           ;!                         _lcd_lincol
  3145                           ;! ---------------------------------------------------------------------------------
  3146                           ;! (2) _lcd_lincol                                           3     2      1     490
  3147                           ;!                                              3 BANK1      3     2      1
  3148                           ;!                           _lcd_inst
  3149                           ;! ---------------------------------------------------------------------------------
  3150                           ;! (2) _lcd_data                                             3     3      0      62
  3151                           ;!                                              0 BANK1      3     3      0
  3152                           ;! ---------------------------------------------------------------------------------
  3153                           ;! (1) _lcd_init                                             3     3      0     248
  3154                           ;!                                              3 BANK1      3     3      0
  3155                           ;!                           _lcd_inst
  3156                           ;! ---------------------------------------------------------------------------------
  3157                           ;! (1) _lcd_clr                                              0     0      0     248
  3158                           ;!                           _lcd_inst
  3159                           ;! ---------------------------------------------------------------------------------
  3160                           ;! (3) _lcd_inst                                             3     3      0     248
  3161                           ;!                                              0 BANK1      3     3      0
  3162                           ;! ---------------------------------------------------------------------------------
  3163                           ;! (1) _hex2Ascii                                           12     8      4    1362
  3164                           ;!                                              0 BANK1     12     8      4
  3165                           ;! ---------------------------------------------------------------------------------
  3166                           ;! (1) _MFRC522_AntiColl                                    11     9      2    8098
  3167                           ;!                                             32 BANK1     11     9      2
  3168                           ;!                  _MFRC522_Clear_Bit
  3169                           ;!                     _MFRC522_ToCard
  3170                           ;!                         _MFRC522_Wr
  3171                           ;! ---------------------------------------------------------------------------------
  3172                           ;! (2) _MFRC522_ToCard                                      17    11      6    5407
  3173                           ;!                                             15 BANK1     17    11      6
  3174                           ;!                  _MFRC522_Clear_Bit
  3175                           ;!                         _MFRC522_Rd
  3176                           ;!                    _MFRC522_Set_Bit
  3177                           ;!                         _MFRC522_Wr
  3178                           ;! ---------------------------------------------------------------------------------
  3179                           ;! (3) _MFRC522_Set_Bit                                      3     2      1    1230
  3180                           ;!                                             11 BANK1      3     2      1
  3181                           ;!                         _MFRC522_Rd
  3182                           ;!                         _MFRC522_Wr
  3183                           ;! ---------------------------------------------------------------------------------
  3184                           ;! (3) _MFRC522_Clear_Bit                                    4     3      1    1320
  3185                           ;!                                             11 BANK1      4     3      1
  3186                           ;!                         _MFRC522_Rd
  3187                           ;!                         _MFRC522_Wr
  3188                           ;! ---------------------------------------------------------------------------------
  3189                           ;! (2) _MFRC522_Wr                                           3     2      1     679
  3190                           ;!                                              8 BANK1      3     2      1
  3191                           ;!                         _MFRC522_Rd (ARG)
  3192                           ;!                       _spiSoftTxDat
  3193                           ;! ---------------------------------------------------------------------------------
  3194                           ;! (4) _MFRC522_Rd                                           3     3      0     368
  3195                           ;!                                              5 BANK1      3     3      0
  3196                           ;!                       _spiSoftRxDat
  3197                           ;!                       _spiSoftTxDat
  3198                           ;! ---------------------------------------------------------------------------------
  3199                           ;! (3) _spiSoftTxDat                                         5     5      0     167
  3200                           ;!                                              0 BANK1      5     5      0
  3201                           ;!                         _spiSoftClk
  3202                           ;! ---------------------------------------------------------------------------------
  3203                           ;! (3) _spiSoftRxDat                                         4     4      0     136
  3204                           ;!                                              0 BANK1      4     4      0
  3205                           ;!                         _spiSoftClk
  3206                           ;! ---------------------------------------------------------------------------------
  3207                           ;! (4) _spiSoftClk                                           0     0      0       0
  3208                           ;! ---------------------------------------------------------------------------------
  3209                           ;! Estimated maximum stack depth 4
  3210                           ;! ---------------------------------------------------------------------------------
  3211                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3212                           ;! ---------------------------------------------------------------------------------
  3213                           ;! (7) _isr                                                 15    15      0    1207
  3214                           ;!                                             18 BANK0     15    15      0
  3215                           ;!                            ___aldiv
  3216                           ;!                             ___lmul
  3217                           ;!                       _tmr_tick_int
  3218                           ;! ---------------------------------------------------------------------------------
  3219                           ;! (8) _tmr_tick_int                                         4     4      0      90
  3220                           ;!                                              0 COMMON     4     4      0
  3221                           ;! ---------------------------------------------------------------------------------
  3222                           ;! (8) ___lmul                                              13     5      8      36
  3223                           ;!                                              0 COMMON     9     1      8
  3224                           ;!                                              0 BANK0      4     4      0
  3225                           ;! ---------------------------------------------------------------------------------
  3226                           ;! (8) ___aldiv                                             15     7      8     985
  3227                           ;!                                              9 COMMON     1     1      0
  3228                           ;!                                              4 BANK0     14     6      8
  3229                           ;!                             ___lmul (ARG)
  3230                           ;! ---------------------------------------------------------------------------------
  3231                           ;! Estimated maximum stack depth 8
  3232                           ;! ---------------------------------------------------------------------------------
  3233                           ;!
  3234                           ;! Call Graph Graphs:
  3235                           ;!
  3236                           ;! _main (ROOT)
  3237                           ;!   _MFRC522_AntiColl
  3238                           ;!     _MFRC522_Clear_Bit
  3239                           ;!       _MFRC522_Rd
  3240                           ;!         _spiSoftRxDat
  3241                           ;!           _spiSoftClk
  3242                           ;!         _spiSoftTxDat
  3243                           ;!           _spiSoftClk
  3244                           ;!       _MFRC522_Wr
  3245                           ;!         _MFRC522_Rd (ARG)
  3246                           ;!           _spiSoftRxDat
  3247                           ;!             _spiSoftClk
  3248                           ;!           _spiSoftTxDat
  3249                           ;!             _spiSoftClk
  3250                           ;!         _spiSoftTxDat (ARG)
  3251                           ;!           _spiSoftClk
  3252                           ;!     _MFRC522_ToCard
  3253                           ;!       _MFRC522_Clear_Bit
  3254                           ;!         _MFRC522_Rd
  3255                           ;!           _spiSoftRxDat
  3256                           ;!             _spiSoftClk
  3257                           ;!           _spiSoftTxDat
  3258                           ;!             _spiSoftClk
  3259                           ;!         _MFRC522_Wr
  3260                           ;!           _MFRC522_Rd (ARG)
  3261                           ;!             _spiSoftRxDat
  3262                           ;!               _spiSoftClk
  3263                           ;!             _spiSoftTxDat
  3264                           ;!               _spiSoftClk
  3265                           ;!           _spiSoftTxDat (ARG)
  3266                           ;!             _spiSoftClk
  3267                           ;!       _MFRC522_Rd
  3268                           ;!         _spiSoftRxDat
  3269                           ;!           _spiSoftClk
  3270                           ;!         _spiSoftTxDat
  3271                           ;!           _spiSoftClk
  3272                           ;!       _MFRC522_Set_Bit
  3273                           ;!         _MFRC522_Rd
  3274                           ;!           _spiSoftRxDat
  3275                           ;!             _spiSoftClk
  3276                           ;!           _spiSoftTxDat
  3277                           ;!             _spiSoftClk
  3278                           ;!         _MFRC522_Wr
  3279                           ;!           _MFRC522_Rd (ARG)
  3280                           ;!             _spiSoftRxDat
  3281                           ;!               _spiSoftClk
  3282                           ;!             _spiSoftTxDat
  3283                           ;!               _spiSoftClk
  3284                           ;!           _spiSoftTxDat (ARG)
  3285                           ;!             _spiSoftClk
  3286                           ;!       _MFRC522_Wr
  3287                           ;!         _MFRC522_Rd (ARG)
  3288                           ;!           _spiSoftRxDat
  3289                           ;!             _spiSoftClk
  3290                           ;!           _spiSoftTxDat
  3291                           ;!             _spiSoftClk
  3292                           ;!         _spiSoftTxDat (ARG)
  3293                           ;!           _spiSoftClk
  3294                           ;!     _MFRC522_Wr
  3295                           ;!       _MFRC522_Rd (ARG)
  3296                           ;!         _spiSoftRxDat
  3297                           ;!           _spiSoftClk
  3298                           ;!         _spiSoftTxDat
  3299                           ;!           _spiSoftClk
  3300                           ;!       _spiSoftTxDat (ARG)
  3301                           ;!         _spiSoftClk
  3302                           ;!   _delay_ms
  3303                           ;!   _hex2Ascii
  3304                           ;!   _lcd_clr
  3305                           ;!     _lcd_inst
  3306                           ;!   _lcd_init
  3307                           ;!     _lcd_inst
  3308                           ;!   _lcd_print
  3309                           ;!     _lcd_data
  3310                           ;!     _lcd_lincol
  3311                           ;!       _lcd_inst
  3312                           ;!   _mfrc522Iniciar
  3313                           ;!     _mfrc522AntOn
  3314                           ;!       _mfrc522SetBit
  3315                           ;!         _spiSoftRxDat
  3316                           ;!           _spiSoftClk
  3317                           ;!         _spiSoftTxCmd
  3318                           ;!           _spiSoftClk
  3319                           ;!         _spiSoftTxDat
  3320                           ;!           _spiSoftClk
  3321                           ;!     _mfrc522Rst
  3322                           ;!       _spiSoftTxCmd
  3323                           ;!         _spiSoftClk
  3324                           ;!       _spiSoftTxDat
  3325                           ;!         _spiSoftClk
  3326                           ;!     _spiSoftTxCmd
  3327                           ;!       _spiSoftClk
  3328                           ;!     _spiSoftTxDat
  3329                           ;!       _spiSoftClk
  3330                           ;!   _procura_tag
  3331                           ;!     _spiSoftTxCmd
  3332                           ;!       _spiSoftClk
  3333                           ;!     _spiSoftTxDat
  3334                           ;!       _spiSoftClk
  3335                           ;!     _tagTxCmd
  3336                           ;!       _mfrc522ClrBit
  3337                           ;!         _spiSoftRxDat
  3338                           ;!           _spiSoftClk
  3339                           ;!         _spiSoftTxCmd
  3340                           ;!           _spiSoftClk
  3341                           ;!         _spiSoftTxDat
  3342                           ;!           _spiSoftClk
  3343                           ;!       _mfrc522SetBit
  3344                           ;!         _spiSoftRxDat
  3345                           ;!           _spiSoftClk
  3346                           ;!         _spiSoftTxCmd
  3347                           ;!           _spiSoftClk
  3348                           ;!         _spiSoftTxDat
  3349                           ;!           _spiSoftClk
  3350                           ;!       _spiSoftRxDat
  3351                           ;!         _spiSoftClk
  3352                           ;!       _spiSoftTxCmd
  3353                           ;!         _spiSoftClk
  3354                           ;!       _spiSoftTxDat
  3355                           ;!         _spiSoftClk
  3356                           ;!   _prs_detect
  3357                           ;!     _delay_ms
  3358                           ;!   _sensors_init
  3359                           ;!   _spiSoftIniciar
  3360                           ;!   _spi_hardware_disable
  3361                           ;!   _tag_false
  3362                           ;!   _tmr_tick_init
  3363                           ;!   _uts_trigger
  3364                           ;!
  3365                           ;! _isr (ROOT)
  3366                           ;!   ___aldiv
  3367                           ;!     ___lmul (ARG)
  3368                           ;!   ___lmul
  3369                           ;!   _tmr_tick_int
  3370                           ;!
  3371                           
  3372                           ;! Address spaces:
  3373                           
  3374                           ;!Name               Size   Autos  Total    Cost      Usage
  3375                           ;!BANK3               60     23      4E       9       81.3%
  3376                           ;!BITBANK3            60      0       0       8        0.0%
  3377                           ;!SFR3                 0      0       0       4        0.0%
  3378                           ;!BITSFR3              0      0       0       4        0.0%
  3379                           ;!BANK2               60      0      37      11       57.3%
  3380                           ;!BITBANK2            60      0       0      10        0.0%
  3381                           ;!SFR2                 0      0       0       5        0.0%
  3382                           ;!BITSFR2              0      0       0       5        0.0%
  3383                           ;!BANK1               50     2F      4C       7       95.0%
  3384                           ;!BITBANK1            50      0       0       6        0.0%
  3385                           ;!SFR1                 0      0       0       2        0.0%
  3386                           ;!BITSFR1              0      0       0       2        0.0%
  3387                           ;!BANK0               50     21      36       5       67.5%
  3388                           ;!BITBANK0            50      0       0       4        0.0%
  3389                           ;!SFR0                 0      0       0       1        0.0%
  3390                           ;!BITSFR0              0      0       0       1        0.0%
  3391                           ;!COMMON               E      A       E       1      100.0%
  3392                           ;!BITCOMMON            E      0       0       0        0.0%
  3393                           ;!CODE                 0      0       0       0        0.0%
  3394                           ;!DATA                 0      0     115      12        0.0%
  3395                           ;!ABS                  0      0     115       3        0.0%
  3396                           ;!NULL                 0      0       0       0        0.0%
  3397                           ;!STACK                0      0       0       2        0.0%
  3398                           ;!EEDATA             100      0       0       0        0.0%
  3399                           
  3400                           	global	_main
  3401                           
  3402 ;; *************** function _main *****************
  3403 ;; Defined at:
  3404 ;;		line 24 in file "main.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  uidAsci        13    0[BANK3 ] unsigned char [13]
  3409 ;;  UID             7   24[BANK3 ] unsigned char [7]
  3410 ;;  senha           6   13[BANK3 ] unsigned char [6]
  3411 ;;  TAG             5   19[BANK3 ] unsigned char [5]
  3412 ;;  perigo          2   31[BANK3 ] int 
  3413 ;;  state           1   34[BANK3 ] unsigned char 
  3414 ;;  uid             1   33[BANK3 ] unsigned char 
  3415 ;; Return value:  Size  Location     Type
  3416 ;;                  1    wreg      void 
  3417 ;; Registers used:
  3418 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3419 ;; Tracked objects:
  3420 ;;		On entry : B00/0
  3421 ;;		On exit  : 0/0
  3422 ;;		Unchanged: 0/0
  3423 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3424 ;;      Params:         0       0       0       0       0
  3425 ;;      Locals:         0       0       0      35       0
  3426 ;;      Temps:          0       0       4       0       0
  3427 ;;      Totals:         0       0       4      35       0
  3428 ;;Total ram usage:       39 bytes
  3429 ;; Hardware stack levels required when called:    8
  3430 ;; This function calls:
  3431 ;;		_MFRC522_AntiColl
  3432 ;;		_delay_ms
  3433 ;;		_hex2Ascii
  3434 ;;		_lcd_clr
  3435 ;;		_lcd_init
  3436 ;;		_lcd_print
  3437 ;;		_mfrc522Iniciar
  3438 ;;		_procura_tag
  3439 ;;		_prs_detect
  3440 ;;		_sensors_init
  3441 ;;		_spiSoftIniciar
  3442 ;;		_spi_hardware_disable
  3443 ;;		_tag_false
  3444 ;;		_tmr_tick_init
  3445 ;;		_uts_trigger
  3446 ;; This function is called by:
  3447 ;;		Startup code after reset
  3448 ;; This function uses a non-reentrant model
  3449 ;;
  3450                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  3451                           	file	"main.c"
  3452                           	line	24
  3453                           global __pmaintext
  3454                           __pmaintext:	;psect for function _main
  3455  005F                     psect	maintext
  3456                           	file	"main.c"
  3457                           	line	24
  3458                           	global	__size_of_main
  3459                           	__size_of_main	equ	__end_of_main-_main
  3460  0303                     	
  3461                           _main:	
  3462  005F                     ;incstack = 0
  3463                           	opt	stack 0
  3464                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3465                           	line	29
  3466                           	
  3467                           l4658:	
  3468  005F                     ;main.c: 29:     int perigo = 110;
  3469                           	movlw	06Eh
  3470  005F  306E               	bsf	status, 5	;RP0=1, select bank3
  3471  0060  1683               	bsf	status, 6	;RP1=1, select bank3
  3472  0061  1703               	movwf	(main@perigo)^0180h
  3473  0062  00DA               	movlw	0
  3474  0063  3000               	movwf	((main@perigo)^0180h)+1
  3475  0064  00DB               	line	31
  3476                           	
  3477                           l4660:	
  3478  0065                     ;main.c: 31:     char state = 0;
  3479                           	clrf	(main@state)^0180h
  3480  0065  01DD               	line	33
  3481                           	
  3482                           l4662:	
  3483  0066                     ;main.c: 33:     char uid = 0;
  3484                           	clrf	(main@uid)^0180h
  3485  0066  01DC               	line	34
  3486                           	
  3487                           l4664:	
  3488  0067                     ;main.c: 34:     char UID[]={"000000"};
  3489                           	movlw	(main@UID)&0ffh
  3490  0067  30D3               	movwf	fsr0
  3491  0068  0084               	movlw	low(main@F1412)
  3492  0069  30CF               	bsf	status, 5	;RP0=1, select bank1
  3493  006A  1683               	bcf	status, 6	;RP1=0, select bank1
  3494  006B  1303               	movwf	(??_main+0)^080h+0
  3495  006C  00CB               	movf	fsr0,w
  3496  006D  0804               	movwf	((??_main+0)^080h+0+1)
  3497  006E  00CC               	movlw	7
  3498  006F  3007               	movwf	((??_main+0)^080h+0+2)
  3499  0070  00CD               u4220:
  3500  0071                     	movf	(??_main+0)^080h+0,w
  3501  0071  084B               	movwf	fsr0
  3502  0072  0084               	bcf	status, 7	;select IRP bank1
  3503  0073  1383               	
  3504                           	movf	indf,w
  3505  0074  0800               	movwf	((??_main+0)^080h+0+3)
  3506  0075  00CE               	incf	(??_main+0)^080h+0,f
  3507  0076  0ACB               	movf	((??_main+0)^080h+0+1),w
  3508  0077  084C               	movwf	fsr0
  3509  0078  0084               	bsf	status, 7	;select IRP bank3
  3510  0079  1783               	
  3511                           	movf	((??_main+0)^080h+0+3),w
  3512  007A  084E               	movwf	indf
  3513  007B  0080               	incf	((??_main+0)^080h+0+1),f
  3514  007C  0ACC               	decfsz	((??_main+0)^080h+0+2),f
  3515  007D  0BCD               	goto	u4220
  3516  007E  2871               	
  3517                           	line	35
  3518                           	
  3519                           l4666:	
  3520  007F                     ;main.c: 35:     char TAG[]={"0000"};
  3521                           	movlw	(main@TAG)&0ffh
  3522  007F  30CE               	movwf	fsr0
  3523  0080  0084               	movf	(main@F1414)^080h,w
  3524  0081  085C               	movwf	indf
  3525  0082  0080               	incf	fsr0,f
  3526  0083  0A84               	movf	(main@F1414)^080h+1,w
  3527  0084  085D               	movwf	indf
  3528  0085  0080               	incf	fsr0,f
  3529  0086  0A84               	movf	(main@F1414)^080h+2,w
  3530  0087  085E               	movwf	indf
  3531  0088  0080               	incf	fsr0,f
  3532  0089  0A84               	movf	(main@F1414)^080h+3,w
  3533  008A  085F               	movwf	indf
  3534  008B  0080               	incf	fsr0,f
  3535  008C  0A84               	movf	(main@F1414)^080h+4,w
  3536  008D  0860               	movwf	indf
  3537  008E  0080               	line	36
  3538                           	
  3539                           l4668:	
  3540  008F                     ;main.c: 36:     char uidAsci[]={"____________"};
  3541                           	movlw	(main@uidAsci)&0ffh
  3542  008F  30BB               	movwf	fsr0
  3543  0090  0084               	movlw	low(main@F1416)
  3544  0091  30A1               	movwf	(??_main+0)^080h+0
  3545  0092  00CB               	movf	fsr0,w
  3546  0093  0804               	movwf	((??_main+0)^080h+0+1)
  3547  0094  00CC               	movlw	13
  3548  0095  300D               	movwf	((??_main+0)^080h+0+2)
  3549  0096  00CD               u4230:
  3550  0097                     	movf	(??_main+0)^080h+0,w
  3551  0097  084B               	movwf	fsr0
  3552  0098  0084               	bsf	status, 7	;select IRP bank3
  3553  0099  1783               	
  3554                           	movf	indf,w
  3555  009A  0800               	movwf	((??_main+0)^080h+0+3)
  3556  009B  00CE               	incf	(??_main+0)^080h+0,f
  3557  009C  0ACB               	movf	((??_main+0)^080h+0+1),w
  3558  009D  084C               	movwf	fsr0
  3559  009E  0084               	
  3560                           	movf	((??_main+0)^080h+0+3),w
  3561  009F  084E               	movwf	indf
  3562  00A0  0080               	incf	((??_main+0)^080h+0+1),f
  3563  00A1  0ACC               	decfsz	((??_main+0)^080h+0+2),f
  3564  00A2  0BCD               	goto	u4230
  3565  00A3  2897               	
  3566                           	line	37
  3567                           	
  3568                           l4670:	
  3569  00A4                     ;main.c: 37:     char senha[] = {
  3570                           	movlw	(main@senha)&0ffh
  3571  00A4  30C8               	movwf	fsr0
  3572  00A5  0084               	movf	(main@F1418)^080h,w
  3573  00A6  0856               	movwf	indf
  3574  00A7  0080               	incf	fsr0,f
  3575  00A8  0A84               	movf	(main@F1418)^080h+1,w
  3576  00A9  0857               	movwf	indf
  3577  00AA  0080               	incf	fsr0,f
  3578  00AB  0A84               	movf	(main@F1418)^080h+2,w
  3579  00AC  0858               	movwf	indf
  3580  00AD  0080               	incf	fsr0,f
  3581  00AE  0A84               	movf	(main@F1418)^080h+3,w
  3582  00AF  0859               	movwf	indf
  3583  00B0  0080               	incf	fsr0,f
  3584  00B1  0A84               	movf	(main@F1418)^080h+4,w
  3585  00B2  085A               	movwf	indf
  3586  00B3  0080               	incf	fsr0,f
  3587  00B4  0A84               	movf	(main@F1418)^080h+5,w
  3588  00B5  085B               	movwf	indf
  3589  00B6  0080               	line	40
  3590                           	
  3591                           l4672:	
  3592  00B7                     ;main.c: 40:     TRISCbits.TRISC1 = 0;
  3593                           	bcf	(135)^080h,1	;volatile
  3594  00B7  1087               	line	41
  3595                           	
  3596                           l4674:	
  3597  00B8                     ;main.c: 41:     TRISBbits.TRISB7 = 1;
  3598                           	bsf	(134)^080h,7	;volatile
  3599  00B8  1786               	line	43
  3600                           	
  3601                           l4676:	
  3602  00B9                     ;main.c: 43:     ANSEL = 0;
  3603                           	bsf	status, 5	;RP0=1, select bank3
  3604  00B9  1683               	bsf	status, 6	;RP1=1, select bank3
  3605  00BA  1703               	clrf	(392)^0180h	;volatile
  3606  00BB  0188               	line	44
  3607                           	
  3608                           l4678:	
  3609  00BC                     ;main.c: 44:     ANSELH = 0;
  3610                           	clrf	(393)^0180h	;volatile
  3611  00BC  0189               	line	47
  3612                           	
  3613                           l4680:	
  3614  00BD                     ;main.c: 47:     spi_hardware_disable();
  3615                           	fcall	_spi_hardware_disable
  3616  00BD  160A  118A  27F2  120A  118A  	line	48
  3617                           ;main.c: 48:     spiSoftIniciar();
  3618                           	fcall	_spiSoftIniciar
  3619  00C2  120A  158A  216E  120A  118A  	line	49
  3620                           ;main.c: 49:     mfrc522Iniciar();
  3621                           	fcall	_mfrc522Iniciar
  3622  00C7  120A  158A  2511  120A  118A  	line	50
  3623                           ;main.c: 50:     lcd_init();
  3624                           	fcall	_lcd_init
  3625  00CC  120A  118A  27AB  120A  118A  	line	51
  3626                           ;main.c: 51:     sensors_init();
  3627                           	fcall	_sensors_init
  3628  00D1  120A  158A  2135  120A  118A  	line	52
  3629                           ;main.c: 52:     tmr_tick_init();
  3630                           	fcall	_tmr_tick_init
  3631  00D6  120A  158A  20C4  120A  118A  	line	54
  3632                           	
  3633                           l4682:	
  3634  00DB                     ;main.c: 54:     PORTCbits.RC1 = 1;
  3635                           	bcf	status, 5	;RP0=0, select bank0
  3636  00DB  1283               	bcf	status, 6	;RP1=0, select bank0
  3637  00DC  1303               	bsf	(7),1	;volatile
  3638  00DD  1487               	goto	l4786
  3639  00DE  2B34               	line	57
  3640                           ;main.c: 57:     while(1)
  3641                           	
  3642                           l55:	
  3643  00DF                     	line	61
  3644                           ;main.c: 58:     {;main.c: 61:         switch(state)
  3645                           	goto	l4786
  3646  00DF  2B34               	line	63
  3647                           ;main.c: 62:         {;main.c: 63:             case 0:
  3648                           	
  3649                           l57:	
  3650  00E0                     	line	65
  3651                           	
  3652                           l4684:	
  3653  00E0                     ;main.c: 65:                     lcd_print(0,3,"INDUSTRIAL");
  3654                           	movlw	low(03h)
  3655  00E0  3003               	bsf	status, 5	;RP0=1, select bank1
  3656  00E1  1683               	bcf	status, 6	;RP1=0, select bank1
  3657  00E2  1303               	movwf	(??_main+0)^080h+0
  3658  00E3  00CB               	movf	(??_main+0)^080h+0,w
  3659  00E4  084B               	movwf	(lcd_print@col)^080h
  3660  00E5  00A6               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  3661  00E6  3023               	movwf	(lcd_print@str)^080h
  3662  00E7  00A7               	movlw	80h
  3663  00E8  3080               	movwf	(lcd_print@str+1)^080h
  3664  00E9  00A8               	movlw	low(0)
  3665  00EA  3000               	fcall	_lcd_print
  3666  00EB  120A  158A  2427  120A  118A  	line	66
  3667                           ;main.c: 66:                     lcd_print(1,4,"SAFETY");
  3668                           	movlw	low(04h)
  3669  00F0  3004               	bsf	status, 5	;RP0=1, select bank1
  3670  00F1  1683               	bcf	status, 6	;RP1=0, select bank1
  3671  00F2  1303               	movwf	(??_main+0)^080h+0
  3672  00F3  00CB               	movf	(??_main+0)^080h+0,w
  3673  00F4  084B               	movwf	(lcd_print@col)^080h
  3674  00F5  00A6               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  3675  00F6  3060               	movwf	(lcd_print@str)^080h
  3676  00F7  00A7               	movlw	80h
  3677  00F8  3080               	movwf	(lcd_print@str+1)^080h
  3678  00F9  00A8               	movlw	low(01h)
  3679  00FA  3001               	fcall	_lcd_print
  3680  00FB  120A  158A  2427  120A  118A  	line	67
  3681                           	
  3682                           l4686:	
  3683  0100                     ;main.c: 67:                     delay_ms(5000);
  3684                           	movlw	088h
  3685  0100  3088               	bsf	status, 5	;RP0=1, select bank1
  3686  0101  1683               	bcf	status, 6	;RP1=0, select bank1
  3687  0102  1303               	movwf	(delay_ms@t)^080h
  3688  0103  00A0               	movlw	013h
  3689  0104  3013               	movwf	((delay_ms@t)^080h)+1
  3690  0105  00A1               	fcall	_delay_ms
  3691  0106  120A  158A  218C  120A  118A  	line	68
  3692                           	
  3693                           l4688:	
  3694  010B                     ;main.c: 68:                     state = 1;
  3695                           	bsf	status, 5	;RP0=1, select bank3
  3696  010B  1683               	bsf	status, 6	;RP1=1, select bank3
  3697  010C  1703               	clrf	(main@state)^0180h
  3698  010D  01DD               	incf	(main@state)^0180h,f
  3699  010E  0ADD               	line	69
  3700                           	
  3701                           l4690:	
  3702  010F                     ;main.c: 69:                     lcd_clr();
  3703                           	fcall	_lcd_clr
  3704  010F  160A  118A  27CC  120A  118A  	line	70
  3705                           ;main.c: 70:                     break;
  3706                           	goto	l4786
  3707  0114  2B34               	line	73
  3708                           ;main.c: 73:             case 1:
  3709                           	
  3710                           l59:	
  3711  0115                     	line	75
  3712                           	
  3713                           l4692:	
  3714  0115                     ;main.c: 75:                     lcd_print(0,3,"ESPERANDO");
  3715                           	movlw	low(03h)
  3716  0115  3003               	bsf	status, 5	;RP0=1, select bank1
  3717  0116  1683               	bcf	status, 6	;RP1=0, select bank1
  3718  0117  1303               	movwf	(??_main+0)^080h+0
  3719  0118  00CB               	movf	(??_main+0)^080h+0,w
  3720  0119  084B               	movwf	(lcd_print@col)^080h
  3721  011A  00A6               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3722  011B  302E               	movwf	(lcd_print@str)^080h
  3723  011C  00A7               	movlw	80h
  3724  011D  3080               	movwf	(lcd_print@str+1)^080h
  3725  011E  00A8               	movlw	low(0)
  3726  011F  3000               	fcall	_lcd_print
  3727  0120  120A  158A  2427  120A  118A  	line	76
  3728                           ;main.c: 76:                     lcd_print(1,4,"ACESSO");
  3729                           	movlw	low(04h)
  3730  0125  3004               	bsf	status, 5	;RP0=1, select bank1
  3731  0126  1683               	bcf	status, 6	;RP1=0, select bank1
  3732  0127  1303               	movwf	(??_main+0)^080h+0
  3733  0128  00CB               	movf	(??_main+0)^080h+0,w
  3734  0129  084B               	movwf	(lcd_print@col)^080h
  3735  012A  00A6               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3736  012B  3059               	movwf	(lcd_print@str)^080h
  3737  012C  00A7               	movlw	80h
  3738  012D  3080               	movwf	(lcd_print@str+1)^080h
  3739  012E  00A8               	movlw	low(01h)
  3740  012F  3001               	fcall	_lcd_print
  3741  0130  120A  158A  2427  120A  118A  	line	78
  3742                           	
  3743                           l4694:	
  3744  0135                     ;main.c: 78:                     PORTCbits.RC0 = 0;
  3745                           	bcf	status, 5	;RP0=0, select bank0
  3746  0135  1283               	bcf	status, 6	;RP1=0, select bank0
  3747  0136  1303               	bcf	(7),0	;volatile
  3748  0137  1007               	line	80
  3749                           	
  3750                           l4696:	
  3751  0138                     ;main.c: 80:                     procura_tag(0x26, TAG);
  3752                           	movlw	(low(main@TAG|((0x1)<<8))&0ffh)
  3753  0138  30CE               	bsf	status, 5	;RP0=1, select bank1
  3754  0139  1683               	bcf	status, 6	;RP1=0, select bank1
  3755  013A  1303               	movwf	(procura_tag@data)^080h
  3756  013B  00BB               	movlw	(0x1)
  3757  013C  3001               	movwf	(procura_tag@data+1)^080h
  3758  013D  00BC               	movlw	low(026h)
  3759  013E  3026               	fcall	_procura_tag
  3760  013F  120A  158A  23DD  120A  118A  	line	81
  3761                           	
  3762                           l4698:	
  3763  0144                     ;main.c: 81:                     uid = MFRC522_AntiColl(UID);
  3764                           	movlw	(low(main@UID|((0x1)<<8))&0ffh)
  3765  0144  30D3               	bsf	status, 5	;RP0=1, select bank1
  3766  0145  1683               	bcf	status, 6	;RP1=0, select bank1
  3767  0146  1303               	movwf	(MFRC522_AntiColl@serNum)^080h
  3768  0147  00C0               	movlw	(0x1)
  3769  0148  3001               	movwf	(MFRC522_AntiColl@serNum+1)^080h
  3770  0149  00C1               	fcall	_MFRC522_AntiColl
  3771  014A  120A  158A  2615  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3772  014F  1683               	bcf	status, 6	;RP1=0, select bank1
  3773  0150  1303               	movwf	(??_main+0)^080h+0
  3774  0151  00CB               	movf	(??_main+0)^080h+0,w
  3775  0152  084B               	bsf	status, 5	;RP0=1, select bank3
  3776  0153  1683               	bsf	status, 6	;RP1=1, select bank3
  3777  0154  1703               	movwf	(main@uid)^0180h
  3778  0155  00DC               	line	83
  3779                           	
  3780                           l4700:	
  3781  0156                     ;main.c: 83:                     if(uid == 0)
  3782                           	movf	((main@uid)^0180h),w
  3783  0156  085C               	btfss	status,2
  3784  0157  1D03               	goto	u4241
  3785  0158  295A               	goto	u4240
  3786  0159  295B               u4241:
  3787  015A                     	goto	l60
  3788  015A  2965               u4240:
  3789  015B                     	line	85
  3790                           	
  3791                           l4702:	
  3792  015B                     ;main.c: 84:                     {;main.c: 85:                         state = 2;
  3793                           	movlw	low(02h)
  3794  015B  3002               	bsf	status, 5	;RP0=1, select bank1
  3795  015C  1683               	bcf	status, 6	;RP1=0, select bank1
  3796  015D  1303               	movwf	(??_main+0)^080h+0
  3797  015E  00CB               	movf	(??_main+0)^080h+0,w
  3798  015F  084B               	bsf	status, 5	;RP0=1, select bank3
  3799  0160  1683               	bsf	status, 6	;RP1=1, select bank3
  3800  0161  1703               	movwf	(main@state)^0180h
  3801  0162  00DD               	line	86
  3802                           ;main.c: 86:                         break;
  3803                           	goto	l4786
  3804  0163  2B34               	line	87
  3805                           	
  3806                           l4704:	
  3807  0164                     ;main.c: 87:                     }
  3808                           	goto	l4706
  3809  0164  2969               	line	88
  3810                           ;main.c: 88:                     else
  3811                           	
  3812                           l60:	
  3813  0165                     	line	90
  3814                           ;main.c: 89:                     {;main.c: 90:                         state = 1;
  3815                           	clrf	(main@state)^0180h
  3816  0165  01DD               	incf	(main@state)^0180h,f
  3817  0166  0ADD               	line	91
  3818                           ;main.c: 91:                         break;
  3819                           	goto	l4786
  3820  0167  2B34               	line	92
  3821                           ;main.c: 92:                     }
  3822                           	
  3823                           l61:	
  3824  0168                     	goto	l4706
  3825  0168  2969               	line	94
  3826                           ;main.c: 94:             case 2:
  3827                           	
  3828                           l62:	
  3829  0169                     	line	96
  3830                           	
  3831                           l4706:	
  3832  0169                     ;main.c: 96:                     lcd_clr();
  3833                           	fcall	_lcd_clr
  3834  0169  160A  118A  27CC  120A  118A  	line	98
  3835                           	
  3836                           l4708:	
  3837  016E                     ;main.c: 98:                     lcd_print(0,0,"TAG :");
  3838                           	bsf	status, 5	;RP0=1, select bank1
  3839  016E  1683               	bcf	status, 6	;RP1=0, select bank1
  3840  016F  1303               	clrf	(lcd_print@col)^080h
  3841  0170  01A6               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3842  0171  3067               	movwf	(lcd_print@str)^080h
  3843  0172  00A7               	movlw	80h
  3844  0173  3080               	movwf	(lcd_print@str+1)^080h
  3845  0174  00A8               	movlw	low(0)
  3846  0175  3000               	fcall	_lcd_print
  3847  0176  120A  158A  2427  120A  118A  	line	100
  3848                           	
  3849                           l4710:	
  3850  017B                     ;main.c: 100:                     hex2Ascii(UID,uidAsci,6);
  3851                           	movlw	(low(main@UID|((0x1)<<8))&0ffh)
  3852  017B  30D3               	bsf	status, 5	;RP0=1, select bank1
  3853  017C  1683               	bcf	status, 6	;RP1=0, select bank1
  3854  017D  1303               	movwf	(hex2Ascii@strIn)^080h
  3855  017E  00A0               	movlw	(0x1)
  3856  017F  3001               	movwf	(hex2Ascii@strIn+1)^080h
  3857  0180  00A1               	movlw	(low(main@uidAsci|((0x1)<<8)))&0ffh
  3858  0181  30BB               	movwf	(??_main+0)^080h+0
  3859  0182  00CB               	movf	(??_main+0)^080h+0,w
  3860  0183  084B               	movwf	(hex2Ascii@strOut)^080h
  3861  0184  00A2               	movlw	low(06h)
  3862  0185  3006               	movwf	(??_main+1)^080h+0
  3863  0186  00CC               	movf	(??_main+1)^080h+0,w
  3864  0187  084C               	movwf	(hex2Ascii@cntDig)^080h
  3865  0188  00A3               	fcall	_hex2Ascii
  3866  0189  120A  158A  2588  120A  118A  	line	102
  3867                           	
  3868                           l4712:	
  3869  018E                     ;main.c: 102:                     lcd_print(0,0,"Gabriel Lacerda");
  3870                           	bsf	status, 5	;RP0=1, select bank1
  3871  018E  1683               	bcf	status, 6	;RP1=0, select bank1
  3872  018F  1303               	clrf	(lcd_print@col)^080h
  3873  0190  01A6               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3874  0191  3013               	movwf	(lcd_print@str)^080h
  3875  0192  00A7               	movlw	80h
  3876  0193  3080               	movwf	(lcd_print@str+1)^080h
  3877  0194  00A8               	movlw	low(0)
  3878  0195  3000               	fcall	_lcd_print
  3879  0196  120A  158A  2427  120A  118A  	line	105
  3880                           	
  3881                           l4714:	
  3882  019B                     ;main.c: 105:                     delay_ms(5000);
  3883                           	movlw	088h
  3884  019B  3088               	bsf	status, 5	;RP0=1, select bank1
  3885  019C  1683               	bcf	status, 6	;RP1=0, select bank1
  3886  019D  1303               	movwf	(delay_ms@t)^080h
  3887  019E  00A0               	movlw	013h
  3888  019F  3013               	movwf	((delay_ms@t)^080h)+1
  3889  01A0  00A1               	fcall	_delay_ms
  3890  01A1  120A  158A  218C  120A  118A  	line	107
  3891                           ;main.c: 107:                     if(tag_false(UID, senha) == 0)
  3892                           	movlw	(low(main@senha|((0x1)<<8)))&0ffh
  3893  01A6  30C8               	bsf	status, 5	;RP0=1, select bank1
  3894  01A7  1683               	bcf	status, 6	;RP1=0, select bank1
  3895  01A8  1303               	movwf	(??_main+0)^080h+0
  3896  01A9  00CB               	movf	(??_main+0)^080h+0,w
  3897  01AA  084B               	movwf	(tag_false@p2)^080h
  3898  01AB  00A0               	movlw	(low(main@UID|((0x1)<<8)))&0ffh
  3899  01AC  30D3               	fcall	_tag_false
  3900  01AD  120A  158A  2229  120A  118A  	xorlw	0
  3901  01B2  3A00               	skipz
  3902  01B3  1D03               	goto	u4251
  3903  01B4  29B6               	goto	u4250
  3904  01B5  29B7               u4251:
  3905  01B6                     	goto	l4720
  3906  01B6  29C1               u4250:
  3907  01B7                     	line	109
  3908                           	
  3909                           l4716:	
  3910  01B7                     ;main.c: 108:                     {;main.c: 109:                         state = 10;
  3911                           	movlw	low(0Ah)
  3912  01B7  300A               	bsf	status, 5	;RP0=1, select bank1
  3913  01B8  1683               	bcf	status, 6	;RP1=0, select bank1
  3914  01B9  1303               	movwf	(??_main+0)^080h+0
  3915  01BA  00CB               	movf	(??_main+0)^080h+0,w
  3916  01BB  084B               	bsf	status, 5	;RP0=1, select bank3
  3917  01BC  1683               	bsf	status, 6	;RP1=1, select bank3
  3918  01BD  1703               	movwf	(main@state)^0180h
  3919  01BE  00DD               	line	110
  3920                           ;main.c: 110:                         break;
  3921                           	goto	l4786
  3922  01BF  2B34               	line	111
  3923                           	
  3924                           l4718:	
  3925  01C0                     ;main.c: 111:                     }
  3926                           	goto	l4722
  3927  01C0  29CB               	line	112
  3928                           ;main.c: 112:                     else
  3929                           	
  3930                           l63:	
  3931  01C1                     	line	114
  3932                           	
  3933                           l4720:	
  3934  01C1                     ;main.c: 113:                     {;main.c: 114:                         state = 11;
  3935                           	movlw	low(0Bh)
  3936  01C1  300B               	bsf	status, 5	;RP0=1, select bank1
  3937  01C2  1683               	bcf	status, 6	;RP1=0, select bank1
  3938  01C3  1303               	movwf	(??_main+0)^080h+0
  3939  01C4  00CB               	movf	(??_main+0)^080h+0,w
  3940  01C5  084B               	bsf	status, 5	;RP0=1, select bank3
  3941  01C6  1683               	bsf	status, 6	;RP1=1, select bank3
  3942  01C7  1703               	movwf	(main@state)^0180h
  3943  01C8  00DD               	line	115
  3944                           ;main.c: 115:                         break;
  3945                           	goto	l4786
  3946  01C9  2B34               	line	116
  3947                           ;main.c: 116:                     }
  3948                           	
  3949                           l64:	
  3950  01CA                     	goto	l4722
  3951  01CA  29CB               	line	119
  3952                           ;main.c: 119:             case 10:
  3953                           	
  3954                           l65:	
  3955  01CB                     	line	120
  3956                           	
  3957                           l4722:	
  3958  01CB                     ;main.c: 120:                     lcd_clr();
  3959                           	fcall	_lcd_clr
  3960  01CB  160A  118A  27CC  120A  118A  	line	121
  3961                           	
  3962                           l4724:	
  3963  01D0                     ;main.c: 121:                     lcd_print(0,5,"ACESSO");
  3964                           	movlw	low(05h)
  3965  01D0  3005               	bsf	status, 5	;RP0=1, select bank1
  3966  01D1  1683               	bcf	status, 6	;RP1=0, select bank1
  3967  01D2  1303               	movwf	(??_main+0)^080h+0
  3968  01D3  00CB               	movf	(??_main+0)^080h+0,w
  3969  01D4  084B               	movwf	(lcd_print@col)^080h
  3970  01D5  00A6               	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  3971  01D6  3059               	movwf	(lcd_print@str)^080h
  3972  01D7  00A7               	movlw	80h
  3973  01D8  3080               	movwf	(lcd_print@str+1)^080h
  3974  01D9  00A8               	movlw	low(0)
  3975  01DA  3000               	fcall	_lcd_print
  3976  01DB  120A  158A  2427  120A  118A  	line	122
  3977                           	
  3978                           l4726:	
  3979  01E0                     ;main.c: 122:                     lcd_print(1,4,"LIBERADO");
  3980                           	movlw	low(04h)
  3981  01E0  3004               	bsf	status, 5	;RP0=1, select bank1
  3982  01E1  1683               	bcf	status, 6	;RP1=0, select bank1
  3983  01E2  1303               	movwf	(??_main+0)^080h+0
  3984  01E3  00CB               	movf	(??_main+0)^080h+0,w
  3985  01E4  084B               	movwf	(lcd_print@col)^080h
  3986  01E5  00A6               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  3987  01E6  3041               	movwf	(lcd_print@str)^080h
  3988  01E7  00A7               	movlw	80h
  3989  01E8  3080               	movwf	(lcd_print@str+1)^080h
  3990  01E9  00A8               	movlw	low(01h)
  3991  01EA  3001               	fcall	_lcd_print
  3992  01EB  120A  158A  2427  120A  118A  	line	123
  3993                           ;main.c: 123:                     delay_ms(2000);
  3994                           	movlw	0D0h
  3995  01F0  30D0               	bsf	status, 5	;RP0=1, select bank1
  3996  01F1  1683               	bcf	status, 6	;RP1=0, select bank1
  3997  01F2  1303               	movwf	(delay_ms@t)^080h
  3998  01F3  00A0               	movlw	07h
  3999  01F4  3007               	movwf	((delay_ms@t)^080h)+1
  4000  01F5  00A1               	fcall	_delay_ms
  4001  01F6  120A  158A  218C  120A  118A  	line	124
  4002                           ;main.c: 124:                     lcd_clr();
  4003                           	fcall	_lcd_clr
  4004  01FB  160A  118A  27CC  120A  118A  	line	125
  4005                           	
  4006                           l4728:	
  4007  0200                     ;main.c: 125:                     lcd_print(0,0,"MAQ. ENERGIZADA");
  4008                           	bsf	status, 5	;RP0=1, select bank1
  4009  0200  1683               	bcf	status, 6	;RP1=0, select bank1
  4010  0201  1303               	clrf	(lcd_print@col)^080h
  4011  0202  01A6               	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  4012  0203  3003               	movwf	(lcd_print@str)^080h
  4013  0204  00A7               	movlw	80h
  4014  0205  3080               	movwf	(lcd_print@str+1)^080h
  4015  0206  00A8               	movlw	low(0)
  4016  0207  3000               	fcall	_lcd_print
  4017  0208  120A  158A  2427  120A  118A  	line	126
  4018                           	
  4019                           l4730:	
  4020  020D                     ;main.c: 126:                     state = 20;
  4021                           	movlw	low(014h)
  4022  020D  3014               	bsf	status, 5	;RP0=1, select bank1
  4023  020E  1683               	bcf	status, 6	;RP1=0, select bank1
  4024  020F  1303               	movwf	(??_main+0)^080h+0
  4025  0210  00CB               	movf	(??_main+0)^080h+0,w
  4026  0211  084B               	bsf	status, 5	;RP0=1, select bank3
  4027  0212  1683               	bsf	status, 6	;RP1=1, select bank3
  4028  0213  1703               	movwf	(main@state)^0180h
  4029  0214  00DD               	line	127
  4030                           ;main.c: 127:                     break;
  4031                           	goto	l4786
  4032  0215  2B34               	line	131
  4033                           ;main.c: 131:             case 11:
  4034                           	
  4035                           l66:	
  4036  0216                     	line	132
  4037                           	
  4038                           l4732:	
  4039  0216                     ;main.c: 132:                     lcd_clr();
  4040                           	fcall	_lcd_clr
  4041  0216  160A  118A  27CC  120A  118A  	line	133
  4042                           	
  4043                           l4734:	
  4044  021B                     ;main.c: 133:                     lcd_print(0,5,"ACESSO");
  4045                           	movlw	low(05h)
  4046  021B  3005               	bsf	status, 5	;RP0=1, select bank1
  4047  021C  1683               	bcf	status, 6	;RP1=0, select bank1
  4048  021D  1303               	movwf	(??_main+0)^080h+0
  4049  021E  00CB               	movf	(??_main+0)^080h+0,w
  4050  021F  084B               	movwf	(lcd_print@col)^080h
  4051  0220  00A6               	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  4052  0221  3059               	movwf	(lcd_print@str)^080h
  4053  0222  00A7               	movlw	80h
  4054  0223  3080               	movwf	(lcd_print@str+1)^080h
  4055  0224  00A8               	movlw	low(0)
  4056  0225  3000               	fcall	_lcd_print
  4057  0226  120A  158A  2427  120A  118A  	line	134
  4058                           	
  4059                           l4736:	
  4060  022B                     ;main.c: 134:                     lcd_print(1,5,"NEGADO");
  4061                           	movlw	low(05h)
  4062  022B  3005               	bsf	status, 5	;RP0=1, select bank1
  4063  022C  1683               	bcf	status, 6	;RP1=0, select bank1
  4064  022D  1303               	movwf	(??_main+0)^080h+0
  4065  022E  00CB               	movf	(??_main+0)^080h+0,w
  4066  022F  084B               	movwf	(lcd_print@col)^080h
  4067  0230  00A6               	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
  4068  0231  3052               	movwf	(lcd_print@str)^080h
  4069  0232  00A7               	movlw	80h
  4070  0233  3080               	movwf	(lcd_print@str+1)^080h
  4071  0234  00A8               	movlw	low(01h)
  4072  0235  3001               	fcall	_lcd_print
  4073  0236  120A  158A  2427  120A  118A  	line	135
  4074                           ;main.c: 135:                     delay_ms(5000);
  4075                           	movlw	088h
  4076  023B  3088               	bsf	status, 5	;RP0=1, select bank1
  4077  023C  1683               	bcf	status, 6	;RP1=0, select bank1
  4078  023D  1303               	movwf	(delay_ms@t)^080h
  4079  023E  00A0               	movlw	013h
  4080  023F  3013               	movwf	((delay_ms@t)^080h)+1
  4081  0240  00A1               	fcall	_delay_ms
  4082  0241  120A  158A  218C  120A  118A  	line	136
  4083                           ;main.c: 136:                     lcd_clr();
  4084                           	fcall	_lcd_clr
  4085  0246  160A  118A  27CC  120A  118A  	line	137
  4086                           	
  4087                           l4738:	
  4088  024B                     ;main.c: 137:                     state = 1;
  4089                           	bsf	status, 5	;RP0=1, select bank3
  4090  024B  1683               	bsf	status, 6	;RP1=1, select bank3
  4091  024C  1703               	clrf	(main@state)^0180h
  4092  024D  01DD               	incf	(main@state)^0180h,f
  4093  024E  0ADD               	line	138
  4094                           ;main.c: 138:                     break;
  4095                           	goto	l4786
  4096  024F  2B34               	line	140
  4097                           ;main.c: 140:             case 20:
  4098                           	
  4099                           l67:	
  4100  0250                     	line	142
  4101                           	
  4102                           l4740:	
  4103  0250                     ;main.c: 142:                     uts_trigger();
  4104                           	fcall	_uts_trigger
  4105  0250  120A  158A  20D9  120A  118A  	line	143
  4106                           	
  4107                           l4742:	
  4108  0255                     ;main.c: 143:                     dist = 0;
  4109                           	movlw	high highword(0)
  4110  0255  3000               	bsf	status, 5	;RP0=1, select bank1
  4111  0256  1683               	bcf	status, 6	;RP1=0, select bank1
  4112  0257  1303               	movwf	(_dist+3)^080h
  4113  0258  00EB               	movlw	low highword(0)
  4114  0259  3000               	movwf	(_dist+2)^080h
  4115  025A  00EA               	movlw	high(0)
  4116  025B  3000               	movwf	(_dist+1)^080h
  4117  025C  00E9               	movlw	low(0)
  4118  025D  3000               	movwf	(_dist)^080h
  4119  025E  00E8               
  4120                           	line	145
  4121                           	
  4122                           l4744:	
  4123  025F                     ;main.c: 145:                     if(prs_detect())
  4124                           	fcall	_prs_detect
  4125  025F  120A  158A  21FA  120A  118A  	xorlw	0
  4126  0264  3A00               	skipnz
  4127  0265  1903               	goto	u4261
  4128  0266  2A68               	goto	u4260
  4129  0267  2A69               u4261:
  4130  0268                     	goto	l4748
  4131  0268  2A72               u4260:
  4132  0269                     	line	147
  4133                           	
  4134                           l4746:	
  4135  0269                     ;main.c: 146:                     {;main.c: 147:                         state = 21;
  4136                           	movlw	low(015h)
  4137  0269  3015               	bsf	status, 5	;RP0=1, select bank1
  4138  026A  1683               	bcf	status, 6	;RP1=0, select bank1
  4139  026B  1303               	movwf	(??_main+0)^080h+0
  4140  026C  00CB               	movf	(??_main+0)^080h+0,w
  4141  026D  084B               	bsf	status, 5	;RP0=1, select bank3
  4142  026E  1683               	bsf	status, 6	;RP1=1, select bank3
  4143  026F  1703               	movwf	(main@state)^0180h
  4144  0270  00DD               	line	148
  4145                           ;main.c: 148:                     }
  4146                           	goto	l4750
  4147  0271  2A7B               	line	149
  4148                           ;main.c: 149:                     else
  4149                           	
  4150                           l68:	
  4151  0272                     	line	151
  4152                           	
  4153                           l4748:	
  4154  0272                     ;main.c: 150:                     {;main.c: 151:                         state = 22;
  4155                           	movlw	low(016h)
  4156  0272  3016               	bsf	status, 5	;RP0=1, select bank1
  4157  0273  1683               	bcf	status, 6	;RP1=0, select bank1
  4158  0274  1303               	movwf	(??_main+0)^080h+0
  4159  0275  00CB               	movf	(??_main+0)^080h+0,w
  4160  0276  084B               	bsf	status, 5	;RP0=1, select bank3
  4161  0277  1683               	bsf	status, 6	;RP1=1, select bank3
  4162  0278  1703               	movwf	(main@state)^0180h
  4163  0279  00DD               	goto	l4750
  4164  027A  2A7B               	line	152
  4165                           ;main.c: 152:                     }
  4166                           	
  4167                           l69:	
  4168  027B                     	line	154
  4169                           	
  4170                           l4750:	
  4171  027B                     ;main.c: 154:                     if(dist > 1 && dist < perigo)
  4172                           	bsf	status, 5	;RP0=1, select bank1
  4173  027B  1683               	bcf	status, 6	;RP1=0, select bank1
  4174  027C  1303               	btfsc	(_dist+3)^080h,7
  4175  027D  1BEB               	goto	u4271
  4176  027E  2A8F               	movf	(_dist+3)^080h,w
  4177  027F  086B               	btfss	status,2
  4178  0280  1D03               	goto	u4270
  4179  0281  2A90               	movf	(_dist+2)^080h,w
  4180  0282  086A               	btfss	status,2
  4181  0283  1D03               	goto	u4270
  4182  0284  2A90               	movf	(_dist+1)^080h,w
  4183  0285  0869               	btfss	status,2
  4184  0286  1D03               	goto	u4270
  4185  0287  2A90               	movlw	2
  4186  0288  3002               	subwf	(_dist)^080h,w
  4187  0289  0268               	skipz
  4188  028A  1D03               	goto	u4273
  4189  028B  2A8C               u4273:
  4190  028C                     	btfss	status,0
  4191  028C  1C03               	goto	u4271
  4192  028D  2A8F               	goto	u4270
  4193  028E  2A90               
  4194                           u4271:
  4195  028F                     	goto	l4786
  4196  028F  2B34               u4270:
  4197  0290                     	
  4198                           l4752:	
  4199  0290                     	bsf	status, 5	;RP0=1, select bank3
  4200  0290  1683               	bsf	status, 6	;RP1=1, select bank3
  4201  0291  1703               	movf	(main@perigo)^0180h,w
  4202  0292  085A               	bsf	status, 5	;RP0=1, select bank1
  4203  0293  1683               	bcf	status, 6	;RP1=0, select bank1
  4204  0294  1303               	movwf	((??_main+0)^080h+0)
  4205  0295  00CB               	bsf	status, 5	;RP0=1, select bank3
  4206  0296  1683               	bsf	status, 6	;RP1=1, select bank3
  4207  0297  1703               	movf	(main@perigo+1)^0180h,w
  4208  0298  085B               	bsf	status, 5	;RP0=1, select bank1
  4209  0299  1683               	bcf	status, 6	;RP1=0, select bank1
  4210  029A  1303               	movwf	((??_main+0)^080h+0+1)
  4211  029B  00CC               	movlw	0
  4212  029C  3000               	btfsc	((??_main+0)^080h+0+1),7
  4213  029D  1BCC               	movlw	255
  4214  029E  30FF               	movwf	((??_main+0)^080h+0+2)
  4215  029F  00CD               	movwf	((??_main+0)^080h+0+3)
  4216  02A0  00CE               	movf	(_dist+3)^080h,w
  4217  02A1  086B               	xorlw	80h
  4218  02A2  3A80               	movwf	btemp+1
  4219  02A3  00FF               	movf	3+(??_main+0)^080h+0,w
  4220  02A4  084E               	xorlw	80h
  4221  02A5  3A80               	subwf	btemp+1,w
  4222  02A6  027F               	
  4223                           	skipz
  4224  02A7  1D03               	goto	u4283
  4225  02A8  2AB3               	movf	2+(??_main+0)^080h+0,w
  4226  02A9  084D               	subwf	(_dist+2)^080h,w
  4227  02AA  026A               	skipz
  4228  02AB  1D03               	goto	u4283
  4229  02AC  2AB3               	movf	1+(??_main+0)^080h+0,w
  4230  02AD  084C               	subwf	(_dist+1)^080h,w
  4231  02AE  0269               	skipz
  4232  02AF  1D03               	goto	u4283
  4233  02B0  2AB3               	movf	0+(??_main+0)^080h+0,w
  4234  02B1  084B               	subwf	(_dist)^080h,w
  4235  02B2  0268               u4283:
  4236  02B3                     	skipnc
  4237  02B3  1803               	goto	u4281
  4238  02B4  2AB6               	goto	u4280
  4239  02B5  2AB7               u4281:
  4240  02B6                     	goto	l4786
  4241  02B6  2B34               u4280:
  4242  02B7                     	line	156
  4243                           	
  4244                           l4754:	
  4245  02B7                     ;main.c: 155:                     {;main.c: 156:                         state = 23;
  4246                           	movlw	low(017h)
  4247  02B7  3017               	movwf	(??_main+0)^080h+0
  4248  02B8  00CB               	movf	(??_main+0)^080h+0,w
  4249  02B9  084B               	bsf	status, 5	;RP0=1, select bank3
  4250  02BA  1683               	bsf	status, 6	;RP1=1, select bank3
  4251  02BB  1703               	movwf	(main@state)^0180h
  4252  02BC  00DD               	goto	l4786
  4253  02BD  2B34               	line	157
  4254                           ;main.c: 157:                     }
  4255                           	
  4256                           l70:	
  4257  02BE                     	line	159
  4258                           ;main.c: 159:                     break;
  4259                           	goto	l4786
  4260  02BE  2B34               	line	161
  4261                           ;main.c: 161:             case 21:
  4262                           	
  4263                           l71:	
  4264  02BF                     	line	162
  4265                           	
  4266                           l4756:	
  4267  02BF                     ;main.c: 162:                     uts_trigger();
  4268                           	fcall	_uts_trigger
  4269  02BF  120A  158A  20D9  120A  118A  	line	163
  4270                           	
  4271                           l4758:	
  4272  02C4                     ;main.c: 163:                     PORTCbits.RC1 = 0;
  4273                           	bcf	status, 5	;RP0=0, select bank0
  4274  02C4  1283               	bcf	status, 6	;RP1=0, select bank0
  4275  02C5  1303               	bcf	(7),1	;volatile
  4276  02C6  1087               	line	164
  4277                           	
  4278                           l4760:	
  4279  02C7                     ;main.c: 164:                     lcd_print(1,4, " ALERTA");
  4280                           	movlw	low(04h)
  4281  02C7  3004               	bsf	status, 5	;RP0=1, select bank1
  4282  02C8  1683               	bcf	status, 6	;RP1=0, select bank1
  4283  02C9  1303               	movwf	(??_main+0)^080h+0
  4284  02CA  00CB               	movf	(??_main+0)^080h+0,w
  4285  02CB  084B               	movwf	(lcd_print@col)^080h
  4286  02CC  00A6               	movlw	(low((((STR_12)-__stringbase)|8000h)))&0ffh
  4287  02CD  304A               	movwf	(lcd_print@str)^080h
  4288  02CE  00A7               	movlw	80h
  4289  02CF  3080               	movwf	(lcd_print@str+1)^080h
  4290  02D0  00A8               	movlw	low(01h)
  4291  02D1  3001               	fcall	_lcd_print
  4292  02D2  120A  158A  2427  120A  118A  	line	165
  4293                           	
  4294                           l4762:	
  4295  02D7                     ;main.c: 165:                     state = 20;
  4296                           	movlw	low(014h)
  4297  02D7  3014               	bsf	status, 5	;RP0=1, select bank1
  4298  02D8  1683               	bcf	status, 6	;RP1=0, select bank1
  4299  02D9  1303               	movwf	(??_main+0)^080h+0
  4300  02DA  00CB               	movf	(??_main+0)^080h+0,w
  4301  02DB  084B               	bsf	status, 5	;RP0=1, select bank3
  4302  02DC  1683               	bsf	status, 6	;RP1=1, select bank3
  4303  02DD  1703               	movwf	(main@state)^0180h
  4304  02DE  00DD               	line	166
  4305                           ;main.c: 166:                     break;
  4306                           	goto	l4786
  4307  02DF  2B34               	line	168
  4308                           ;main.c: 168:             case 22:
  4309                           	
  4310                           l72:	
  4311  02E0                     	line	169
  4312                           	
  4313                           l4764:	
  4314  02E0                     ;main.c: 169:                     uts_trigger();
  4315                           	fcall	_uts_trigger
  4316  02E0  120A  158A  20D9  120A  118A  	line	170
  4317                           	
  4318                           l4766:	
  4319  02E5                     ;main.c: 170:                     PORTCbits.RC1 = 0;
  4320                           	bcf	status, 5	;RP0=0, select bank0
  4321  02E5  1283               	bcf	status, 6	;RP1=0, select bank0
  4322  02E6  1303               	bcf	(7),1	;volatile
  4323  02E7  1087               	line	171
  4324                           	
  4325                           l4768:	
  4326  02E8                     ;main.c: 171:                     lcd_print(1,4," LIVRE  ");
  4327                           	movlw	low(04h)
  4328  02E8  3004               	bsf	status, 5	;RP0=1, select bank1
  4329  02E9  1683               	bcf	status, 6	;RP1=0, select bank1
  4330  02EA  1303               	movwf	(??_main+0)^080h+0
  4331  02EB  00CB               	movf	(??_main+0)^080h+0,w
  4332  02EC  084B               	movwf	(lcd_print@col)^080h
  4333  02ED  00A6               	movlw	(low((((STR_13)-__stringbase)|8000h)))&0ffh
  4334  02EE  3038               	movwf	(lcd_print@str)^080h
  4335  02EF  00A7               	movlw	80h
  4336  02F0  3080               	movwf	(lcd_print@str+1)^080h
  4337  02F1  00A8               	movlw	low(01h)
  4338  02F2  3001               	fcall	_lcd_print
  4339  02F3  120A  158A  2427  120A  118A  	line	172
  4340                           	
  4341                           l4770:	
  4342  02F8                     ;main.c: 172:                     state = 20;
  4343                           	movlw	low(014h)
  4344  02F8  3014               	bsf	status, 5	;RP0=1, select bank1
  4345  02F9  1683               	bcf	status, 6	;RP1=0, select bank1
  4346  02FA  1303               	movwf	(??_main+0)^080h+0
  4347  02FB  00CB               	movf	(??_main+0)^080h+0,w
  4348  02FC  084B               	bsf	status, 5	;RP0=1, select bank3
  4349  02FD  1683               	bsf	status, 6	;RP1=1, select bank3
  4350  02FE  1703               	movwf	(main@state)^0180h
  4351  02FF  00DD               	line	173
  4352                           ;main.c: 173:                     break;
  4353                           	goto	l4786
  4354  0300  2B34               	line	175
  4355                           ;main.c: 175:             case 23:
  4356                           	
  4357                           l73:	
  4358  0301                     	line	176
  4359                           	
  4360                           l4772:	
  4361  0301                     ;main.c: 176:                     uts_trigger();
  4362                           	fcall	_uts_trigger
  4363  0301  120A  158A  20D9  120A  118A  	line	177
  4364                           	
  4365                           l4774:	
  4366  0306                     ;main.c: 177:                     PORTCbits.RC1 = 1;
  4367                           	bcf	status, 5	;RP0=0, select bank0
  4368  0306  1283               	bcf	status, 6	;RP1=0, select bank0
  4369  0307  1303               	bsf	(7),1	;volatile
  4370  0308  1487               	line	178
  4371                           ;main.c: 178:                     lcd_clr();
  4372                           	fcall	_lcd_clr
  4373  0309  160A  118A  27CC  120A  118A  	line	179
  4374                           	
  4375                           l4776:	
  4376  030E                     ;main.c: 179:                     lcd_print(1,5,"PARAR");
  4377                           	movlw	low(05h)
  4378  030E  3005               	bsf	status, 5	;RP0=1, select bank1
  4379  030F  1683               	bcf	status, 6	;RP1=0, select bank1
  4380  0310  1303               	movwf	(??_main+0)^080h+0
  4381  0311  00CB               	movf	(??_main+0)^080h+0,w
  4382  0312  084B               	movwf	(lcd_print@col)^080h
  4383  0313  00A6               	movlw	(low((((STR_14)-__stringbase)|8000h)))&0ffh
  4384  0314  306D               	movwf	(lcd_print@str)^080h
  4385  0315  00A7               	movlw	80h
  4386  0316  3080               	movwf	(lcd_print@str+1)^080h
  4387  0317  00A8               	movlw	low(01h)
  4388  0318  3001               	fcall	_lcd_print
  4389  0319  120A  158A  2427  120A  118A  	line	180
  4390                           	
  4391                           l4778:	
  4392  031E                     ;main.c: 180:                     delay_ms(5000);
  4393                           	movlw	088h
  4394  031E  3088               	bsf	status, 5	;RP0=1, select bank1
  4395  031F  1683               	bcf	status, 6	;RP1=0, select bank1
  4396  0320  1303               	movwf	(delay_ms@t)^080h
  4397  0321  00A0               	movlw	013h
  4398  0322  3013               	movwf	((delay_ms@t)^080h)+1
  4399  0323  00A1               	fcall	_delay_ms
  4400  0324  120A  158A  218C  120A  118A  	line	181
  4401                           	
  4402                           l4780:	
  4403  0329                     ;main.c: 181:                     lcd_clr();
  4404                           	fcall	_lcd_clr
  4405  0329  160A  118A  27CC  120A  118A  	line	182
  4406                           	
  4407                           l4782:	
  4408  032E                     ;main.c: 182:                     state = 1;
  4409                           	bsf	status, 5	;RP0=1, select bank3
  4410  032E  1683               	bsf	status, 6	;RP1=1, select bank3
  4411  032F  1703               	clrf	(main@state)^0180h
  4412  0330  01DD               	incf	(main@state)^0180h,f
  4413  0331  0ADD               	line	183
  4414                           ;main.c: 183:                     break;
  4415                           	goto	l4786
  4416  0332  2B34               	line	184
  4417                           	
  4418                           l4784:	
  4419  0333                     ;main.c: 184:         }
  4420                           	goto	l4786
  4421  0333  2B34               	
  4422                           l56:	
  4423  0334                     	
  4424                           l4786:	
  4425  0334                     	bsf	status, 5	;RP0=1, select bank3
  4426  0334  1683               	bsf	status, 6	;RP1=1, select bank3
  4427  0335  1703               	movf	(main@state)^0180h,w
  4428  0336  085D               	bsf	status, 5	;RP0=1, select bank1
  4429  0337  1683               	bcf	status, 6	;RP1=0, select bank1
  4430  0338  1303               	movwf	(??_main+0)^080h+0
  4431  0339  00CB               	clrf	(??_main+0)^080h+0+1
  4432  033A  01CC               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4433                           ; Switch size 1, requested type "space"
  4434                           ; Number of cases is 1, Range of values is 0 to 0
  4435                           ; switch strategies available:
  4436                           ; Name         Instructions Cycles
  4437                           ; simple_byte            4     3 (average)
  4438                           ; direct_byte           11     8 (fixed)
  4439                           ; jumptable            260     6 (fixed)
  4440                           ;	Chosen strategy is simple_byte
  4441                           
  4442                           	movf 1+(??_main+0)^080h+0,w
  4443  033B  084C               	opt asmopt_push
  4444                           	opt asmopt_off
  4445                           	xorlw	0^0	; case 0
  4446  033C  3A00               	skipnz
  4447  033D  1903               	goto	l4924
  4448  033E  2B40               	goto	l4786
  4449  033F  2B34               	opt asmopt_pop
  4450                           	
  4451                           l4924:	
  4452  0340                     ; Switch size 1, requested type "space"
  4453                           ; Number of cases is 9, Range of values is 0 to 23
  4454                           ; switch strategies available:
  4455                           ; Name         Instructions Cycles
  4456                           ; simple_byte           28    15 (average)
  4457                           ; direct_byte           80     8 (fixed)
  4458                           ; jumptable            260     6 (fixed)
  4459                           ;	Chosen strategy is simple_byte
  4460                           
  4461                           	movf 0+(??_main+0)^080h+0,w
  4462  0340  084B               	opt asmopt_push
  4463                           	opt asmopt_off
  4464                           	xorlw	0^0	; case 0
  4465  0341  3A00               	skipnz
  4466  0342  1903               	goto	l4684
  4467  0343  28E0               	xorlw	1^0	; case 1
  4468  0344  3A01               	skipnz
  4469  0345  1903               	goto	l4692
  4470  0346  2915               	xorlw	2^1	; case 2
  4471  0347  3A03               	skipnz
  4472  0348  1903               	goto	l4706
  4473  0349  2969               	xorlw	10^2	; case 10
  4474  034A  3A08               	skipnz
  4475  034B  1903               	goto	l4722
  4476  034C  29CB               	xorlw	11^10	; case 11
  4477  034D  3A01               	skipnz
  4478  034E  1903               	goto	l4732
  4479  034F  2A16               	xorlw	20^11	; case 20
  4480  0350  3A1F               	skipnz
  4481  0351  1903               	goto	l4740
  4482  0352  2A50               	xorlw	21^20	; case 21
  4483  0353  3A01               	skipnz
  4484  0354  1903               	goto	l4756
  4485  0355  2ABF               	xorlw	22^21	; case 22
  4486  0356  3A03               	skipnz
  4487  0357  1903               	goto	l4764
  4488  0358  2AE0               	xorlw	23^22	; case 23
  4489  0359  3A01               	skipnz
  4490  035A  1903               	goto	l4772
  4491  035B  2B01               	goto	l4786
  4492  035C  2B34               	opt asmopt_pop
  4493                           
  4494                           	
  4495                           l58:	
  4496  035D                     	goto	l4786
  4497  035D  2B34               	line	185
  4498                           ;main.c: 185:     }
  4499                           	
  4500                           l74:	
  4501  035E                     	goto	l4786
  4502  035E  2B34               	
  4503                           l75:	
  4504  035F                     	line	225
  4505                           	
  4506                           l76:	
  4507  035F                     	global	start
  4508                           	ljmp	start
  4509  035F  120A  118A  2810   	opt stack 0
  4510                           GLOBAL	__end_of_main
  4511                           	__end_of_main:
  4512  0362                     	signat	_main,89
  4513                           	global	_uts_trigger
  4514                           
  4515 ;; *************** function _uts_trigger *****************
  4516 ;; Defined at:
  4517 ;;		line 74 in file "sensors.c"
  4518 ;; Parameters:    Size  Location     Type
  4519 ;;		None
  4520 ;; Auto vars:     Size  Location     Type
  4521 ;;		None
  4522 ;; Return value:  Size  Location     Type
  4523 ;;                  1    wreg      void 
  4524 ;; Registers used:
  4525 ;;		wreg
  4526 ;; Tracked objects:
  4527 ;;		On entry : 0/0
  4528 ;;		On exit  : 0/0
  4529 ;;		Unchanged: 0/0
  4530 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4531 ;;      Params:         0       0       0       0       0
  4532 ;;      Locals:         0       0       0       0       0
  4533 ;;      Temps:          0       0       1       0       0
  4534 ;;      Totals:         0       0       1       0       0
  4535 ;;Total ram usage:        1 bytes
  4536 ;; Hardware stack levels used:    1
  4537 ;; Hardware stack levels required when called:    2
  4538 ;; This function calls:
  4539 ;;		Nothing
  4540 ;; This function is called by:
  4541 ;;		_main
  4542 ;; This function uses a non-reentrant model
  4543 ;;
  4544                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4545                           	file	"sensors.c"
  4546                           	line	74
  4547                           global __ptext1
  4548                           __ptext1:	;psect for function _uts_trigger
  4549  08D9                     psect	text1
  4550                           	file	"sensors.c"
  4551                           	line	74
  4552                           	global	__size_of_uts_trigger
  4553                           	__size_of_uts_trigger	equ	__end_of_uts_trigger-_uts_trigger
  4554  0015                     	
  4555                           _uts_trigger:	
  4556  08D9                     ;incstack = 0
  4557                           	opt	stack 5
  4558                           ; Regs used in _uts_trigger: [wreg]
  4559                           	line	76
  4560                           	
  4561                           l3868:	
  4562  08D9                     ;sensors.c: 76:     PORTAbits.RA2 = 1;
  4563                           	bcf	status, 5	;RP0=0, select bank0
  4564  08D9  1283               	bcf	status, 6	;RP1=0, select bank0
  4565  08DA  1303               	bsf	(5),2	;volatile
  4566  08DB  1505               	line	77
  4567                           	
  4568                           l3870:	
  4569  08DC                     ;sensors.c: 77:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  4570                           	opt asmopt_push
  4571                           opt asmopt_off
  4572                           	movlw	15
  4573  08DC  300F               	bsf	status, 5	;RP0=1, select bank1
  4574  08DD  1683               	bcf	status, 6	;RP1=0, select bank1
  4575  08DE  1303               movwf	((??_uts_trigger+0)^080h+0),f
  4576  08DF  00A0               	u4367:
  4577  08E0                     decfsz	(??_uts_trigger+0)^080h+0,f
  4578  08E0  0BA0               	goto	u4367
  4579  08E1  28E0               	nop2
  4580  08E2  28E3               opt asmopt_pop
  4581                           
  4582                           	line	78
  4583                           	
  4584                           l3872:	
  4585  08E3                     ;sensors.c: 78:     PORTAbits.RA2 = 0;
  4586                           	bcf	status, 5	;RP0=0, select bank0
  4587  08E3  1283               	bcf	status, 6	;RP1=0, select bank0
  4588  08E4  1303               	bcf	(5),2	;volatile
  4589  08E5  1105               	line	79
  4590                           ;sensors.c: 79:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  4591                           	opt asmopt_push
  4592                           opt asmopt_off
  4593                           	movlw	15
  4594  08E6  300F               	bsf	status, 5	;RP0=1, select bank1
  4595  08E7  1683               	bcf	status, 6	;RP1=0, select bank1
  4596  08E8  1303               movwf	((??_uts_trigger+0)^080h+0),f
  4597  08E9  00A0               	u4377:
  4598  08EA                     decfsz	(??_uts_trigger+0)^080h+0,f
  4599  08EA  0BA0               	goto	u4377
  4600  08EB  28EA               	nop2
  4601  08EC  28ED               opt asmopt_pop
  4602                           
  4603                           	line	80
  4604                           	
  4605                           l238:	
  4606  08ED                     	return
  4607  08ED  0008               	opt stack 0
  4608                           GLOBAL	__end_of_uts_trigger
  4609                           	__end_of_uts_trigger:
  4610  08EE                     	signat	_uts_trigger,89
  4611                           	global	_tmr_tick_init
  4612                           
  4613 ;; *************** function _tmr_tick_init *****************
  4614 ;; Defined at:
  4615 ;;		line 7 in file "tmr_tick.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4629 ;;      Params:         0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0
  4631 ;;      Temps:          0       0       0       0       0
  4632 ;;      Totals:         0       0       0       0       0
  4633 ;;Total ram usage:        0 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    2
  4636 ;; This function calls:
  4637 ;;		Nothing
  4638 ;; This function is called by:
  4639 ;;		_main
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4643                           	file	"tmr_tick.c"
  4644                           	line	7
  4645                           global __ptext2
  4646                           __ptext2:	;psect for function _tmr_tick_init
  4647  08C4                     psect	text2
  4648                           	file	"tmr_tick.c"
  4649                           	line	7
  4650                           	global	__size_of_tmr_tick_init
  4651                           	__size_of_tmr_tick_init	equ	__end_of_tmr_tick_init-_tmr_tick_init
  4652  0015                     	
  4653                           _tmr_tick_init:	
  4654  08C4                     ;incstack = 0
  4655                           	opt	stack 5
  4656                           ; Regs used in _tmr_tick_init: [wreg+status,2+status,0]
  4657                           	line	9
  4658                           	
  4659                           l3738:	
  4660  08C4                     ;tmr_tick.c: 9:     INTCONbits.GIE = 0;
  4661                           	bcf	(11),7	;volatile
  4662  08C4  138B               	line	10
  4663                           ;tmr_tick.c: 10:     T1CONbits.TMR1GE = 0;
  4664                           	bcf	status, 5	;RP0=0, select bank0
  4665  08C5  1283               	bcf	status, 6	;RP1=0, select bank0
  4666  08C6  1303               	bcf	(16),6	;volatile
  4667  08C7  1310               	line	11
  4668                           ;tmr_tick.c: 11:     T1CONbits.TMR1ON = 0;
  4669                           	bcf	(16),0	;volatile
  4670  08C8  1010               	line	12
  4671                           ;tmr_tick.c: 12:     T1CONbits.TMR1CS = 0;
  4672                           	bcf	(16),1	;volatile
  4673  08C9  1090               	line	13
  4674                           	
  4675                           l3740:	
  4676  08CA                     ;tmr_tick.c: 13:     T1CONbits.T1CKPS = 0;
  4677                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
  4678  08CA  30CF               	andwf	(16),f	;volatile
  4679  08CB  0590               	line	14
  4680                           	
  4681                           l3742:	
  4682  08CC                     ;tmr_tick.c: 14:     TMR1H = ((0xFFFF-5000+1) >> 8) & 0x00FF;
  4683                           	movlw	low(0ECh)
  4684  08CC  30EC               	movwf	(15)	;volatile
  4685  08CD  008F               	line	15
  4686                           	
  4687                           l3744:	
  4688  08CE                     ;tmr_tick.c: 15:     TMR1L = ((0xFFFF-5000+1) >> 0) & 0x00FF;
  4689                           	movlw	low(078h)
  4690  08CE  3078               	movwf	(14)	;volatile
  4691  08CF  008E               	line	16
  4692                           	
  4693                           l3746:	
  4694  08D0                     ;tmr_tick.c: 16:     INTCONbits.PEIE = 1;
  4695                           	bsf	(11),6	;volatile
  4696  08D0  170B               	line	17
  4697                           	
  4698                           l3748:	
  4699  08D1                     ;tmr_tick.c: 17:     PIE1bits.TMR1IE = 1;
  4700                           	bsf	status, 5	;RP0=1, select bank1
  4701  08D1  1683               	bcf	status, 6	;RP1=0, select bank1
  4702  08D2  1303               	bsf	(140)^080h,0	;volatile
  4703  08D3  140C               	line	18
  4704                           	
  4705                           l3750:	
  4706  08D4                     ;tmr_tick.c: 18:     INTCONbits.GIE = 1;
  4707                           	bsf	(11),7	;volatile
  4708  08D4  178B               	line	19
  4709                           	
  4710                           l3752:	
  4711  08D5                     ;tmr_tick.c: 19:     T1CONbits.TMR1ON = 1;
  4712                           	bcf	status, 5	;RP0=0, select bank0
  4713  08D5  1283               	bcf	status, 6	;RP1=0, select bank0
  4714  08D6  1303               	bsf	(16),0	;volatile
  4715  08D7  1410               	line	20
  4716                           	
  4717                           l183:	
  4718  08D8                     	return
  4719  08D8  0008               	opt stack 0
  4720                           GLOBAL	__end_of_tmr_tick_init
  4721                           	__end_of_tmr_tick_init:
  4722  08D9                     	signat	_tmr_tick_init,89
  4723                           	global	_tag_false
  4724                           
  4725 ;; *************** function _tag_false *****************
  4726 ;; Defined at:
  4727 ;;		line 703 in file "rfid.c"
  4728 ;; Parameters:    Size  Location     Type
  4729 ;;  p1              1    wreg     PTR unsigned char 
  4730 ;;		 -> main@UID(7), 
  4731 ;;  p2              1    0[BANK1 ] PTR unsigned char 
  4732 ;;		 -> main@senha(6), 
  4733 ;; Auto vars:     Size  Location     Type
  4734 ;;  p1              1    4[BANK1 ] PTR unsigned char 
  4735 ;;		 -> main@UID(7), 
  4736 ;;  i               1    6[BANK1 ] unsigned char 
  4737 ;;  ret             1    5[BANK1 ] unsigned char 
  4738 ;; Return value:  Size  Location     Type
  4739 ;;                  1    wreg      unsigned char 
  4740 ;; Registers used:
  4741 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4742 ;; Tracked objects:
  4743 ;;		On entry : 0/0
  4744 ;;		On exit  : 0/0
  4745 ;;		Unchanged: 0/0
  4746 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4747 ;;      Params:         0       0       1       0       0
  4748 ;;      Locals:         0       0       3       0       0
  4749 ;;      Temps:          0       0       3       0       0
  4750 ;;      Totals:         0       0       7       0       0
  4751 ;;Total ram usage:        7 bytes
  4752 ;; Hardware stack levels used:    1
  4753 ;; Hardware stack levels required when called:    2
  4754 ;; This function calls:
  4755 ;;		Nothing
  4756 ;; This function is called by:
  4757 ;;		_main
  4758 ;; This function uses a non-reentrant model
  4759 ;;
  4760                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4761                           	file	"rfid.c"
  4762                           	line	703
  4763                           global __ptext3
  4764                           __ptext3:	;psect for function _tag_false
  4765  0A29                     psect	text3
  4766                           	file	"rfid.c"
  4767                           	line	703
  4768                           	global	__size_of_tag_false
  4769                           	__size_of_tag_false	equ	__end_of_tag_false-_tag_false
  4770  0031                     	
  4771                           _tag_false:	
  4772  0A29                     ;incstack = 0
  4773                           	opt	stack 5
  4774                           ; Regs used in _tag_false: [wreg-fsr0h+status,2+status,0]
  4775                           ;tag_false@p1 stored from wreg
  4776                           	bsf	status, 5	;RP0=1, select bank1
  4777  0A29  1683               	bcf	status, 6	;RP1=0, select bank1
  4778  0A2A  1303               	movwf	(tag_false@p1)^080h
  4779  0A2B  00A4               	line	705
  4780                           	
  4781                           l3850:	
  4782  0A2C                     ;rfid.c: 703: char tag_false(char* p1, char * p2);rfid.c: 704: {;rfid.c: 705:     char r
                                 et = 0;
  4783                           	clrf	(tag_false@ret)^080h
  4784  0A2C  01A5               	line	707
  4785                           ;rfid.c: 707:     for(char i = 0; i<6 ; i++)
  4786                           	clrf	(tag_false@i)^080h
  4787  0A2D  01A6               	
  4788                           l3852:	
  4789  0A2E                     	movlw	low(06h)
  4790  0A2E  3006               	subwf	(tag_false@i)^080h,w
  4791  0A2F  0226               	skipc
  4792  0A30  1C03               	goto	u3091
  4793  0A31  2A33               	goto	u3090
  4794  0A32  2A34               u3091:
  4795  0A33                     	goto	l3856
  4796  0A33  2A36               u3090:
  4797  0A34                     	goto	l3864
  4798  0A34  2A57               	
  4799                           l3854:	
  4800  0A35                     	goto	l3864
  4801  0A35  2A57               	
  4802                           l385:	
  4803  0A36                     	line	709
  4804                           	
  4805                           l3856:	
  4806  0A36                     ;rfid.c: 708:     {;rfid.c: 709:         if(p1[i] != p2[i])
  4807                           	movf	(tag_false@i)^080h,w
  4808  0A36  0826               	addwf	(tag_false@p2)^080h,w
  4809  0A37  0720               	movwf	(??_tag_false+0)^080h+0
  4810  0A38  00A1               	movf	0+(??_tag_false+0)^080h+0,w
  4811  0A39  0821               	movwf	fsr
  4812  0A3A  0084               	bsf	status, 7	;select IRP bank2
  4813  0A3B  1783               	movf	indf,w
  4814  0A3C  0800               	movwf	(??_tag_false+1)^080h+0
  4815  0A3D  00A2               	movf	(tag_false@i)^080h,w
  4816  0A3E  0826               	addwf	(tag_false@p1)^080h,w
  4817  0A3F  0724               	movwf	(??_tag_false+2)^080h+0
  4818  0A40  00A3               	movf	0+(??_tag_false+2)^080h+0,w
  4819  0A41  0823               	movwf	fsr0
  4820  0A42  0084               	movf	indf,w
  4821  0A43  0800               	xorwf	(??_tag_false+1)^080h+0,w
  4822  0A44  0622               	skipnz
  4823  0A45  1903               	goto	u3101
  4824  0A46  2A48               	goto	u3100
  4825  0A47  2A49               u3101:
  4826  0A48                     	goto	l3860
  4827  0A48  2A4C               u3100:
  4828  0A49                     	line	711
  4829                           	
  4830                           l3858:	
  4831  0A49                     ;rfid.c: 710:         {;rfid.c: 711:          ret = 1;
  4832                           	clrf	(tag_false@ret)^080h
  4833  0A49  01A5               	incf	(tag_false@ret)^080h,f
  4834  0A4A  0AA5               	goto	l3860
  4835  0A4B  2A4C               	line	712
  4836                           ;rfid.c: 712:         }
  4837                           	
  4838                           l387:	
  4839  0A4C                     	line	713
  4840                           	
  4841                           l3860:	
  4842  0A4C                     ;rfid.c: 713:     }
  4843                           	movlw	low(01h)
  4844  0A4C  3001               	movwf	(??_tag_false+0)^080h+0
  4845  0A4D  00A1               	movf	(??_tag_false+0)^080h+0,w
  4846  0A4E  0821               	addwf	(tag_false@i)^080h,f
  4847  0A4F  07A6               	
  4848                           l3862:	
  4849  0A50                     	movlw	low(06h)
  4850  0A50  3006               	subwf	(tag_false@i)^080h,w
  4851  0A51  0226               	skipc
  4852  0A52  1C03               	goto	u3111
  4853  0A53  2A55               	goto	u3110
  4854  0A54  2A56               u3111:
  4855  0A55                     	goto	l3856
  4856  0A55  2A36               u3110:
  4857  0A56                     	goto	l3864
  4858  0A56  2A57               	
  4859                           l386:	
  4860  0A57                     	line	715
  4861                           	
  4862                           l3864:	
  4863  0A57                     ;rfid.c: 715:     return (ret);
  4864                           	movf	(tag_false@ret)^080h,w
  4865  0A57  0825               	goto	l388
  4866  0A58  2A59               	
  4867                           l3866:	
  4868  0A59                     	line	716
  4869                           	
  4870                           l388:	
  4871  0A59                     	return
  4872  0A59  0008               	opt stack 0
  4873                           GLOBAL	__end_of_tag_false
  4874                           	__end_of_tag_false:
  4875  0A5A                     	signat	_tag_false,8313
  4876                           	global	_spi_hardware_disable
  4877                           
  4878 ;; *************** function _spi_hardware_disable *****************
  4879 ;; Defined at:
  4880 ;;		line 24 in file "spi.c"
  4881 ;; Parameters:    Size  Location     Type
  4882 ;;		None
  4883 ;; Auto vars:     Size  Location     Type
  4884 ;;		None
  4885 ;; Return value:  Size  Location     Type
  4886 ;;                  1    wreg      void 
  4887 ;; Registers used:
  4888 ;;		status,2
  4889 ;; Tracked objects:
  4890 ;;		On entry : 0/0
  4891 ;;		On exit  : 0/0
  4892 ;;		Unchanged: 0/0
  4893 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4894 ;;      Params:         0       0       0       0       0
  4895 ;;      Locals:         0       0       0       0       0
  4896 ;;      Temps:          0       0       0       0       0
  4897 ;;      Totals:         0       0       0       0       0
  4898 ;;Total ram usage:        0 bytes
  4899 ;; Hardware stack levels used:    1
  4900 ;; Hardware stack levels required when called:    2
  4901 ;; This function calls:
  4902 ;;		Nothing
  4903 ;; This function is called by:
  4904 ;;		_main
  4905 ;; This function uses a non-reentrant model
  4906 ;;
  4907                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4908                           	file	"spi.c"
  4909                           	line	24
  4910                           global __ptext4
  4911                           __ptext4:	;psect for function _spi_hardware_disable
  4912  17F2                     psect	text4
  4913                           	file	"spi.c"
  4914                           	line	24
  4915                           	global	__size_of_spi_hardware_disable
  4916                           	__size_of_spi_hardware_disable	equ	__end_of_spi_hardware_disable-_spi_hardware_disable

  4917  000E                     	
  4918                           _spi_hardware_disable:	
  4919  17F2                     ;incstack = 0
  4920                           	opt	stack 5
  4921                           ; Regs used in _spi_hardware_disable: [status,2]
  4922                           	line	26
  4923                           	
  4924                           l3654:	
  4925  17F2                     ;spi.c: 26:     C2ON = 0;
  4926                           	bcf	status, 5	;RP0=0, select bank2
  4927  17F2  1283               	bsf	status, 6	;RP1=1, select bank2
  4928  17F3  1703               	bcf	(2119/8)^0100h,(2119)&7	;volatile
  4929  17F4  1388               	line	27
  4930                           	
  4931                           l3656:	
  4932  17F5                     ;spi.c: 27:     ANSELH = 0;
  4933                           	bsf	status, 5	;RP0=1, select bank3
  4934  17F5  1683               	bsf	status, 6	;RP1=1, select bank3
  4935  17F6  1703               	clrf	(393)^0180h	;volatile
  4936  17F7  0189               	line	28
  4937                           ;spi.c: 28:     ANSEL = 0;
  4938                           	clrf	(392)^0180h	;volatile
  4939  17F8  0188               	line	29
  4940                           	
  4941                           l3658:	
  4942  17F9                     ;spi.c: 29:     SSPEN = 0;
  4943                           	bcf	status, 5	;RP0=0, select bank0
  4944  17F9  1283               	bcf	status, 6	;RP1=0, select bank0
  4945  17FA  1303               	bcf	(165/8),(165)&7	;volatile
  4946  17FB  1294               	line	30
  4947                           	
  4948                           l3660:	
  4949  17FC                     ;spi.c: 30:     SSPIE = 0;
  4950                           	bsf	status, 5	;RP0=1, select bank1
  4951  17FC  1683               	bcf	status, 6	;RP1=0, select bank1
  4952  17FD  1303               	bcf	(1123/8)^080h,(1123)&7	;volatile
  4953  17FE  118C               	line	31
  4954                           	
  4955                           l431:	
  4956  17FF                     	return
  4957  17FF  0008               	opt stack 0
  4958                           GLOBAL	__end_of_spi_hardware_disable
  4959                           	__end_of_spi_hardware_disable:
  4960  1800                     	signat	_spi_hardware_disable,89
  4961                           	global	_spiSoftIniciar
  4962                           
  4963 ;; *************** function _spiSoftIniciar *****************
  4964 ;; Defined at:
  4965 ;;		line 33 in file "spi.c"
  4966 ;; Parameters:    Size  Location     Type
  4967 ;;		None
  4968 ;; Auto vars:     Size  Location     Type
  4969 ;;		None
  4970 ;; Return value:  Size  Location     Type
  4971 ;;                  1    wreg      void 
  4972 ;; Registers used:
  4973 ;;		wreg
  4974 ;; Tracked objects:
  4975 ;;		On entry : 0/0
  4976 ;;		On exit  : 0/0
  4977 ;;		Unchanged: 0/0
  4978 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4979 ;;      Params:         0       0       0       0       0
  4980 ;;      Locals:         0       0       0       0       0
  4981 ;;      Temps:          0       0       2       0       0
  4982 ;;      Totals:         0       0       2       0       0
  4983 ;;Total ram usage:        2 bytes
  4984 ;; Hardware stack levels used:    1
  4985 ;; Hardware stack levels required when called:    2
  4986 ;; This function calls:
  4987 ;;		Nothing
  4988 ;; This function is called by:
  4989 ;;		_main
  4990 ;; This function uses a non-reentrant model
  4991 ;;
  4992                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4993                           	line	33
  4994                           global __ptext5
  4995                           __ptext5:	;psect for function _spiSoftIniciar
  4996  096E                     psect	text5
  4997                           	file	"spi.c"
  4998                           	line	33
  4999                           	global	__size_of_spiSoftIniciar
  5000                           	__size_of_spiSoftIniciar	equ	__end_of_spiSoftIniciar-_spiSoftIniciar
  5001  001E                     	
  5002                           _spiSoftIniciar:	
  5003  096E                     ;incstack = 0
  5004                           	opt	stack 5
  5005                           ; Regs used in _spiSoftIniciar: [wreg]
  5006                           	line	36
  5007                           	
  5008                           l3662:	
  5009  096E                     ;spi.c: 36:  TRISCbits.TRISC4 = 1;
  5010                           	bsf	status, 5	;RP0=1, select bank1
  5011  096E  1683               	bcf	status, 6	;RP1=0, select bank1
  5012  096F  1303               	bsf	(135)^080h,4	;volatile
  5013  0970  1607               	line	37
  5014                           ;spi.c: 37:  TRISCbits.TRISC5 = 0;
  5015                           	bcf	(135)^080h,5	;volatile
  5016  0971  1287               	line	39
  5017                           ;spi.c: 39:  TRISCbits.TRISC3 = 0;
  5018                           	bcf	(135)^080h,3	;volatile
  5019  0972  1187               	line	40
  5020                           ;spi.c: 40:  TRISAbits.TRISA5 = 0;
  5021                           	bcf	(133)^080h,5	;volatile
  5022  0973  1285               	line	41
  5023                           ;spi.c: 41:  PORTCbits.RC5 = 0;
  5024                           	bcf	status, 5	;RP0=0, select bank0
  5025  0974  1283               	bcf	status, 6	;RP1=0, select bank0
  5026  0975  1303               	bcf	(7),5	;volatile
  5027  0976  1287               	line	42
  5028                           ;spi.c: 42:  PORTCbits.RC3 = 0;
  5029                           	bcf	(7),3	;volatile
  5030  0977  1187               	line	43
  5031                           ;spi.c: 43:  PORTAbits.RA5 = 0;
  5032                           	bcf	(5),5	;volatile
  5033  0978  1285               	line	45
  5034                           	
  5035                           l3664:	
  5036  0979                     ;spi.c: 45:  _delay((unsigned long)((100)*(20000000/4000000.0)));
  5037                           	opt asmopt_push
  5038                           opt asmopt_off
  5039                           	movlw	165
  5040  0979  30A5               	bsf	status, 5	;RP0=1, select bank1
  5041  097A  1683               	bcf	status, 6	;RP1=0, select bank1
  5042  097B  1303               movwf	((??_spiSoftIniciar+0)^080h+0),f
  5043  097C  00A0               	u4387:
  5044  097D                     decfsz	(??_spiSoftIniciar+0)^080h+0,f
  5045  097D  0BA0               	goto	u4387
  5046  097E  297D               	nop2
  5047  097F  2980               opt asmopt_pop
  5048                           
  5049                           	line	47
  5050                           ;spi.c: 47:  _delay((unsigned long)((1)*(20000000/4000.0)));
  5051                           	opt asmopt_push
  5052                           opt asmopt_off
  5053                           movlw	7
  5054  0980  3007               	bsf	status, 5	;RP0=1, select bank1
  5055  0981  1683               	bcf	status, 6	;RP1=0, select bank1
  5056  0982  1303               movwf	((??_spiSoftIniciar+0)^080h+0+1),f
  5057  0983  00A1               	movlw	124
  5058  0984  307C               movwf	((??_spiSoftIniciar+0)^080h+0),f
  5059  0985  00A0               	u4397:
  5060  0986                     decfsz	((??_spiSoftIniciar+0)^080h+0),f
  5061  0986  0BA0               	goto	u4397
  5062  0987  2986               	decfsz	((??_spiSoftIniciar+0)^080h+0+1),f
  5063  0988  0BA1               	goto	u4397
  5064  0989  2986               	nop
  5065  098A  0000               opt asmopt_pop
  5066                           
  5067                           	line	48
  5068                           	
  5069                           l434:	
  5070  098B                     	return
  5071  098B  0008               	opt stack 0
  5072                           GLOBAL	__end_of_spiSoftIniciar
  5073                           	__end_of_spiSoftIniciar:
  5074  098C                     	signat	_spiSoftIniciar,89
  5075                           	global	_sensors_init
  5076                           
  5077 ;; *************** function _sensors_init *****************
  5078 ;; Defined at:
  5079 ;;		line 22 in file "sensors.c"
  5080 ;; Parameters:    Size  Location     Type
  5081 ;;		None
  5082 ;; Auto vars:     Size  Location     Type
  5083 ;;		None
  5084 ;; Return value:  Size  Location     Type
  5085 ;;                  1    wreg      void 
  5086 ;; Registers used:
  5087 ;;		wreg, status,2, status,0
  5088 ;; Tracked objects:
  5089 ;;		On entry : 0/0
  5090 ;;		On exit  : 0/0
  5091 ;;		Unchanged: 0/0
  5092 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5093 ;;      Params:         0       0       0       0       0
  5094 ;;      Locals:         0       0       0       0       0
  5095 ;;      Temps:          0       0       0       0       0
  5096 ;;      Totals:         0       0       0       0       0
  5097 ;;Total ram usage:        0 bytes
  5098 ;; Hardware stack levels used:    1
  5099 ;; Hardware stack levels required when called:    2
  5100 ;; This function calls:
  5101 ;;		Nothing
  5102 ;; This function is called by:
  5103 ;;		_main
  5104 ;; This function uses a non-reentrant model
  5105 ;;
  5106                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  5107                           	file	"sensors.c"
  5108                           	line	22
  5109                           global __ptext6
  5110                           __ptext6:	;psect for function _sensors_init
  5111  0935                     psect	text6
  5112                           	file	"sensors.c"
  5113                           	line	22
  5114                           	global	__size_of_sensors_init
  5115                           	__size_of_sensors_init	equ	__end_of_sensors_init-_sensors_init
  5116  001C                     	
  5117                           _sensors_init:	
  5118  0935                     ;incstack = 0
  5119                           	opt	stack 5
  5120                           ; Regs used in _sensors_init: [wreg+status,2+status,0]
  5121                           	line	24
  5122                           	
  5123                           l3708:	
  5124  0935                     ;sensors.c: 24:     PORTCbits.RC0 = 0;
  5125                           	bcf	status, 5	;RP0=0, select bank0
  5126  0935  1283               	bcf	status, 6	;RP1=0, select bank0
  5127  0936  1303               	bcf	(7),0	;volatile
  5128  0937  1007               	line	25
  5129                           ;sensors.c: 25:     PORTAbits.RA3 = 0;
  5130                           	bcf	(5),3	;volatile
  5131  0938  1185               	line	28
  5132                           	
  5133                           l3710:	
  5134  0939                     ;sensors.c: 28:     t_sensor = 0;
  5135                           	clrf	(_t_sensor)
  5136  0939  01CD               	clrf	(_t_sensor+1)
  5137  093A  01CE               	line	29
  5138                           ;sensors.c: 29:     ret = 0;
  5139                           	clrf	(_ret)
  5140  093B  01D0               	line	31
  5141                           	
  5142                           l3712:	
  5143  093C                     ;sensors.c: 31:     INTCONbits.GIE = 0;
  5144                           	bcf	(11),7	;volatile
  5145  093C  138B               	line	33
  5146                           	
  5147                           l3714:	
  5148  093D                     ;sensors.c: 33:     TRISAbits.TRISA3 = 1;
  5149                           	bsf	status, 5	;RP0=1, select bank1
  5150  093D  1683               	bcf	status, 6	;RP1=0, select bank1
  5151  093E  1303               	bsf	(133)^080h,3	;volatile
  5152  093F  1585               	line	34
  5153                           	
  5154                           l3716:	
  5155  0940                     ;sensors.c: 34:     TRISCbits.TRISC0 = 0;
  5156                           	bcf	(135)^080h,0	;volatile
  5157  0940  1007               	line	35
  5158                           	
  5159                           l3718:	
  5160  0941                     ;sensors.c: 35:     TRISAbits.TRISA2 = 0;
  5161                           	bcf	(133)^080h,2	;volatile
  5162  0941  1105               	line	37
  5163                           	
  5164                           l3720:	
  5165  0942                     ;sensors.c: 37:     T1CONbits.TMR1CS = 0;
  5166                           	bcf	status, 5	;RP0=0, select bank0
  5167  0942  1283               	bcf	status, 6	;RP1=0, select bank0
  5168  0943  1303               	bcf	(16),1	;volatile
  5169  0944  1090               	line	38
  5170                           	
  5171                           l3722:	
  5172  0945                     ;sensors.c: 38:     T1CONbits.TMR1GE = 0;
  5173                           	bcf	(16),6	;volatile
  5174  0945  1310               	line	39
  5175                           	
  5176                           l3724:	
  5177  0946                     ;sensors.c: 39:     T1CONbits.T1CKPS = 0;
  5178                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
  5179  0946  30CF               	andwf	(16),f	;volatile
  5180  0947  0590               	line	40
  5181                           	
  5182                           l3726:	
  5183  0948                     ;sensors.c: 40:     T1CONbits.TMR1ON = 0;
  5184                           	bcf	(16),0	;volatile
  5185  0948  1010               	line	42
  5186                           	
  5187                           l3728:	
  5188  0949                     ;sensors.c: 42:     TRISBbits.TRISB7 = 1;
  5189                           	bsf	status, 5	;RP0=1, select bank1
  5190  0949  1683               	bcf	status, 6	;RP1=0, select bank1
  5191  094A  1303               	bsf	(134)^080h,7	;volatile
  5192  094B  1786               	line	43
  5193                           	
  5194                           l3730:	
  5195  094C                     ;sensors.c: 43:     INTCONbits.RBIE = 1;
  5196                           	bsf	(11),3	;volatile
  5197  094C  158B               	line	44
  5198                           	
  5199                           l3732:	
  5200  094D                     ;sensors.c: 44:     IOCBbits.IOCB7 = 1;
  5201                           	bsf	(150)^080h,7	;volatile
  5202  094D  1796               	line	46
  5203                           	
  5204                           l3734:	
  5205  094E                     ;sensors.c: 46:     INTCONbits.PEIE = 1;
  5206                           	bsf	(11),6	;volatile
  5207  094E  170B               	line	47
  5208                           	
  5209                           l3736:	
  5210  094F                     ;sensors.c: 47:     INTCONbits.GIE = 1;
  5211                           	bsf	(11),7	;volatile
  5212  094F  178B               	line	48
  5213                           	
  5214                           l229:	
  5215  0950                     	return
  5216  0950  0008               	opt stack 0
  5217                           GLOBAL	__end_of_sensors_init
  5218                           	__end_of_sensors_init:
  5219  0951                     	signat	_sensors_init,89
  5220                           	global	_prs_detect
  5221                           
  5222 ;; *************** function _prs_detect *****************
  5223 ;; Defined at:
  5224 ;;		line 50 in file "sensors.c"
  5225 ;; Parameters:    Size  Location     Type
  5226 ;;		None
  5227 ;; Auto vars:     Size  Location     Type
  5228 ;;		None
  5229 ;; Return value:  Size  Location     Type
  5230 ;;                  1    wreg      unsigned char 
  5231 ;; Registers used:
  5232 ;;		wreg, status,2, status,0, pclath, cstack
  5233 ;; Tracked objects:
  5234 ;;		On entry : 0/0
  5235 ;;		On exit  : 0/0
  5236 ;;		Unchanged: 0/0
  5237 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5238 ;;      Params:         0       0       0       0       0
  5239 ;;      Locals:         0       0       0       0       0
  5240 ;;      Temps:          0       0       0       0       0
  5241 ;;      Totals:         0       0       0       0       0
  5242 ;;Total ram usage:        0 bytes
  5243 ;; Hardware stack levels used:    1
  5244 ;; Hardware stack levels required when called:    3
  5245 ;; This function calls:
  5246 ;;		_delay_ms
  5247 ;; This function is called by:
  5248 ;;		_main
  5249 ;; This function uses a non-reentrant model
  5250 ;;
  5251                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5252                           	line	50
  5253                           global __ptext7
  5254                           __ptext7:	;psect for function _prs_detect
  5255  09FA                     psect	text7
  5256                           	file	"sensors.c"
  5257                           	line	50
  5258                           	global	__size_of_prs_detect
  5259                           	__size_of_prs_detect	equ	__end_of_prs_detect-_prs_detect
  5260  002F                     	
  5261                           _prs_detect:	
  5262  09FA                     ;incstack = 0
  5263                           	opt	stack 4
  5264                           ; Regs used in _prs_detect: [wreg+status,2+status,0+pclath+cstack]
  5265                           	line	52
  5266                           	
  5267                           l3874:	
  5268  09FA                     ;sensors.c: 52:     if(PORTAbits.RA3 == 1)
  5269                           	bcf	status, 5	;RP0=0, select bank0
  5270  09FA  1283               	bcf	status, 6	;RP1=0, select bank0
  5271  09FB  1303               	btfss	(5),3	;volatile
  5272  09FC  1D85               	goto	u3121
  5273  09FD  29FF               	goto	u3120
  5274  09FE  2A00               u3121:
  5275  09FF                     	goto	l3880
  5276  09FF  2A06               u3120:
  5277  0A00                     	line	54
  5278                           	
  5279                           l3876:	
  5280  0A00                     ;sensors.c: 53:     {;sensors.c: 54:         t_sensor = 3000;
  5281                           	movlw	0B8h
  5282  0A00  30B8               	movwf	(_t_sensor)
  5283  0A01  00CD               	movlw	0Bh
  5284  0A02  300B               	movwf	((_t_sensor))+1
  5285  0A03  00CE               	line	55
  5286                           	
  5287                           l3878:	
  5288  0A04                     ;sensors.c: 55:         PORTCbits.RC0 = 1;
  5289                           	bsf	(7),0	;volatile
  5290  0A04  1407               	line	56
  5291                           ;sensors.c: 56:     }
  5292                           	goto	l3888
  5293  0A05  2A22               	line	58
  5294                           ;sensors.c: 58:     else
  5295                           	
  5296                           l232:	
  5297  0A06                     	line	60
  5298                           	
  5299                           l3880:	
  5300  0A06                     ;sensors.c: 59:     {;sensors.c: 60:         --t_sensor;
  5301                           	movlw	0FFh
  5302  0A06  30FF               	addwf	(_t_sensor),f
  5303  0A07  07CD               	skipnc
  5304  0A08  1803               	incf	(_t_sensor+1),f
  5305  0A09  0ACE               	movlw	0FFh
  5306  0A0A  30FF               	addwf	(_t_sensor+1),f
  5307  0A0B  07CE               	line	61
  5308                           	
  5309                           l3882:	
  5310  0A0C                     ;sensors.c: 61:         delay_ms(1);
  5311                           	movlw	01h
  5312  0A0C  3001               	bsf	status, 5	;RP0=1, select bank1
  5313  0A0D  1683               	bcf	status, 6	;RP1=0, select bank1
  5314  0A0E  1303               	movwf	(delay_ms@t)^080h
  5315  0A0F  00A0               	movlw	0
  5316  0A10  3000               	movwf	((delay_ms@t)^080h)+1
  5317  0A11  00A1               	fcall	_delay_ms
  5318  0A12  120A  158A  218C  120A  158A  	line	63
  5319                           	
  5320                           l3884:	
  5321  0A17                     ;sensors.c: 63:         if(t_sensor == 0)
  5322                           	bcf	status, 5	;RP0=0, select bank0
  5323  0A17  1283               	bcf	status, 6	;RP1=0, select bank0
  5324  0A18  1303               	movf	((_t_sensor)),w
  5325  0A19  084D               iorwf	((_t_sensor+1)),w
  5326  0A1A  044E               	btfss	status,2
  5327  0A1B  1D03               	goto	u3131
  5328  0A1C  2A1E               	goto	u3130
  5329  0A1D  2A1F               u3131:
  5330  0A1E                     	goto	l3888
  5331  0A1E  2A22               u3130:
  5332  0A1F                     	line	65
  5333                           	
  5334                           l3886:	
  5335  0A1F                     ;sensors.c: 64:         {;sensors.c: 65:             PORTCbits.RC0 = 0;
  5336                           	bcf	(7),0	;volatile
  5337  0A1F  1007               	goto	l3888
  5338  0A20  2A22               	line	66
  5339                           ;sensors.c: 66:         }
  5340                           	
  5341                           l234:	
  5342  0A21                     	goto	l3888
  5343  0A21  2A22               	line	67
  5344                           ;sensors.c: 67:     }
  5345                           	
  5346                           l233:	
  5347  0A22                     	line	69
  5348                           	
  5349                           l3888:	
  5350  0A22                     ;sensors.c: 69:     ret = PORTCbits.RC0;
  5351                           	movlw	0
  5352  0A22  3000               	btfsc	(7),0	;volatile
  5353  0A23  1807               	movlw	1
  5354  0A24  3001               	movwf	(_ret)
  5355  0A25  00D0               	line	71
  5356                           	
  5357                           l3890:	
  5358  0A26                     ;sensors.c: 71:     return( ret );
  5359                           	movf	(_ret),w
  5360  0A26  0850               	goto	l235
  5361  0A27  2A28               	
  5362                           l3892:	
  5363  0A28                     	line	72
  5364                           	
  5365                           l235:	
  5366  0A28                     	return
  5367  0A28  0008               	opt stack 0
  5368                           GLOBAL	__end_of_prs_detect
  5369                           	__end_of_prs_detect:
  5370  0A29                     	signat	_prs_detect,89
  5371                           	global	_delay_ms
  5372                           
  5373 ;; *************** function _delay_ms *****************
  5374 ;; Defined at:
  5375 ;;		line 12 in file "delay.c"
  5376 ;; Parameters:    Size  Location     Type
  5377 ;;  t               2    0[BANK1 ] unsigned int 
  5378 ;; Auto vars:     Size  Location     Type
  5379 ;;		None
  5380 ;; Return value:  Size  Location     Type
  5381 ;;                  1    wreg      void 
  5382 ;; Registers used:
  5383 ;;		wreg, status,2, status,0
  5384 ;; Tracked objects:
  5385 ;;		On entry : 0/0
  5386 ;;		On exit  : 0/0
  5387 ;;		Unchanged: 0/0
  5388 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5389 ;;      Params:         0       0       2       0       0
  5390 ;;      Locals:         0       0       0       0       0
  5391 ;;      Temps:          0       0       2       0       0
  5392 ;;      Totals:         0       0       4       0       0
  5393 ;;Total ram usage:        4 bytes
  5394 ;; Hardware stack levels used:    1
  5395 ;; Hardware stack levels required when called:    2
  5396 ;; This function calls:
  5397 ;;		Nothing
  5398 ;; This function is called by:
  5399 ;;		_main
  5400 ;;		_prs_detect
  5401 ;; This function uses a non-reentrant model
  5402 ;;
  5403                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5404                           	file	"delay.c"
  5405                           	line	12
  5406                           global __ptext8
  5407                           __ptext8:	;psect for function _delay_ms
  5408  098C                     psect	text8
  5409                           	file	"delay.c"
  5410                           	line	12
  5411                           	global	__size_of_delay_ms
  5412                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  5413  001F                     	
  5414                           _delay_ms:	
  5415  098C                     ;incstack = 0
  5416                           	opt	stack 4
  5417                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  5418                           	line	14
  5419                           	
  5420                           l3418:	
  5421  098C                     ;delay.c: 12: void delay_ms( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
                                 
  5422                           	goto	l3422
  5423  098C  29A1               	
  5424                           l82:	
  5425  098D                     	line	16
  5426                           	
  5427                           l3420:	
  5428  098D                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(20000000/4000.0)));
                                 
  5429                           	opt asmopt_push
  5430                           opt asmopt_off
  5431                           movlw	7
  5432  098D  3007               	bsf	status, 5	;RP0=1, select bank1
  5433  098E  1683               	bcf	status, 6	;RP1=0, select bank1
  5434  098F  1303               movwf	((??_delay_ms+0)^080h+0+1),f
  5435  0990  00A3               	movlw	124
  5436  0991  307C               movwf	((??_delay_ms+0)^080h+0),f
  5437  0992  00A2               	u4407:
  5438  0993                     decfsz	((??_delay_ms+0)^080h+0),f
  5439  0993  0BA2               	goto	u4407
  5440  0994  2993               	decfsz	((??_delay_ms+0)^080h+0+1),f
  5441  0995  0BA3               	goto	u4407
  5442  0996  2993               	nop
  5443  0997  0000               opt asmopt_pop
  5444                           
  5445                           	line	17
  5446                           ;delay.c: 17:         --t;
  5447                           	movlw	01h
  5448  0998  3001               	bsf	status, 5	;RP0=1, select bank1
  5449  0999  1683               	bcf	status, 6	;RP1=0, select bank1
  5450  099A  1303               	subwf	(delay_ms@t)^080h,f
  5451  099B  02A0               	movlw	0
  5452  099C  3000               	skipc
  5453  099D  1C03               	decf	(delay_ms@t+1)^080h,f
  5454  099E  03A1               	subwf	(delay_ms@t+1)^080h,f
  5455  099F  02A1               	goto	l3422
  5456  09A0  29A1               	line	18
  5457                           ;delay.c: 18:     }
  5458                           	
  5459                           l81:	
  5460  09A1                     	line	14
  5461                           	
  5462                           l3422:	
  5463  09A1                     ;delay.c: 14:     while( t )
  5464                           	bsf	status, 5	;RP0=1, select bank1
  5465  09A1  1683               	bcf	status, 6	;RP1=0, select bank1
  5466  09A2  1303               	movf	((delay_ms@t)^080h),w
  5467  09A3  0820               iorwf	((delay_ms@t+1)^080h),w
  5468  09A4  0421               	btfss	status,2
  5469  09A5  1D03               	goto	u2611
  5470  09A6  29A8               	goto	u2610
  5471  09A7  29A9               u2611:
  5472  09A8                     	goto	l3420
  5473  09A8  298D               u2610:
  5474  09A9                     	goto	l84
  5475  09A9  29AA               	
  5476                           l83:	
  5477  09AA                     	line	19
  5478                           	
  5479                           l84:	
  5480  09AA                     	return
  5481  09AA  0008               	opt stack 0
  5482                           GLOBAL	__end_of_delay_ms
  5483                           	__end_of_delay_ms:
  5484  09AB                     	signat	_delay_ms,4217
  5485                           	global	_procura_tag
  5486                           
  5487 ;; *************** function _procura_tag *****************
  5488 ;; Defined at:
  5489 ;;		line 317 in file "rfid.c"
  5490 ;; Parameters:    Size  Location     Type
  5491 ;;  modo            1    wreg     unsigned char 
  5492 ;;  data            2   27[BANK1 ] PTR unsigned char 
  5493 ;;		 -> TAG(5), main@TAG(5), 
  5494 ;; Auto vars:     Size  Location     Type
  5495 ;;  modo            1   31[BANK1 ] unsigned char 
  5496 ;;  len             1   33[BANK1 ] unsigned char 
  5497 ;;  status          1   32[BANK1 ] unsigned char 
  5498 ;; Return value:  Size  Location     Type
  5499 ;;                  1    wreg      unsigned char 
  5500 ;; Registers used:
  5501 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5502 ;; Tracked objects:
  5503 ;;		On entry : 0/0
  5504 ;;		On exit  : 0/0
  5505 ;;		Unchanged: 0/0
  5506 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5507 ;;      Params:         0       0       2       0       0
  5508 ;;      Locals:         0       0       3       0       0
  5509 ;;      Temps:          0       0       2       0       0
  5510 ;;      Totals:         0       0       7       0       0
  5511 ;;Total ram usage:        7 bytes
  5512 ;; Hardware stack levels used:    1
  5513 ;; Hardware stack levels required when called:    6
  5514 ;; This function calls:
  5515 ;;		_spiSoftTxCmd
  5516 ;;		_spiSoftTxDat
  5517 ;;		_tagTxCmd
  5518 ;; This function is called by:
  5519 ;;		_main
  5520 ;;		_rfid_read
  5521 ;; This function uses a non-reentrant model
  5522 ;;
  5523                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5524                           	file	"rfid.c"
  5525                           	line	317
  5526                           global __ptext9
  5527                           __ptext9:	;psect for function _procura_tag
  5528  0BDD                     psect	text9
  5529                           	file	"rfid.c"
  5530                           	line	317
  5531                           	global	__size_of_procura_tag
  5532                           	__size_of_procura_tag	equ	__end_of_procura_tag-_procura_tag
  5533  004A                     	
  5534                           _procura_tag:	
  5535  0BDD                     ;incstack = 0
  5536                           	opt	stack 1
  5537                           ; Regs used in _procura_tag: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5538                           ;procura_tag@modo stored from wreg
  5539                           	bsf	status, 5	;RP0=1, select bank1
  5540  0BDD  1683               	bcf	status, 6	;RP1=0, select bank1
  5541  0BDE  1303               	movwf	(procura_tag@modo)^080h
  5542  0BDF  00BF               	line	321
  5543                           	
  5544                           l4562:	
  5545  0BE0                     ;rfid.c: 317: char procura_tag(char modo, char *data);rfid.c: 318: {;rfid.c: 319:  char 
                                 status, len;;rfid.c: 321:  spiSoftTxCmd(0x0D, 0);
  5546                           	clrf	(spiSoftTxCmd@oper)^080h
  5547  0BE0  01A0               	movlw	low(0Dh)
  5548  0BE1  300D               	fcall	_spiSoftTxCmd
  5549  0BE2  120A  158A  2472  120A  158A  	line	322
  5550                           ;rfid.c: 322:  spiSoftTxDat(0x07);
  5551                           	movlw	low(07h)
  5552  0BE7  3007               	fcall	_spiSoftTxDat
  5553  0BE8  120A  158A  22F1  120A  158A  	line	323
  5554                           	
  5555                           l4564:	
  5556  0BED                     ;rfid.c: 323:  PORTAbits.RA5 = 1;
  5557                           	bcf	status, 5	;RP0=0, select bank0
  5558  0BED  1283               	bcf	status, 6	;RP1=0, select bank0
  5559  0BEE  1303               	bsf	(5),5	;volatile
  5560  0BEF  1685               	line	324
  5561                           	
  5562                           l4566:	
  5563  0BF0                     ;rfid.c: 324:  data[0] = modo;
  5564                           	bsf	status, 5	;RP0=1, select bank1
  5565  0BF0  1683               	bcf	status, 6	;RP1=0, select bank1
  5566  0BF1  1303               	movf	(procura_tag@modo)^080h,w
  5567  0BF2  083F               	movwf	(??_procura_tag+0)^080h+0
  5568  0BF3  00BD               	movf	(procura_tag@data)^080h,w
  5569  0BF4  083B               	movwf	fsr0
  5570  0BF5  0084               	bsf	status,7
  5571  0BF6  1783               	btfss	(procura_tag@data+1)^080h,0
  5572  0BF7  1C3C               	bcf	status,7
  5573  0BF8  1383               	movf	(??_procura_tag+0)^080h+0,w
  5574  0BF9  083D               	movwf	indf
  5575  0BFA  0080               	line	325
  5576                           	
  5577                           l4568:	
  5578  0BFB                     ;rfid.c: 325:  status = tagTxCmd(0x0C, data, 1, data, &len);
  5579                           		movf	(procura_tag@data)^080h,w
  5580  0BFB  083B               	movwf	(tagTxCmd@data)^080h
  5581  0BFC  00AA               movf	(procura_tag@data+1)^080h,w
  5582  0BFD  083C               movwf	(tagTxCmd@data+1)^080h
  5583  0BFE  00AB               
  5584                           	clrf	(tagTxCmd@dlen)^080h
  5585  0BFF  01AC               	incf	(tagTxCmd@dlen)^080h,f
  5586  0C00  0AAC               		movf	(procura_tag@data)^080h,w
  5587  0C01  083B               	movwf	(tagTxCmd@result)^080h
  5588  0C02  00AD               movf	(procura_tag@data+1)^080h,w
  5589  0C03  083C               movwf	(tagTxCmd@result+1)^080h
  5590  0C04  00AE               
  5591                           	movlw	(low(procura_tag@len|((0x0)<<8)))&0ffh
  5592  0C05  30C1               	movwf	(??_procura_tag+0)^080h+0
  5593  0C06  00BD               	movf	(??_procura_tag+0)^080h+0,w
  5594  0C07  083D               	movwf	(tagTxCmd@rlen)^080h
  5595  0C08  00AF               	movlw	low(0Ch)
  5596  0C09  300C               	fcall	_tagTxCmd
  5597  0C0A  120A  118A  2362  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5598  0C0F  1683               	bcf	status, 6	;RP1=0, select bank1
  5599  0C10  1303               	movwf	(??_procura_tag+1)^080h+0
  5600  0C11  00BE               	movf	(??_procura_tag+1)^080h+0,w
  5601  0C12  083E               	movwf	(procura_tag@status)^080h
  5602  0C13  00C0               	line	326
  5603                           	
  5604                           l4570:	
  5605  0C14                     ;rfid.c: 326:  if ((status != 0) || (len != 0x10)) status = 2;
  5606                           	movf	((procura_tag@status)^080h),w
  5607  0C14  0840               	btfss	status,2
  5608  0C15  1D03               	goto	u4031
  5609  0C16  2C18               	goto	u4030
  5610  0C17  2C19               u4031:
  5611  0C18                     	goto	l4574
  5612  0C18  2C20               u4030:
  5613  0C19                     	
  5614                           l4572:	
  5615  0C19                     		movlw	16
  5616  0C19  3010               	xorwf	((procura_tag@len)^080h),w
  5617  0C1A  0641               	btfsc	status,2
  5618  0C1B  1903               	goto	u4041
  5619  0C1C  2C1E               	goto	u4040
  5620  0C1D  2C1F               u4041:
  5621  0C1E                     	goto	l342
  5622  0C1E  2C26               u4040:
  5623  0C1F                     	goto	l4574
  5624  0C1F  2C20               	
  5625                           l341:	
  5626  0C20                     	
  5627                           l4574:	
  5628  0C20                     	movlw	low(02h)
  5629  0C20  3002               	movwf	(??_procura_tag+0)^080h+0
  5630  0C21  00BD               	movf	(??_procura_tag+0)^080h+0,w
  5631  0C22  083D               	movwf	(procura_tag@status)^080h
  5632  0C23  00C0               	goto	l342
  5633  0C24  2C26               	
  5634                           l339:	
  5635  0C25                     	goto	l342
  5636  0C25  2C26               	line	327
  5637                           	
  5638                           l4576:	
  5639  0C26                     	line	328
  5640                           ;rfid.c: 327:  return (status);;	Return value of _procura_tag is never used
  5641                           	
  5642                           l342:	
  5643  0C26                     	return
  5644  0C26  0008               	opt stack 0
  5645                           GLOBAL	__end_of_procura_tag
  5646                           	__end_of_procura_tag:
  5647  0C27                     	signat	_procura_tag,8313
  5648                           	global	_tagTxCmd
  5649                           
  5650 ;; *************** function _tagTxCmd *****************
  5651 ;; Defined at:
  5652 ;;		line 149 in file "rfid.c"
  5653 ;; Parameters:    Size  Location     Type
  5654 ;;  cmd             1    wreg     unsigned char 
  5655 ;;  data            2   10[BANK1 ] PTR unsigned char 
  5656 ;;		 -> TAG(5), main@TAG(5), 
  5657 ;;  dlen            1   12[BANK1 ] unsigned char 
  5658 ;;  result          2   13[BANK1 ] PTR unsigned char 
  5659 ;;		 -> TAG(5), main@TAG(5), 
  5660 ;;  rlen            1   15[BANK1 ] PTR unsigned char 
  5661 ;;		 -> procura_tag@len(1), 
  5662 ;; Auto vars:     Size  Location     Type
  5663 ;;  cmd             1   24[BANK1 ] unsigned char 
  5664 ;;  n               1   26[BANK1 ] unsigned char 
  5665 ;;  i               1   25[BANK1 ] unsigned char 
  5666 ;;  lastBits        1   23[BANK1 ] unsigned char 
  5667 ;;  irqEn           1   22[BANK1 ] unsigned char 
  5668 ;;  a               1   21[BANK1 ] unsigned char 
  5669 ;;  status          1   20[BANK1 ] unsigned char 
  5670 ;;  waitIRq         1   19[BANK1 ] unsigned char 
  5671 ;; Return value:  Size  Location     Type
  5672 ;;                  1    wreg      unsigned char 
  5673 ;; Registers used:
  5674 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5675 ;; Tracked objects:
  5676 ;;		On entry : 0/0
  5677 ;;		On exit  : 0/0
  5678 ;;		Unchanged: 0/0
  5679 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5680 ;;      Params:         0       0       6       0       0
  5681 ;;      Locals:         0       0       8       0       0
  5682 ;;      Temps:          0       0       3       0       0
  5683 ;;      Totals:         0       0      17       0       0
  5684 ;;Total ram usage:       17 bytes
  5685 ;; Hardware stack levels used:    1
  5686 ;; Hardware stack levels required when called:    5
  5687 ;; This function calls:
  5688 ;;		_mfrc522ClrBit
  5689 ;;		_mfrc522SetBit
  5690 ;;		_spiSoftRxDat
  5691 ;;		_spiSoftTxCmd
  5692 ;;		_spiSoftTxDat
  5693 ;; This function is called by:
  5694 ;;		_procura_tag
  5695 ;; This function uses a non-reentrant model
  5696 ;;
  5697                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5698                           	line	149
  5699                           global __ptext10
  5700                           __ptext10:	;psect for function _tagTxCmd
  5701  0362                     psect	text10
  5702                           	file	"rfid.c"
  5703                           	line	149
  5704                           	global	__size_of_tagTxCmd
  5705                           	__size_of_tagTxCmd	equ	__end_of_tagTxCmd-_tagTxCmd
  5706  01F3                     	
  5707                           _tagTxCmd:	
  5708  0362                     ;incstack = 0
  5709                           	opt	stack 1
  5710                           ; Regs used in _tagTxCmd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5711                           ;tagTxCmd@cmd stored from wreg
  5712                           	bsf	status, 5	;RP0=1, select bank1
  5713  0362  1683               	bcf	status, 6	;RP1=0, select bank1
  5714  0363  1303               	movwf	(tagTxCmd@cmd)^080h
  5715  0364  00B8               	line	151
  5716                           	
  5717                           l4358:	
  5718  0365                     ;rfid.c: 149: char tagTxCmd(char cmd, char *data, char dlen, char *result, char *rlen);r
                                 fid.c: 150: {;rfid.c: 151:  char status = 2;
  5719                           	movlw	low(02h)
  5720  0365  3002               	movwf	(??_tagTxCmd+0)^080h+0
  5721  0366  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5722  0367  0830               	movwf	(tagTxCmd@status)^080h
  5723  0368  00B4               	line	152
  5724                           	
  5725                           l4360:	
  5726  0369                     ;rfid.c: 152:  char irqEn = 0x00;
  5727                           	clrf	(tagTxCmd@irqEn)^080h
  5728  0369  01B6               	line	153
  5729                           	
  5730                           l4362:	
  5731  036A                     ;rfid.c: 153:  char waitIRq = 0x00;
  5732                           	clrf	(tagTxCmd@waitIRq)^080h
  5733  036A  01B3               	line	157
  5734                           ;rfid.c: 154:  char lastBits, n;;rfid.c: 155:  char i, a;;rfid.c: 157:  switch (cmd)
  5735                           	goto	l4370
  5736  036B  2B80               	line	159
  5737                           ;rfid.c: 158:  {;rfid.c: 159:   case 0x0E:
  5738                           	
  5739                           l312:	
  5740  036C                     	line	160
  5741                           	
  5742                           l4364:	
  5743  036C                     ;rfid.c: 160:    irqEn = 0x12;
  5744                           	movlw	low(012h)
  5745  036C  3012               	movwf	(??_tagTxCmd+0)^080h+0
  5746  036D  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5747  036E  0830               	movwf	(tagTxCmd@irqEn)^080h
  5748  036F  00B6               	line	161
  5749                           ;rfid.c: 161:    waitIRq = 0x10;
  5750                           	movlw	low(010h)
  5751  0370  3010               	movwf	(??_tagTxCmd+0)^080h+0
  5752  0371  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5753  0372  0830               	movwf	(tagTxCmd@waitIRq)^080h
  5754  0373  00B3               	line	162
  5755                           ;rfid.c: 162:    break;
  5756                           	goto	l4372
  5757  0374  2B90               	line	163
  5758                           ;rfid.c: 163:   case 0x0C:
  5759                           	
  5760                           l314:	
  5761  0375                     	line	164
  5762                           	
  5763                           l4366:	
  5764  0375                     ;rfid.c: 164:    irqEn = 0x77;
  5765                           	movlw	low(077h)
  5766  0375  3077               	movwf	(??_tagTxCmd+0)^080h+0
  5767  0376  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5768  0377  0830               	movwf	(tagTxCmd@irqEn)^080h
  5769  0378  00B6               	line	165
  5770                           ;rfid.c: 165:    waitIRq = 0x30;
  5771                           	movlw	low(030h)
  5772  0379  3030               	movwf	(??_tagTxCmd+0)^080h+0
  5773  037A  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5774  037B  0830               	movwf	(tagTxCmd@waitIRq)^080h
  5775  037C  00B3               	line	166
  5776                           ;rfid.c: 166:    break;
  5777                           	goto	l4372
  5778  037D  2B90               	line	167
  5779                           ;rfid.c: 167:   default:
  5780                           	
  5781                           l315:	
  5782  037E                     	line	168
  5783                           ;rfid.c: 168:    break;
  5784                           	goto	l4372
  5785  037E  2B90               	line	169
  5786                           	
  5787                           l4368:	
  5788  037F                     ;rfid.c: 169:  }
  5789                           	goto	l4372
  5790  037F  2B90               	
  5791                           l311:	
  5792  0380                     	
  5793                           l4370:	
  5794  0380                     	movf	(tagTxCmd@cmd)^080h,w
  5795  0380  0838               	movwf	(??_tagTxCmd+0)^080h+0
  5796  0381  00B0               	clrf	(??_tagTxCmd+0)^080h+0+1
  5797  0382  01B1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5798                           ; Switch size 1, requested type "space"
  5799                           ; Number of cases is 1, Range of values is 0 to 0
  5800                           ; switch strategies available:
  5801                           ; Name         Instructions Cycles
  5802                           ; simple_byte            4     3 (average)
  5803                           ; direct_byte           11     8 (fixed)
  5804                           ; jumptable            260     6 (fixed)
  5805                           ;	Chosen strategy is simple_byte
  5806                           
  5807                           	movf 1+(??_tagTxCmd+0)^080h+0,w
  5808  0383  0831               	opt asmopt_push
  5809                           	opt asmopt_off
  5810                           	xorlw	0^0	; case 0
  5811  0384  3A00               	skipnz
  5812  0385  1903               	goto	l4926
  5813  0386  2B88               	goto	l4372
  5814  0387  2B90               	opt asmopt_pop
  5815                           	
  5816                           l4926:	
  5817  0388                     ; Switch size 1, requested type "space"
  5818                           ; Number of cases is 2, Range of values is 12 to 14
  5819                           ; switch strategies available:
  5820                           ; Name         Instructions Cycles
  5821                           ; simple_byte            7     4 (average)
  5822                           ; direct_byte           20    11 (fixed)
  5823                           ; jumptable            263     9 (fixed)
  5824                           ;	Chosen strategy is simple_byte
  5825                           
  5826                           	movf 0+(??_tagTxCmd+0)^080h+0,w
  5827  0388  0830               	opt asmopt_push
  5828                           	opt asmopt_off
  5829                           	xorlw	12^0	; case 12
  5830  0389  3A0C               	skipnz
  5831  038A  1903               	goto	l4366
  5832  038B  2B75               	xorlw	14^12	; case 14
  5833  038C  3A02               	skipnz
  5834  038D  1903               	goto	l4364
  5835  038E  2B6C               	goto	l4372
  5836  038F  2B90               	opt asmopt_pop
  5837                           
  5838                           	
  5839                           l313:	
  5840  0390                     	line	171
  5841                           	
  5842                           l4372:	
  5843  0390                     ;rfid.c: 171:  spiSoftTxCmd(0x02, 0);
  5844                           	clrf	(spiSoftTxCmd@oper)^080h
  5845  0390  01A0               	movlw	low(02h)
  5846  0391  3002               	fcall	_spiSoftTxCmd
  5847  0392  120A  158A  2472  120A  118A  	line	172
  5848                           ;rfid.c: 172:  spiSoftTxDat(irqEn | 0x80);
  5849                           	bsf	status, 5	;RP0=1, select bank1
  5850  0397  1683               	bcf	status, 6	;RP1=0, select bank1
  5851  0398  1303               	movf	(tagTxCmd@irqEn)^080h,w
  5852  0399  0836               	iorlw	080h
  5853  039A  3880               	fcall	_spiSoftTxDat
  5854  039B  120A  158A  22F1  120A  118A  	line	173
  5855                           	
  5856                           l4374:	
  5857  03A0                     ;rfid.c: 173:  PORTAbits.RA5 = 1;
  5858                           	bcf	status, 5	;RP0=0, select bank0
  5859  03A0  1283               	bcf	status, 6	;RP1=0, select bank0
  5860  03A1  1303               	bsf	(5),5	;volatile
  5861  03A2  1685               	line	175
  5862                           ;rfid.c: 175:  mfrc522ClrBit(0x04, 0x80);
  5863                           	movlw	low(080h)
  5864  03A3  3080               	bsf	status, 5	;RP0=1, select bank1
  5865  03A4  1683               	bcf	status, 6	;RP1=0, select bank1
  5866  03A5  1303               	movwf	(??_tagTxCmd+0)^080h+0
  5867  03A6  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5868  03A7  0830               	movwf	(mfrc522ClrBit@mascara)^080h
  5869  03A8  00A6               	movlw	low(04h)
  5870  03A9  3004               	fcall	_mfrc522ClrBit
  5871  03AA  120A  158A  228C  120A  118A  	line	177
  5872                           ;rfid.c: 177:  mfrc522SetBit(0x0A, 0x80);
  5873                           	movlw	low(080h)
  5874  03AF  3080               	bsf	status, 5	;RP0=1, select bank1
  5875  03B0  1683               	bcf	status, 6	;RP1=0, select bank1
  5876  03B1  1303               	movwf	(??_tagTxCmd+0)^080h+0
  5877  03B2  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5878  03B3  0830               	movwf	(mfrc522SetBit@mascara)^080h
  5879  03B4  00A6               	movlw	low(0Ah)
  5880  03B5  300A               	fcall	_mfrc522SetBit
  5881  03B6  120A  158A  225A  120A  118A  	line	179
  5882                           ;rfid.c: 179:  spiSoftTxCmd(0x01, 0);
  5883                           	bsf	status, 5	;RP0=1, select bank1
  5884  03BB  1683               	bcf	status, 6	;RP1=0, select bank1
  5885  03BC  1303               	clrf	(spiSoftTxCmd@oper)^080h
  5886  03BD  01A0               	movlw	low(01h)
  5887  03BE  3001               	fcall	_spiSoftTxCmd
  5888  03BF  120A  158A  2472  120A  118A  	line	180
  5889                           ;rfid.c: 180:  spiSoftTxDat(0x00);
  5890                           	movlw	low(0)
  5891  03C4  3000               	fcall	_spiSoftTxDat
  5892  03C5  120A  158A  22F1  120A  118A  	line	181
  5893                           	
  5894                           l4376:	
  5895  03CA                     ;rfid.c: 181:  PORTAbits.RA5 = 1;
  5896                           	bcf	status, 5	;RP0=0, select bank0
  5897  03CA  1283               	bcf	status, 6	;RP1=0, select bank0
  5898  03CB  1303               	bsf	(5),5	;volatile
  5899  03CC  1685               	line	184
  5900                           	
  5901                           l4378:	
  5902  03CD                     ;rfid.c: 184:  for (i = 0; i < dlen; i++)
  5903                           	bsf	status, 5	;RP0=1, select bank1
  5904  03CD  1683               	bcf	status, 6	;RP1=0, select bank1
  5905  03CE  1303               	clrf	(tagTxCmd@i)^080h
  5906  03CF  01B9               	goto	l4388
  5907  03D0  2BF6               	
  5908                           l317:	
  5909  03D1                     	line	186
  5910                           	
  5911                           l4380:	
  5912  03D1                     ;rfid.c: 185:  {;rfid.c: 186:   spiSoftTxCmd(0x09, 0);
  5913                           	clrf	(spiSoftTxCmd@oper)^080h
  5914  03D1  01A0               	movlw	low(09h)
  5915  03D2  3009               	fcall	_spiSoftTxCmd
  5916  03D3  120A  158A  2472  120A  118A  	line	187
  5917                           	
  5918                           l4382:	
  5919  03D8                     ;rfid.c: 187:   spiSoftTxDat(data[i]);
  5920                           	bsf	status, 5	;RP0=1, select bank1
  5921  03D8  1683               	bcf	status, 6	;RP1=0, select bank1
  5922  03D9  1303               	movf	(tagTxCmd@i)^080h,w
  5923  03DA  0839               	addwf	(tagTxCmd@data)^080h,w
  5924  03DB  072A               	movwf	(??_tagTxCmd+0)^080h+0
  5925  03DC  00B0               	movf	(tagTxCmd@data+1)^080h,w
  5926  03DD  082B               	skipnc
  5927  03DE  1803               	addlw	1
  5928  03DF  3E01               	movwf	1+((??_tagTxCmd+0)^080h+0)
  5929  03E0  00B1               	movf	0+(??_tagTxCmd+0)^080h+0,w
  5930  03E1  0830               	movwf	fsr0
  5931  03E2  0084               	bsf	status,7
  5932  03E3  1783               	btfss	1+(??_tagTxCmd+0)^080h+0,0
  5933  03E4  1C31               	bcf	status,7
  5934  03E5  1383               	movf	indf,w
  5935  03E6  0800               	fcall	_spiSoftTxDat
  5936  03E7  120A  158A  22F1  120A  118A  	line	188
  5937                           	
  5938                           l4384:	
  5939  03EC                     ;rfid.c: 188:   PORTAbits.RA5 = 1;
  5940                           	bcf	status, 5	;RP0=0, select bank0
  5941  03EC  1283               	bcf	status, 6	;RP1=0, select bank0
  5942  03ED  1303               	bsf	(5),5	;volatile
  5943  03EE  1685               	line	189
  5944                           	
  5945                           l4386:	
  5946  03EF                     ;rfid.c: 189:  }
  5947                           	movlw	low(01h)
  5948  03EF  3001               	bsf	status, 5	;RP0=1, select bank1
  5949  03F0  1683               	bcf	status, 6	;RP1=0, select bank1
  5950  03F1  1303               	movwf	(??_tagTxCmd+0)^080h+0
  5951  03F2  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5952  03F3  0830               	addwf	(tagTxCmd@i)^080h,f
  5953  03F4  07B9               	goto	l4388
  5954  03F5  2BF6               	
  5955                           l316:	
  5956  03F6                     	
  5957                           l4388:	
  5958  03F6                     	movf	(tagTxCmd@dlen)^080h,w
  5959  03F6  082C               	subwf	(tagTxCmd@i)^080h,w
  5960  03F7  0239               	skipc
  5961  03F8  1C03               	goto	u3731
  5962  03F9  2BFB               	goto	u3730
  5963  03FA  2BFC               u3731:
  5964  03FB                     	goto	l4380
  5965  03FB  2BD1               u3730:
  5966  03FC                     	goto	l4390
  5967  03FC  2BFD               	
  5968                           l318:	
  5969  03FD                     	line	192
  5970                           	
  5971                           l4390:	
  5972  03FD                     ;rfid.c: 192:  spiSoftTxCmd(0x01, 0);
  5973                           	clrf	(spiSoftTxCmd@oper)^080h
  5974  03FD  01A0               	movlw	low(01h)
  5975  03FE  3001               	fcall	_spiSoftTxCmd
  5976  03FF  120A  158A  2472  120A  118A  	line	193
  5977                           ;rfid.c: 193:  spiSoftTxDat(cmd);
  5978                           	bsf	status, 5	;RP0=1, select bank1
  5979  0404  1683               	bcf	status, 6	;RP1=0, select bank1
  5980  0405  1303               	movf	(tagTxCmd@cmd)^080h,w
  5981  0406  0838               	fcall	_spiSoftTxDat
  5982  0407  120A  158A  22F1  120A  118A  	line	194
  5983                           	
  5984                           l4392:	
  5985  040C                     ;rfid.c: 194:  PORTAbits.RA5 = 1;
  5986                           	bcf	status, 5	;RP0=0, select bank0
  5987  040C  1283               	bcf	status, 6	;RP1=0, select bank0
  5988  040D  1303               	bsf	(5),5	;volatile
  5989  040E  1685               	line	196
  5990                           	
  5991                           l4394:	
  5992  040F                     ;rfid.c: 196:  if (cmd == 0x0C) mfrc522SetBit(0x0D, 0x80);
  5993                           		movlw	12
  5994  040F  300C               	bsf	status, 5	;RP0=1, select bank1
  5995  0410  1683               	bcf	status, 6	;RP1=0, select bank1
  5996  0411  1303               	xorwf	((tagTxCmd@cmd)^080h),w
  5997  0412  0638               	btfss	status,2
  5998  0413  1D03               	goto	u3741
  5999  0414  2C16               	goto	u3740
  6000  0415  2C17               u3741:
  6001  0416                     	goto	l4398
  6002  0416  2C22               u3740:
  6003  0417                     	
  6004                           l4396:	
  6005  0417                     	movlw	low(080h)
  6006  0417  3080               	movwf	(??_tagTxCmd+0)^080h+0
  6007  0418  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6008  0419  0830               	movwf	(mfrc522SetBit@mascara)^080h
  6009  041A  00A6               	movlw	low(0Dh)
  6010  041B  300D               	fcall	_mfrc522SetBit
  6011  041C  120A  158A  225A  120A  118A  	goto	l4398
  6012  0421  2C22               	
  6013                           l319:	
  6014  0422                     	line	199
  6015                           	
  6016                           l4398:	
  6017  0422                     ;rfid.c: 199:  i = 250;
  6018                           	movlw	low(0FAh)
  6019  0422  30FA               	bsf	status, 5	;RP0=1, select bank1
  6020  0423  1683               	bcf	status, 6	;RP1=0, select bank1
  6021  0424  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6022  0425  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6023  0426  0830               	movwf	(tagTxCmd@i)^080h
  6024  0427  00B9               	goto	l4400
  6025  0428  2C29               	line	200
  6026                           ;rfid.c: 200:  do
  6027                           	
  6028                           l320:	
  6029  0429                     	line	202
  6030                           	
  6031                           l4400:	
  6032  0429                     ;rfid.c: 201:  {;rfid.c: 202:   _delay((unsigned long)((100)*(20000000/4000000.0)));
  6033                           	opt asmopt_push
  6034                           opt asmopt_off
  6035                           	movlw	165
  6036  0429  30A5               	bsf	status, 5	;RP0=1, select bank1
  6037  042A  1683               	bcf	status, 6	;RP1=0, select bank1
  6038  042B  1303               movwf	((??_tagTxCmd+0)^080h+0),f
  6039  042C  00B0               	u4417:
  6040  042D                     decfsz	(??_tagTxCmd+0)^080h+0,f
  6041  042D  0BB0               	goto	u4417
  6042  042E  2C2D               	nop2
  6043  042F  2C30               opt asmopt_pop
  6044                           
  6045                           	line	203
  6046                           ;rfid.c: 203:   spiSoftTxCmd(0x04, 1);
  6047                           	bsf	status, 5	;RP0=1, select bank1
  6048  0430  1683               	bcf	status, 6	;RP1=0, select bank1
  6049  0431  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6050  0432  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6051  0433  0AA0               	movlw	low(04h)
  6052  0434  3004               	fcall	_spiSoftTxCmd
  6053  0435  120A  158A  2472  120A  118A  	line	204
  6054                           ;rfid.c: 204:   n = spiSoftRxDat();
  6055                           	fcall	_spiSoftRxDat
  6056  043A  120A  158A  22BE  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  6057  043F  1683               	bcf	status, 6	;RP1=0, select bank1
  6058  0440  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6059  0441  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6060  0442  0830               	movwf	(tagTxCmd@n)^080h
  6061  0443  00BA               	line	205
  6062                           	
  6063                           l4402:	
  6064  0444                     ;rfid.c: 205:   PORTAbits.RA5 = 1;
  6065                           	bcf	status, 5	;RP0=0, select bank0
  6066  0444  1283               	bcf	status, 6	;RP1=0, select bank0
  6067  0445  1303               	bsf	(5),5	;volatile
  6068  0446  1685               	line	206
  6069                           	
  6070                           l4404:	
  6071  0447                     ;rfid.c: 206:   i--;
  6072                           	movlw	01h
  6073  0447  3001               	bsf	status, 5	;RP0=1, select bank1
  6074  0448  1683               	bcf	status, 6	;RP1=0, select bank1
  6075  0449  1303               	subwf	(tagTxCmd@i)^080h,f
  6076  044A  02B9               	line	207
  6077                           	
  6078                           l4406:	
  6079  044B                     ;rfid.c: 207:  } while ((i != 0) && !(n & 0x01) && !(n & waitIRq));
  6080                           	movf	((tagTxCmd@i)^080h),w
  6081  044B  0839               	btfsc	status,2
  6082  044C  1903               	goto	u3751
  6083  044D  2C4F               	goto	u3750
  6084  044E  2C50               u3751:
  6085  044F                     	goto	l4412
  6086  044F  2C5C               u3750:
  6087  0450                     	
  6088                           l4408:	
  6089  0450                     	btfsc	(tagTxCmd@n)^080h,(0)&7
  6090  0450  183A               	goto	u3761
  6091  0451  2C53               	goto	u3760
  6092  0452  2C54               u3761:
  6093  0453                     	goto	l4412
  6094  0453  2C5C               u3760:
  6095  0454                     	
  6096                           l4410:	
  6097  0454                     	movf	(tagTxCmd@n)^080h,w
  6098  0454  083A               	andwf	(tagTxCmd@waitIRq)^080h,w
  6099  0455  0533               	btfsc	status,2
  6100  0456  1903               	goto	u3771
  6101  0457  2C59               	goto	u3770
  6102  0458  2C5A               u3771:
  6103  0459                     	goto	l4400
  6104  0459  2C29               u3770:
  6105  045A                     	goto	l4412
  6106  045A  2C5C               	
  6107                           l322:	
  6108  045B                     	goto	l4412
  6109  045B  2C5C               	
  6110                           l323:	
  6111  045C                     	line	209
  6112                           	
  6113                           l4412:	
  6114  045C                     ;rfid.c: 209:  mfrc522ClrBit(0x0D, 0x80);
  6115                           	movlw	low(080h)
  6116  045C  3080               	movwf	(??_tagTxCmd+0)^080h+0
  6117  045D  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6118  045E  0830               	movwf	(mfrc522ClrBit@mascara)^080h
  6119  045F  00A6               	movlw	low(0Dh)
  6120  0460  300D               	fcall	_mfrc522ClrBit
  6121  0461  120A  158A  228C  120A  118A  	line	211
  6122                           	
  6123                           l4414:	
  6124  0466                     ;rfid.c: 211:  if (i != 0)
  6125                           	bsf	status, 5	;RP0=1, select bank1
  6126  0466  1683               	bcf	status, 6	;RP1=0, select bank1
  6127  0467  1303               	movf	((tagTxCmd@i)^080h),w
  6128  0468  0839               	btfsc	status,2
  6129  0469  1903               	goto	u3781
  6130  046A  2C6C               	goto	u3780
  6131  046B  2C6D               u3781:
  6132  046C                     	goto	l324
  6133  046C  2D52               u3780:
  6134  046D                     	line	213
  6135                           	
  6136                           l4416:	
  6137  046D                     ;rfid.c: 212:  {;rfid.c: 213:   spiSoftTxCmd(0x06, 1);
  6138                           	clrf	(spiSoftTxCmd@oper)^080h
  6139  046D  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6140  046E  0AA0               	movlw	low(06h)
  6141  046F  3006               	fcall	_spiSoftTxCmd
  6142  0470  120A  158A  2472  120A  118A  	line	214
  6143                           ;rfid.c: 214:   a = spiSoftRxDat();
  6144                           	fcall	_spiSoftRxDat
  6145  0475  120A  158A  22BE  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  6146  047A  1683               	bcf	status, 6	;RP1=0, select bank1
  6147  047B  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6148  047C  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6149  047D  0830               	movwf	(tagTxCmd@a)^080h
  6150  047E  00B5               	line	215
  6151                           	
  6152                           l4418:	
  6153  047F                     ;rfid.c: 215:   PORTAbits.RA5 = 1;
  6154                           	bcf	status, 5	;RP0=0, select bank0
  6155  047F  1283               	bcf	status, 6	;RP1=0, select bank0
  6156  0480  1303               	bsf	(5),5	;volatile
  6157  0481  1685               	line	216
  6158                           	
  6159                           l4420:	
  6160  0482                     ;rfid.c: 216:   a = a & 0x1B;
  6161                           	bsf	status, 5	;RP0=1, select bank1
  6162  0482  1683               	bcf	status, 6	;RP1=0, select bank1
  6163  0483  1303               	movf	(tagTxCmd@a)^080h,w
  6164  0484  0835               	andlw	01Bh
  6165  0485  391B               	movwf	(??_tagTxCmd+0)^080h+0
  6166  0486  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6167  0487  0830               	movwf	(tagTxCmd@a)^080h
  6168  0488  00B5               	line	218
  6169                           	
  6170                           l4422:	
  6171  0489                     ;rfid.c: 218:   if (!a)
  6172                           	movf	((tagTxCmd@a)^080h),w
  6173  0489  0835               	btfss	status,2
  6174  048A  1D03               	goto	u3791
  6175  048B  2C8D               	goto	u3790
  6176  048C  2C8E               u3791:
  6177  048D                     	goto	l4468
  6178  048D  2D4D               u3790:
  6179  048E                     	line	220
  6180                           	
  6181                           l4424:	
  6182  048E                     ;rfid.c: 219:   {;rfid.c: 220:    status = 0;
  6183                           	clrf	(tagTxCmd@status)^080h
  6184  048E  01B4               	line	221
  6185                           	
  6186                           l4426:	
  6187  048F                     ;rfid.c: 221:    if (n & irqEn & 0x01) status = 1;
  6188                           	movf	(tagTxCmd@irqEn)^080h,w
  6189  048F  0836               	andwf	(tagTxCmd@n)^080h,w
  6190  0490  053A               	movwf	(??_tagTxCmd+0)^080h+0
  6191  0491  00B0               	btfss	0+(??_tagTxCmd+0)^080h+0,(0)&7
  6192  0492  1C30               	goto	u3801
  6193  0493  2C95               	goto	u3800
  6194  0494  2C96               u3801:
  6195  0495                     	goto	l4430
  6196  0495  2C99               u3800:
  6197  0496                     	
  6198                           l4428:	
  6199  0496                     	clrf	(tagTxCmd@status)^080h
  6200  0496  01B4               	incf	(tagTxCmd@status)^080h,f
  6201  0497  0AB4               	goto	l4430
  6202  0498  2C99               	
  6203                           l326:	
  6204  0499                     	line	223
  6205                           	
  6206                           l4430:	
  6207  0499                     ;rfid.c: 223:    if (cmd == 0x0C)
  6208                           		movlw	12
  6209  0499  300C               	xorwf	((tagTxCmd@cmd)^080h),w
  6210  049A  0638               	btfss	status,2
  6211  049B  1D03               	goto	u3811
  6212  049C  2C9E               	goto	u3810
  6213  049D  2C9F               u3811:
  6214  049E                     	goto	l324
  6215  049E  2D52               u3810:
  6216  049F                     	line	225
  6217                           	
  6218                           l4432:	
  6219  049F                     ;rfid.c: 224:    {;rfid.c: 225:     spiSoftTxCmd(0x0A, 1);
  6220                           	clrf	(spiSoftTxCmd@oper)^080h
  6221  049F  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6222  04A0  0AA0               	movlw	low(0Ah)
  6223  04A1  300A               	fcall	_spiSoftTxCmd
  6224  04A2  120A  158A  2472  120A  118A  	line	226
  6225                           ;rfid.c: 226:     n = spiSoftRxDat();
  6226                           	fcall	_spiSoftRxDat
  6227  04A7  120A  158A  22BE  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  6228  04AC  1683               	bcf	status, 6	;RP1=0, select bank1
  6229  04AD  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6230  04AE  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6231  04AF  0830               	movwf	(tagTxCmd@n)^080h
  6232  04B0  00BA               	line	227
  6233                           	
  6234                           l4434:	
  6235  04B1                     ;rfid.c: 227:     PORTAbits.RA5 = 1;
  6236                           	bcf	status, 5	;RP0=0, select bank0
  6237  04B1  1283               	bcf	status, 6	;RP1=0, select bank0
  6238  04B2  1303               	bsf	(5),5	;volatile
  6239  04B3  1685               	line	229
  6240                           ;rfid.c: 229:     spiSoftTxCmd(0x0C, 1);
  6241                           	bsf	status, 5	;RP0=1, select bank1
  6242  04B4  1683               	bcf	status, 6	;RP1=0, select bank1
  6243  04B5  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6244  04B6  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6245  04B7  0AA0               	movlw	low(0Ch)
  6246  04B8  300C               	fcall	_spiSoftTxCmd
  6247  04B9  120A  158A  2472  120A  118A  	line	230
  6248                           ;rfid.c: 230:     lastBits = spiSoftRxDat();
  6249                           	fcall	_spiSoftRxDat
  6250  04BE  120A  158A  22BE  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  6251  04C3  1683               	bcf	status, 6	;RP1=0, select bank1
  6252  04C4  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6253  04C5  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6254  04C6  0830               	movwf	(tagTxCmd@lastBits)^080h
  6255  04C7  00B7               	line	231
  6256                           	
  6257                           l4436:	
  6258  04C8                     ;rfid.c: 231:     PORTAbits.RA5 = 1;
  6259                           	bcf	status, 5	;RP0=0, select bank0
  6260  04C8  1283               	bcf	status, 6	;RP1=0, select bank0
  6261  04C9  1303               	bsf	(5),5	;volatile
  6262  04CA  1685               	line	233
  6263                           	
  6264                           l4438:	
  6265  04CB                     ;rfid.c: 233:     lastBits = lastBits & 0x07;
  6266                           	bsf	status, 5	;RP0=1, select bank1
  6267  04CB  1683               	bcf	status, 6	;RP1=0, select bank1
  6268  04CC  1303               	movf	(tagTxCmd@lastBits)^080h,w
  6269  04CD  0837               	andlw	07h
  6270  04CE  3907               	movwf	(??_tagTxCmd+0)^080h+0
  6271  04CF  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6272  04D0  0830               	movwf	(tagTxCmd@lastBits)^080h
  6273  04D1  00B7               	line	235
  6274                           	
  6275                           l4440:	
  6276  04D2                     ;rfid.c: 235:     if (lastBits) *rlen = (n - 1) * 8 + lastBits;
  6277                           	movf	((tagTxCmd@lastBits)^080h),w
  6278  04D2  0837               	btfsc	status,2
  6279  04D3  1903               	goto	u3821
  6280  04D4  2CD6               	goto	u3820
  6281  04D5  2CD7               u3821:
  6282  04D6                     	goto	l4444
  6283  04D6  2CE9               u3820:
  6284  04D7                     	
  6285                           l4442:	
  6286  04D7                     	movf	(tagTxCmd@n)^080h,w
  6287  04D7  083A               	movwf	(??_tagTxCmd+0)^080h+0
  6288  04D8  00B0               	movlw	03h
  6289  04D9  3003               u3835:
  6290  04DA                     	clrc
  6291  04DA  1003               	rlf	(??_tagTxCmd+0)^080h+0,f
  6292  04DB  0DB0               	addlw	-1
  6293  04DC  3EFF               	skipz
  6294  04DD  1D03               	goto	u3835
  6295  04DE  2CDA               	movf	(tagTxCmd@lastBits)^080h,w
  6296  04DF  0837               	addwf	0+(??_tagTxCmd+0)^080h+0,w
  6297  04E0  0730               	addlw	0F8h
  6298  04E1  3EF8               	movwf	(??_tagTxCmd+1)^080h+0
  6299  04E2  00B1               	movf	(tagTxCmd@rlen)^080h,w
  6300  04E3  082F               	movwf	fsr0
  6301  04E4  0084               	movf	(??_tagTxCmd+1)^080h+0,w
  6302  04E5  0831               	bcf	status, 7	;select IRP bank0
  6303  04E6  1383               	movwf	indf
  6304  04E7  0080               	goto	l4446
  6305  04E8  2CFA               	line	236
  6306                           ;rfid.c: 236:     else *rlen = n * 8;
  6307                           	
  6308                           l328:	
  6309  04E9                     	
  6310                           l4444:	
  6311  04E9                     	movf	(tagTxCmd@n)^080h,w
  6312  04E9  083A               	movwf	(??_tagTxCmd+0)^080h+0
  6313  04EA  00B0               	movlw	(03h)-1
  6314  04EB  3002               u3845:
  6315  04EC                     	clrc
  6316  04EC  1003               	rlf	(??_tagTxCmd+0)^080h+0,f
  6317  04ED  0DB0               	addlw	-1
  6318  04EE  3EFF               	skipz
  6319  04EF  1D03               	goto	u3845
  6320  04F0  2CEC               	clrc
  6321  04F1  1003               	rlf	(??_tagTxCmd+0)^080h+0,w
  6322  04F2  0D30               	movwf	(??_tagTxCmd+1)^080h+0
  6323  04F3  00B1               	movf	(tagTxCmd@rlen)^080h,w
  6324  04F4  082F               	movwf	fsr0
  6325  04F5  0084               	movf	(??_tagTxCmd+1)^080h+0,w
  6326  04F6  0831               	bcf	status, 7	;select IRP bank0
  6327  04F7  1383               	movwf	indf
  6328  04F8  0080               	goto	l4446
  6329  04F9  2CFA               	
  6330                           l329:	
  6331  04FA                     	line	238
  6332                           	
  6333                           l4446:	
  6334  04FA                     ;rfid.c: 238:     if (n == 0) n = 1;
  6335                           	movf	((tagTxCmd@n)^080h),w
  6336  04FA  083A               	btfss	status,2
  6337  04FB  1D03               	goto	u3851
  6338  04FC  2CFE               	goto	u3850
  6339  04FD  2CFF               u3851:
  6340  04FE                     	goto	l4450
  6341  04FE  2D02               u3850:
  6342  04FF                     	
  6343                           l4448:	
  6344  04FF                     	clrf	(tagTxCmd@n)^080h
  6345  04FF  01BA               	incf	(tagTxCmd@n)^080h,f
  6346  0500  0ABA               	goto	l4450
  6347  0501  2D02               	
  6348                           l330:	
  6349  0502                     	line	239
  6350                           	
  6351                           l4450:	
  6352  0502                     ;rfid.c: 239:     if (n > 16) n = 16;
  6353                           	movlw	low(011h)
  6354  0502  3011               	subwf	(tagTxCmd@n)^080h,w
  6355  0503  023A               	skipc
  6356  0504  1C03               	goto	u3861
  6357  0505  2D07               	goto	u3860
  6358  0506  2D08               u3861:
  6359  0507                     	goto	l4454
  6360  0507  2D0D               u3860:
  6361  0508                     	
  6362                           l4452:	
  6363  0508                     	movlw	low(010h)
  6364  0508  3010               	movwf	(??_tagTxCmd+0)^080h+0
  6365  0509  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6366  050A  0830               	movwf	(tagTxCmd@n)^080h
  6367  050B  00BA               	goto	l4454
  6368  050C  2D0D               	
  6369                           l331:	
  6370  050D                     	line	241
  6371                           	
  6372                           l4454:	
  6373  050D                     ;rfid.c: 241:     for (i = 0; i < n; i++)
  6374                           	clrf	(tagTxCmd@i)^080h
  6375  050D  01B9               	goto	l4464
  6376  050E  2D37               	
  6377                           l333:	
  6378  050F                     	line	243
  6379                           	
  6380                           l4456:	
  6381  050F                     ;rfid.c: 242:     {;rfid.c: 243:      spiSoftTxCmd(0x09, 1);
  6382                           	clrf	(spiSoftTxCmd@oper)^080h
  6383  050F  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6384  0510  0AA0               	movlw	low(09h)
  6385  0511  3009               	fcall	_spiSoftTxCmd
  6386  0512  120A  158A  2472  120A  118A  	line	244
  6387                           	
  6388                           l4458:	
  6389  0517                     ;rfid.c: 244:      result[i] = spiSoftRxDat();
  6390                           	fcall	_spiSoftRxDat
  6391  0517  120A  158A  22BE  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  6392  051C  1683               	bcf	status, 6	;RP1=0, select bank1
  6393  051D  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6394  051E  00B0               	movf	(tagTxCmd@i)^080h,w
  6395  051F  0839               	addwf	(tagTxCmd@result)^080h,w
  6396  0520  072D               	movwf	(??_tagTxCmd+1)^080h+0
  6397  0521  00B1               	movf	(tagTxCmd@result+1)^080h,w
  6398  0522  082E               	skipnc
  6399  0523  1803               	addlw	1
  6400  0524  3E01               	movwf	1+((??_tagTxCmd+1)^080h+0)
  6401  0525  00B2               	movf	0+(??_tagTxCmd+1)^080h+0,w
  6402  0526  0831               	movwf	fsr0
  6403  0527  0084               	bsf	status,7
  6404  0528  1783               	btfss	1+(??_tagTxCmd+1)^080h+0,0
  6405  0529  1C32               	bcf	status,7
  6406  052A  1383               	movf	(??_tagTxCmd+0)^080h+0,w
  6407  052B  0830               	movwf	indf
  6408  052C  0080               	line	245
  6409                           	
  6410                           l4460:	
  6411  052D                     ;rfid.c: 245:      PORTAbits.RA5 = 1;
  6412                           	bcf	status, 5	;RP0=0, select bank0
  6413  052D  1283               	bcf	status, 6	;RP1=0, select bank0
  6414  052E  1303               	bsf	(5),5	;volatile
  6415  052F  1685               	line	246
  6416                           	
  6417                           l4462:	
  6418  0530                     ;rfid.c: 246:     }
  6419                           	movlw	low(01h)
  6420  0530  3001               	bsf	status, 5	;RP0=1, select bank1
  6421  0531  1683               	bcf	status, 6	;RP1=0, select bank1
  6422  0532  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6423  0533  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6424  0534  0830               	addwf	(tagTxCmd@i)^080h,f
  6425  0535  07B9               	goto	l4464
  6426  0536  2D37               	
  6427                           l332:	
  6428  0537                     	
  6429                           l4464:	
  6430  0537                     	movf	(tagTxCmd@n)^080h,w
  6431  0537  083A               	subwf	(tagTxCmd@i)^080h,w
  6432  0538  0239               	skipc
  6433  0539  1C03               	goto	u3871
  6434  053A  2D3C               	goto	u3870
  6435  053B  2D3D               u3871:
  6436  053C                     	goto	l4456
  6437  053C  2D0F               u3870:
  6438  053D                     	goto	l4466
  6439  053D  2D3E               	
  6440                           l334:	
  6441  053E                     	line	247
  6442                           	
  6443                           l4466:	
  6444  053E                     ;rfid.c: 247:     result[i] = 0;
  6445                           	movf	(tagTxCmd@i)^080h,w
  6446  053E  0839               	addwf	(tagTxCmd@result)^080h,w
  6447  053F  072D               	movwf	(??_tagTxCmd+0)^080h+0
  6448  0540  00B0               	movf	(tagTxCmd@result+1)^080h,w
  6449  0541  082E               	skipnc
  6450  0542  1803               	addlw	1
  6451  0543  3E01               	movwf	1+((??_tagTxCmd+0)^080h+0)
  6452  0544  00B1               	movf	0+(??_tagTxCmd+0)^080h+0,w
  6453  0545  0830               	movwf	fsr0
  6454  0546  0084               	bsf	status,7
  6455  0547  1783               	btfss	1+(??_tagTxCmd+0)^080h+0,0
  6456  0548  1C31               	bcf	status,7
  6457  0549  1383               	clrf	indf
  6458  054A  0180               	goto	l324
  6459  054B  2D52               	line	248
  6460                           ;rfid.c: 248:    }
  6461                           	
  6462                           l327:	
  6463  054C                     	line	249
  6464                           ;rfid.c: 249:   }
  6465                           	goto	l324
  6466  054C  2D52               	line	250
  6467                           ;rfid.c: 250:   else status = 2;
  6468                           	
  6469                           l325:	
  6470  054D                     	
  6471                           l4468:	
  6472  054D                     	movlw	low(02h)
  6473  054D  3002               	movwf	(??_tagTxCmd+0)^080h+0
  6474  054E  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6475  054F  0830               	movwf	(tagTxCmd@status)^080h
  6476  0550  00B4               	goto	l324
  6477  0551  2D52               	
  6478                           l335:	
  6479  0552                     	line	251
  6480                           ;rfid.c: 251:  }
  6481                           	
  6482                           l324:	
  6483  0552                     	line	252
  6484                           ;rfid.c: 252:  return (status);
  6485                           	movf	(tagTxCmd@status)^080h,w
  6486  0552  0834               	goto	l336
  6487  0553  2D54               	
  6488                           l4470:	
  6489  0554                     	line	253
  6490                           	
  6491                           l336:	
  6492  0554                     	return
  6493  0554  0008               	opt stack 0
  6494                           GLOBAL	__end_of_tagTxCmd
  6495                           	__end_of_tagTxCmd:
  6496  0555                     	signat	_tagTxCmd,20601
  6497                           	global	_mfrc522ClrBit
  6498                           
  6499 ;; *************** function _mfrc522ClrBit *****************
  6500 ;; Defined at:
  6501 ;;		line 39 in file "rfid.c"
  6502 ;; Parameters:    Size  Location     Type
  6503 ;;  end             1    wreg     unsigned char 
  6504 ;;  mascara         1    6[BANK1 ] unsigned char 
  6505 ;; Auto vars:     Size  Location     Type
  6506 ;;  end             1    8[BANK1 ] unsigned char 
  6507 ;;  lido            1    9[BANK1 ] unsigned char 
  6508 ;; Return value:  Size  Location     Type
  6509 ;;                  1    wreg      void 
  6510 ;; Registers used:
  6511 ;;		wreg, status,2, status,0, pclath, cstack
  6512 ;; Tracked objects:
  6513 ;;		On entry : 0/0
  6514 ;;		On exit  : 0/0
  6515 ;;		Unchanged: 0/0
  6516 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6517 ;;      Params:         0       0       1       0       0
  6518 ;;      Locals:         0       0       2       0       0
  6519 ;;      Temps:          0       0       1       0       0
  6520 ;;      Totals:         0       0       4       0       0
  6521 ;;Total ram usage:        4 bytes
  6522 ;; Hardware stack levels used:    1
  6523 ;; Hardware stack levels required when called:    4
  6524 ;; This function calls:
  6525 ;;		_spiSoftRxDat
  6526 ;;		_spiSoftTxCmd
  6527 ;;		_spiSoftTxDat
  6528 ;; This function is called by:
  6529 ;;		_tagTxCmd
  6530 ;; This function uses a non-reentrant model
  6531 ;;
  6532                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  6533                           	line	39
  6534                           global __ptext11
  6535                           __ptext11:	;psect for function _mfrc522ClrBit
  6536  0A8C                     psect	text11
  6537                           	file	"rfid.c"
  6538                           	line	39
  6539                           	global	__size_of_mfrc522ClrBit
  6540                           	__size_of_mfrc522ClrBit	equ	__end_of_mfrc522ClrBit-_mfrc522ClrBit
  6541  0032                     	
  6542                           _mfrc522ClrBit:	
  6543  0A8C                     ;incstack = 0
  6544                           	opt	stack 1
  6545                           ; Regs used in _mfrc522ClrBit: [wreg+status,2+status,0+pclath+cstack]
  6546                           ;mfrc522ClrBit@end stored from wreg
  6547                           	bsf	status, 5	;RP0=1, select bank1
  6548  0A8C  1683               	bcf	status, 6	;RP1=0, select bank1
  6549  0A8D  1303               	movwf	(mfrc522ClrBit@end)^080h
  6550  0A8E  00A8               	line	42
  6551                           	
  6552                           l3390:	
  6553  0A8F                     ;rfid.c: 39: void mfrc522ClrBit(char end, char mascara);rfid.c: 40: {;rfid.c: 41:  char 
                                 lido;;rfid.c: 42:  spiSoftTxCmd(end, 1);
  6554                           	clrf	(spiSoftTxCmd@oper)^080h
  6555  0A8F  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6556  0A90  0AA0               	movf	(mfrc522ClrBit@end)^080h,w
  6557  0A91  0828               	fcall	_spiSoftTxCmd
  6558  0A92  120A  158A  2472  120A  158A  	line	43
  6559                           ;rfid.c: 43:  lido = spiSoftRxDat();
  6560                           	fcall	_spiSoftRxDat
  6561  0A97  120A  158A  22BE  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  6562  0A9C  1683               	bcf	status, 6	;RP1=0, select bank1
  6563  0A9D  1303               	movwf	(??_mfrc522ClrBit+0)^080h+0
  6564  0A9E  00A7               	movf	(??_mfrc522ClrBit+0)^080h+0,w
  6565  0A9F  0827               	movwf	(mfrc522ClrBit@lido)^080h
  6566  0AA0  00A9               	line	44
  6567                           	
  6568                           l3392:	
  6569  0AA1                     ;rfid.c: 44:  PORTAbits.RA5 = 1;
  6570                           	bcf	status, 5	;RP0=0, select bank0
  6571  0AA1  1283               	bcf	status, 6	;RP1=0, select bank0
  6572  0AA2  1303               	bsf	(5),5	;volatile
  6573  0AA3  1685               	line	45
  6574                           	
  6575                           l3394:	
  6576  0AA4                     ;rfid.c: 45:  lido = lido & (~mascara);
  6577                           	bsf	status, 5	;RP0=1, select bank1
  6578  0AA4  1683               	bcf	status, 6	;RP1=0, select bank1
  6579  0AA5  1303               	comf	(mfrc522ClrBit@mascara)^080h,w
  6580  0AA6  0926               	andwf	(mfrc522ClrBit@lido)^080h,w
  6581  0AA7  0529               	movwf	(??_mfrc522ClrBit+0)^080h+0
  6582  0AA8  00A7               	movf	(??_mfrc522ClrBit+0)^080h+0,w
  6583  0AA9  0827               	movwf	(mfrc522ClrBit@lido)^080h
  6584  0AAA  00A9               	line	46
  6585                           	
  6586                           l3396:	
  6587  0AAB                     ;rfid.c: 46:  spiSoftTxCmd(end, 0);
  6588                           	clrf	(spiSoftTxCmd@oper)^080h
  6589  0AAB  01A0               	movf	(mfrc522ClrBit@end)^080h,w
  6590  0AAC  0828               	fcall	_spiSoftTxCmd
  6591  0AAD  120A  158A  2472  120A  158A  	line	47
  6592                           	
  6593                           l3398:	
  6594  0AB2                     ;rfid.c: 47:  spiSoftTxDat(lido);
  6595                           	bsf	status, 5	;RP0=1, select bank1
  6596  0AB2  1683               	bcf	status, 6	;RP1=0, select bank1
  6597  0AB3  1303               	movf	(mfrc522ClrBit@lido)^080h,w
  6598  0AB4  0829               	fcall	_spiSoftTxDat
  6599  0AB5  120A  158A  22F1  120A  158A  	line	48
  6600                           	
  6601                           l3400:	
  6602  0ABA                     ;rfid.c: 48:  PORTAbits.RA5 = 1;
  6603                           	bcf	status, 5	;RP0=0, select bank0
  6604  0ABA  1283               	bcf	status, 6	;RP1=0, select bank0
  6605  0ABB  1303               	bsf	(5),5	;volatile
  6606  0ABC  1685               	line	49
  6607                           	
  6608                           l296:	
  6609  0ABD                     	return
  6610  0ABD  0008               	opt stack 0
  6611                           GLOBAL	__end_of_mfrc522ClrBit
  6612                           	__end_of_mfrc522ClrBit:
  6613  0ABE                     	signat	_mfrc522ClrBit,8313
  6614                           	global	_mfrc522Iniciar
  6615                           
  6616 ;; *************** function _mfrc522Iniciar *****************
  6617 ;; Defined at:
  6618 ;;		line 80 in file "rfid.c"
  6619 ;; Parameters:    Size  Location     Type
  6620 ;;		None
  6621 ;; Auto vars:     Size  Location     Type
  6622 ;;		None
  6623 ;; Return value:  Size  Location     Type
  6624 ;;                  1    wreg      void 
  6625 ;; Registers used:
  6626 ;;		wreg, status,2, status,0, pclath, cstack
  6627 ;; Tracked objects:
  6628 ;;		On entry : 0/0
  6629 ;;		On exit  : 0/0
  6630 ;;		Unchanged: 0/0
  6631 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6632 ;;      Params:         0       0       0       0       0
  6633 ;;      Locals:         0       0       0       0       0
  6634 ;;      Temps:          0       0       0       0       0
  6635 ;;      Totals:         0       0       0       0       0
  6636 ;;Total ram usage:        0 bytes
  6637 ;; Hardware stack levels used:    1
  6638 ;; Hardware stack levels required when called:    6
  6639 ;; This function calls:
  6640 ;;		_mfrc522AntOn
  6641 ;;		_mfrc522Rst
  6642 ;;		_spiSoftTxCmd
  6643 ;;		_spiSoftTxDat
  6644 ;; This function is called by:
  6645 ;;		_main
  6646 ;; This function uses a non-reentrant model
  6647 ;;
  6648                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  6649                           	line	80
  6650                           global __ptext12
  6651                           __ptext12:	;psect for function _mfrc522Iniciar
  6652  0D11                     psect	text12
  6653                           	file	"rfid.c"
  6654                           	line	80
  6655                           	global	__size_of_mfrc522Iniciar
  6656                           	__size_of_mfrc522Iniciar	equ	__end_of_mfrc522Iniciar-_mfrc522Iniciar
  6657  0077                     	
  6658                           _mfrc522Iniciar:	
  6659  0D11                     ;incstack = 0
  6660                           	opt	stack 1
  6661                           ; Regs used in _mfrc522Iniciar: [wreg+status,2+status,0+pclath+cstack]
  6662                           	line	82
  6663                           	
  6664                           l3666:	
  6665  0D11                     ;rfid.c: 82:  mfrc522Rst();
  6666                           	fcall	_mfrc522Rst
  6667  0D11  120A  158A  2089  120A  158A  	line	84
  6668                           ;rfid.c: 84:  spiSoftTxCmd(0x2A, 0);
  6669                           	bsf	status, 5	;RP0=1, select bank1
  6670  0D16  1683               	bcf	status, 6	;RP1=0, select bank1
  6671  0D17  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6672  0D18  01A0               	movlw	low(02Ah)
  6673  0D19  302A               	fcall	_spiSoftTxCmd
  6674  0D1A  120A  158A  2472  120A  158A  	line	85
  6675                           ;rfid.c: 85:  spiSoftTxDat(0x8D);
  6676                           	movlw	low(08Dh)
  6677  0D1F  308D               	fcall	_spiSoftTxDat
  6678  0D20  120A  158A  22F1  120A  158A  	line	86
  6679                           	
  6680                           l3668:	
  6681  0D25                     ;rfid.c: 86:  PORTAbits.RA5 = 1;
  6682                           	bcf	status, 5	;RP0=0, select bank0
  6683  0D25  1283               	bcf	status, 6	;RP1=0, select bank0
  6684  0D26  1303               	bsf	(5),5	;volatile
  6685  0D27  1685               	line	88
  6686                           ;rfid.c: 88:  spiSoftTxCmd(0x2B, 0);
  6687                           	bsf	status, 5	;RP0=1, select bank1
  6688  0D28  1683               	bcf	status, 6	;RP1=0, select bank1
  6689  0D29  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6690  0D2A  01A0               	movlw	low(02Bh)
  6691  0D2B  302B               	fcall	_spiSoftTxCmd
  6692  0D2C  120A  158A  2472  120A  158A  	line	89
  6693                           ;rfid.c: 89:  spiSoftTxDat(0x3E);
  6694                           	movlw	low(03Eh)
  6695  0D31  303E               	fcall	_spiSoftTxDat
  6696  0D32  120A  158A  22F1  120A  158A  	line	90
  6697                           	
  6698                           l3670:	
  6699  0D37                     ;rfid.c: 90:  PORTAbits.RA5 = 1;
  6700                           	bcf	status, 5	;RP0=0, select bank0
  6701  0D37  1283               	bcf	status, 6	;RP1=0, select bank0
  6702  0D38  1303               	bsf	(5),5	;volatile
  6703  0D39  1685               	line	92
  6704                           ;rfid.c: 92:  spiSoftTxCmd(0x2D, 0);
  6705                           	bsf	status, 5	;RP0=1, select bank1
  6706  0D3A  1683               	bcf	status, 6	;RP1=0, select bank1
  6707  0D3B  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6708  0D3C  01A0               	movlw	low(02Dh)
  6709  0D3D  302D               	fcall	_spiSoftTxCmd
  6710  0D3E  120A  158A  2472  120A  158A  	line	93
  6711                           ;rfid.c: 93:  spiSoftTxDat(30);
  6712                           	movlw	low(01Eh)
  6713  0D43  301E               	fcall	_spiSoftTxDat
  6714  0D44  120A  158A  22F1  120A  158A  	line	94
  6715                           	
  6716                           l3672:	
  6717  0D49                     ;rfid.c: 94:  PORTAbits.RA5 = 1;
  6718                           	bcf	status, 5	;RP0=0, select bank0
  6719  0D49  1283               	bcf	status, 6	;RP1=0, select bank0
  6720  0D4A  1303               	bsf	(5),5	;volatile
  6721  0D4B  1685               	line	96
  6722                           ;rfid.c: 96:  spiSoftTxCmd(0x2C, 0);
  6723                           	bsf	status, 5	;RP0=1, select bank1
  6724  0D4C  1683               	bcf	status, 6	;RP1=0, select bank1
  6725  0D4D  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6726  0D4E  01A0               	movlw	low(02Ch)
  6727  0D4F  302C               	fcall	_spiSoftTxCmd
  6728  0D50  120A  158A  2472  120A  158A  	line	97
  6729                           ;rfid.c: 97:  spiSoftTxDat(0);
  6730                           	movlw	low(0)
  6731  0D55  3000               	fcall	_spiSoftTxDat
  6732  0D56  120A  158A  22F1  120A  158A  	line	98
  6733                           	
  6734                           l3674:	
  6735  0D5B                     ;rfid.c: 98:  PORTAbits.RA5 = 1;
  6736                           	bcf	status, 5	;RP0=0, select bank0
  6737  0D5B  1283               	bcf	status, 6	;RP1=0, select bank0
  6738  0D5C  1303               	bsf	(5),5	;volatile
  6739  0D5D  1685               	line	100
  6740                           ;rfid.c: 100:  spiSoftTxCmd(0x15, 0);
  6741                           	bsf	status, 5	;RP0=1, select bank1
  6742  0D5E  1683               	bcf	status, 6	;RP1=0, select bank1
  6743  0D5F  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6744  0D60  01A0               	movlw	low(015h)
  6745  0D61  3015               	fcall	_spiSoftTxCmd
  6746  0D62  120A  158A  2472  120A  158A  	line	101
  6747                           ;rfid.c: 101:  spiSoftTxDat(0x40);
  6748                           	movlw	low(040h)
  6749  0D67  3040               	fcall	_spiSoftTxDat
  6750  0D68  120A  158A  22F1  120A  158A  	line	102
  6751                           	
  6752                           l3676:	
  6753  0D6D                     ;rfid.c: 102:  PORTAbits.RA5 = 1;
  6754                           	bcf	status, 5	;RP0=0, select bank0
  6755  0D6D  1283               	bcf	status, 6	;RP1=0, select bank0
  6756  0D6E  1303               	bsf	(5),5	;volatile
  6757  0D6F  1685               	line	104
  6758                           ;rfid.c: 104:  spiSoftTxCmd(0x11, 0);
  6759                           	bsf	status, 5	;RP0=1, select bank1
  6760  0D70  1683               	bcf	status, 6	;RP1=0, select bank1
  6761  0D71  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6762  0D72  01A0               	movlw	low(011h)
  6763  0D73  3011               	fcall	_spiSoftTxCmd
  6764  0D74  120A  158A  2472  120A  158A  	line	105
  6765                           ;rfid.c: 105:  spiSoftTxDat(0x3D);
  6766                           	movlw	low(03Dh)
  6767  0D79  303D               	fcall	_spiSoftTxDat
  6768  0D7A  120A  158A  22F1  120A  158A  	line	106
  6769                           	
  6770                           l3678:	
  6771  0D7F                     ;rfid.c: 106:  PORTAbits.RA5 = 1;
  6772                           	bcf	status, 5	;RP0=0, select bank0
  6773  0D7F  1283               	bcf	status, 6	;RP1=0, select bank0
  6774  0D80  1303               	bsf	(5),5	;volatile
  6775  0D81  1685               	line	108
  6776                           ;rfid.c: 108:  mfrc522AntOn();
  6777                           	fcall	_mfrc522AntOn
  6778  0D82  160A  118A  27E5  120A  158A  	line	109
  6779                           	
  6780                           l308:	
  6781  0D87                     	return
  6782  0D87  0008               	opt stack 0
  6783                           GLOBAL	__end_of_mfrc522Iniciar
  6784                           	__end_of_mfrc522Iniciar:
  6785  0D88                     	signat	_mfrc522Iniciar,89
  6786                           	global	_mfrc522Rst
  6787                           
  6788 ;; *************** function _mfrc522Rst *****************
  6789 ;; Defined at:
  6790 ;;		line 73 in file "rfid.c"
  6791 ;; Parameters:    Size  Location     Type
  6792 ;;		None
  6793 ;; Auto vars:     Size  Location     Type
  6794 ;;		None
  6795 ;; Return value:  Size  Location     Type
  6796 ;;                  1    wreg      void 
  6797 ;; Registers used:
  6798 ;;		wreg, status,2, status,0, pclath, cstack
  6799 ;; Tracked objects:
  6800 ;;		On entry : 0/0
  6801 ;;		On exit  : 0/0
  6802 ;;		Unchanged: 0/0
  6803 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6804 ;;      Params:         0       0       0       0       0
  6805 ;;      Locals:         0       0       0       0       0
  6806 ;;      Temps:          0       0       0       0       0
  6807 ;;      Totals:         0       0       0       0       0
  6808 ;;Total ram usage:        0 bytes
  6809 ;; Hardware stack levels used:    1
  6810 ;; Hardware stack levels required when called:    4
  6811 ;; This function calls:
  6812 ;;		_spiSoftTxCmd
  6813 ;;		_spiSoftTxDat
  6814 ;; This function is called by:
  6815 ;;		_mfrc522Iniciar
  6816 ;; This function uses a non-reentrant model
  6817 ;;
  6818                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  6819                           	line	73
  6820                           global __ptext13
  6821                           __ptext13:	;psect for function _mfrc522Rst
  6822  0889                     psect	text13
  6823                           	file	"rfid.c"
  6824                           	line	73
  6825                           	global	__size_of_mfrc522Rst
  6826                           	__size_of_mfrc522Rst	equ	__end_of_mfrc522Rst-_mfrc522Rst
  6827  0013                     	
  6828                           _mfrc522Rst:	
  6829  0889                     ;incstack = 0
  6830                           	opt	stack 2
  6831                           ; Regs used in _mfrc522Rst: [wreg+status,2+status,0+pclath+cstack]
  6832                           	line	75
  6833                           	
  6834                           l3446:	
  6835  0889                     ;rfid.c: 75:  spiSoftTxCmd(0x01, 0);
  6836                           	bsf	status, 5	;RP0=1, select bank1
  6837  0889  1683               	bcf	status, 6	;RP1=0, select bank1
  6838  088A  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6839  088B  01A0               	movlw	low(01h)
  6840  088C  3001               	fcall	_spiSoftTxCmd
  6841  088D  120A  158A  2472  120A  158A  	line	76
  6842                           ;rfid.c: 76:  spiSoftTxDat(0x0F);
  6843                           	movlw	low(0Fh)
  6844  0892  300F               	fcall	_spiSoftTxDat
  6845  0893  120A  158A  22F1  120A  158A  	line	77
  6846                           	
  6847                           l3448:	
  6848  0898                     ;rfid.c: 77:  PORTAbits.RA5 = 1;
  6849                           	bcf	status, 5	;RP0=0, select bank0
  6850  0898  1283               	bcf	status, 6	;RP1=0, select bank0
  6851  0899  1303               	bsf	(5),5	;volatile
  6852  089A  1685               	line	78
  6853                           	
  6854                           l305:	
  6855  089B                     	return
  6856  089B  0008               	opt stack 0
  6857                           GLOBAL	__end_of_mfrc522Rst
  6858                           	__end_of_mfrc522Rst:
  6859  089C                     	signat	_mfrc522Rst,89
  6860                           	global	_mfrc522AntOn
  6861                           
  6862 ;; *************** function _mfrc522AntOn *****************
  6863 ;; Defined at:
  6864 ;;		line 63 in file "rfid.c"
  6865 ;; Parameters:    Size  Location     Type
  6866 ;;		None
  6867 ;; Auto vars:     Size  Location     Type
  6868 ;;		None
  6869 ;; Return value:  Size  Location     Type
  6870 ;;                  1    wreg      void 
  6871 ;; Registers used:
  6872 ;;		wreg, status,2, status,0, pclath, cstack
  6873 ;; Tracked objects:
  6874 ;;		On entry : 0/0
  6875 ;;		On exit  : 0/0
  6876 ;;		Unchanged: 0/0
  6877 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6878 ;;      Params:         0       0       0       0       0
  6879 ;;      Locals:         0       0       0       0       0
  6880 ;;      Temps:          0       0       1       0       0
  6881 ;;      Totals:         0       0       1       0       0
  6882 ;;Total ram usage:        1 bytes
  6883 ;; Hardware stack levels used:    1
  6884 ;; Hardware stack levels required when called:    5
  6885 ;; This function calls:
  6886 ;;		_mfrc522SetBit
  6887 ;; This function is called by:
  6888 ;;		_mfrc522Iniciar
  6889 ;; This function uses a non-reentrant model
  6890 ;;
  6891                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  6892                           	line	63
  6893                           global __ptext14
  6894                           __ptext14:	;psect for function _mfrc522AntOn
  6895  17E5                     psect	text14
  6896                           	file	"rfid.c"
  6897                           	line	63
  6898                           	global	__size_of_mfrc522AntOn
  6899                           	__size_of_mfrc522AntOn	equ	__end_of_mfrc522AntOn-_mfrc522AntOn
  6900  000D                     	
  6901                           _mfrc522AntOn:	
  6902  17E5                     ;incstack = 0
  6903                           	opt	stack 1
  6904                           ; Regs used in _mfrc522AntOn: [wreg+status,2+status,0+pclath+cstack]
  6905                           	line	65
  6906                           	
  6907                           l3444:	
  6908  17E5                     ;rfid.c: 65:  mfrc522SetBit(0x14, 0x03);
  6909                           	movlw	low(03h)
  6910  17E5  3003               	bsf	status, 5	;RP0=1, select bank1
  6911  17E6  1683               	bcf	status, 6	;RP1=0, select bank1
  6912  17E7  1303               	movwf	(??_mfrc522AntOn+0)^080h+0
  6913  17E8  00AA               	movf	(??_mfrc522AntOn+0)^080h+0,w
  6914  17E9  082A               	movwf	(mfrc522SetBit@mascara)^080h
  6915  17EA  00A6               	movlw	low(014h)
  6916  17EB  3014               	fcall	_mfrc522SetBit
  6917  17EC  120A  158A  225A  160A  118A  	line	66
  6918                           	
  6919                           l302:	
  6920  17F1                     	return
  6921  17F1  0008               	opt stack 0
  6922                           GLOBAL	__end_of_mfrc522AntOn
  6923                           	__end_of_mfrc522AntOn:
  6924  17F2                     	signat	_mfrc522AntOn,89
  6925                           	global	_mfrc522SetBit
  6926                           
  6927 ;; *************** function _mfrc522SetBit *****************
  6928 ;; Defined at:
  6929 ;;		line 51 in file "rfid.c"
  6930 ;; Parameters:    Size  Location     Type
  6931 ;;  end             1    wreg     unsigned char 
  6932 ;;  mascara         1    6[BANK1 ] unsigned char 
  6933 ;; Auto vars:     Size  Location     Type
  6934 ;;  end             1    8[BANK1 ] unsigned char 
  6935 ;;  lido            1    9[BANK1 ] unsigned char 
  6936 ;; Return value:  Size  Location     Type
  6937 ;;                  1    wreg      void 
  6938 ;; Registers used:
  6939 ;;		wreg, status,2, status,0, pclath, cstack
  6940 ;; Tracked objects:
  6941 ;;		On entry : 0/0
  6942 ;;		On exit  : 0/0
  6943 ;;		Unchanged: 0/0
  6944 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6945 ;;      Params:         0       0       1       0       0
  6946 ;;      Locals:         0       0       2       0       0
  6947 ;;      Temps:          0       0       1       0       0
  6948 ;;      Totals:         0       0       4       0       0
  6949 ;;Total ram usage:        4 bytes
  6950 ;; Hardware stack levels used:    1
  6951 ;; Hardware stack levels required when called:    4
  6952 ;; This function calls:
  6953 ;;		_spiSoftRxDat
  6954 ;;		_spiSoftTxCmd
  6955 ;;		_spiSoftTxDat
  6956 ;; This function is called by:
  6957 ;;		_mfrc522AntOn
  6958 ;;		_tagTxCmd
  6959 ;; This function uses a non-reentrant model
  6960 ;;
  6961                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  6962                           	line	51
  6963                           global __ptext15
  6964                           __ptext15:	;psect for function _mfrc522SetBit
  6965  0A5A                     psect	text15
  6966                           	file	"rfid.c"
  6967                           	line	51
  6968                           	global	__size_of_mfrc522SetBit
  6969                           	__size_of_mfrc522SetBit	equ	__end_of_mfrc522SetBit-_mfrc522SetBit
  6970  0032                     	
  6971                           _mfrc522SetBit:	
  6972  0A5A                     ;incstack = 0
  6973                           	opt	stack 1
  6974                           ; Regs used in _mfrc522SetBit: [wreg+status,2+status,0+pclath+cstack]
  6975                           ;mfrc522SetBit@end stored from wreg
  6976                           	bsf	status, 5	;RP0=1, select bank1
  6977  0A5A  1683               	bcf	status, 6	;RP1=0, select bank1
  6978  0A5B  1303               	movwf	(mfrc522SetBit@end)^080h
  6979  0A5C  00A8               	line	54
  6980                           	
  6981                           l3402:	
  6982  0A5D                     ;rfid.c: 51: void mfrc522SetBit(char end, char mascara);rfid.c: 52: {;rfid.c: 53:  char 
                                 lido;;rfid.c: 54:  spiSoftTxCmd(end, 1);
  6983                           	clrf	(spiSoftTxCmd@oper)^080h
  6984  0A5D  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6985  0A5E  0AA0               	movf	(mfrc522SetBit@end)^080h,w
  6986  0A5F  0828               	fcall	_spiSoftTxCmd
  6987  0A60  120A  158A  2472  120A  158A  	line	55
  6988                           ;rfid.c: 55:  lido = spiSoftRxDat();
  6989                           	fcall	_spiSoftRxDat
  6990  0A65  120A  158A  22BE  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  6991  0A6A  1683               	bcf	status, 6	;RP1=0, select bank1
  6992  0A6B  1303               	movwf	(??_mfrc522SetBit+0)^080h+0
  6993  0A6C  00A7               	movf	(??_mfrc522SetBit+0)^080h+0,w
  6994  0A6D  0827               	movwf	(mfrc522SetBit@lido)^080h
  6995  0A6E  00A9               	line	56
  6996                           	
  6997                           l3404:	
  6998  0A6F                     ;rfid.c: 56:  PORTAbits.RA5 = 1;
  6999                           	bcf	status, 5	;RP0=0, select bank0
  7000  0A6F  1283               	bcf	status, 6	;RP1=0, select bank0
  7001  0A70  1303               	bsf	(5),5	;volatile
  7002  0A71  1685               	line	57
  7003                           	
  7004                           l3406:	
  7005  0A72                     ;rfid.c: 57:  lido = lido | mascara;
  7006                           	bsf	status, 5	;RP0=1, select bank1
  7007  0A72  1683               	bcf	status, 6	;RP1=0, select bank1
  7008  0A73  1303               	movf	(mfrc522SetBit@lido)^080h,w
  7009  0A74  0829               	iorwf	(mfrc522SetBit@mascara)^080h,w
  7010  0A75  0426               	movwf	(??_mfrc522SetBit+0)^080h+0
  7011  0A76  00A7               	movf	(??_mfrc522SetBit+0)^080h+0,w
  7012  0A77  0827               	movwf	(mfrc522SetBit@lido)^080h
  7013  0A78  00A9               	line	58
  7014                           	
  7015                           l3408:	
  7016  0A79                     ;rfid.c: 58:  spiSoftTxCmd(end, 0);
  7017                           	clrf	(spiSoftTxCmd@oper)^080h
  7018  0A79  01A0               	movf	(mfrc522SetBit@end)^080h,w
  7019  0A7A  0828               	fcall	_spiSoftTxCmd
  7020  0A7B  120A  158A  2472  120A  158A  	line	59
  7021                           	
  7022                           l3410:	
  7023  0A80                     ;rfid.c: 59:  spiSoftTxDat(lido);
  7024                           	bsf	status, 5	;RP0=1, select bank1
  7025  0A80  1683               	bcf	status, 6	;RP1=0, select bank1
  7026  0A81  1303               	movf	(mfrc522SetBit@lido)^080h,w
  7027  0A82  0829               	fcall	_spiSoftTxDat
  7028  0A83  120A  158A  22F1  120A  158A  	line	60
  7029                           	
  7030                           l3412:	
  7031  0A88                     ;rfid.c: 60:  PORTAbits.RA5 = 1;
  7032                           	bcf	status, 5	;RP0=0, select bank0
  7033  0A88  1283               	bcf	status, 6	;RP1=0, select bank0
  7034  0A89  1303               	bsf	(5),5	;volatile
  7035  0A8A  1685               	line	61
  7036                           	
  7037                           l299:	
  7038  0A8B                     	return
  7039  0A8B  0008               	opt stack 0
  7040                           GLOBAL	__end_of_mfrc522SetBit
  7041                           	__end_of_mfrc522SetBit:
  7042  0A8C                     	signat	_mfrc522SetBit,8313
  7043                           	global	_spiSoftTxCmd
  7044                           
  7045 ;; *************** function _spiSoftTxCmd *****************
  7046 ;; Defined at:
  7047 ;;		line 50 in file "spi.c"
  7048 ;; Parameters:    Size  Location     Type
  7049 ;;  end             1    wreg     unsigned char 
  7050 ;;  oper            1    0[BANK1 ] unsigned char 
  7051 ;; Auto vars:     Size  Location     Type
  7052 ;;  end             1    3[BANK1 ] unsigned char 
  7053 ;;  reg             1    5[BANK1 ] unsigned char 
  7054 ;;  a               1    4[BANK1 ] unsigned char 
  7055 ;; Return value:  Size  Location     Type
  7056 ;;                  1    wreg      void 
  7057 ;; Registers used:
  7058 ;;		wreg, status,2, status,0, pclath, cstack
  7059 ;; Tracked objects:
  7060 ;;		On entry : 0/0
  7061 ;;		On exit  : 0/0
  7062 ;;		Unchanged: 0/0
  7063 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7064 ;;      Params:         0       0       1       0       0
  7065 ;;      Locals:         0       0       3       0       0
  7066 ;;      Temps:          0       0       2       0       0
  7067 ;;      Totals:         0       0       6       0       0
  7068 ;;Total ram usage:        6 bytes
  7069 ;; Hardware stack levels used:    1
  7070 ;; Hardware stack levels required when called:    3
  7071 ;; This function calls:
  7072 ;;		_spiSoftClk
  7073 ;; This function is called by:
  7074 ;;		_mfrc522ClrBit
  7075 ;;		_mfrc522SetBit
  7076 ;;		_mfrc522Rst
  7077 ;;		_mfrc522Iniciar
  7078 ;;		_tagTxCmd
  7079 ;;		_procura_tag
  7080 ;; This function uses a non-reentrant model
  7081 ;;
  7082                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  7083                           	file	"spi.c"
  7084                           	line	50
  7085                           global __ptext16
  7086                           __ptext16:	;psect for function _spiSoftTxCmd
  7087  0C72                     psect	text16
  7088                           	file	"spi.c"
  7089                           	line	50
  7090                           	global	__size_of_spiSoftTxCmd
  7091                           	__size_of_spiSoftTxCmd	equ	__end_of_spiSoftTxCmd-_spiSoftTxCmd
  7092  004F                     	
  7093                           _spiSoftTxCmd:	
  7094  0C72                     ;incstack = 0
  7095                           	opt	stack 2
  7096                           ; Regs used in _spiSoftTxCmd: [wreg+status,2+status,0+pclath+cstack]
  7097                           ;spiSoftTxCmd@end stored from wreg
  7098                           	bsf	status, 5	;RP0=1, select bank1
  7099  0C72  1683               	bcf	status, 6	;RP1=0, select bank1
  7100  0C73  1303               	movwf	(spiSoftTxCmd@end)^080h
  7101  0C74  00A3               	line	53
  7102                           	
  7103                           l3310:	
  7104  0C75                     ;spi.c: 50: void spiSoftTxCmd(char end, char oper);spi.c: 51: {;spi.c: 52:  char reg, a;
                                 ;spi.c: 53:  PORTAbits.RA5 = 0;
  7105                           	bcf	status, 5	;RP0=0, select bank0
  7106  0C75  1283               	bcf	status, 6	;RP1=0, select bank0
  7107  0C76  1303               	bcf	(5),5	;volatile
  7108  0C77  1285               	line	54
  7109                           	
  7110                           l3312:	
  7111  0C78                     ;spi.c: 54:  reg = end << 1;
  7112                           	bsf	status, 5	;RP0=1, select bank1
  7113  0C78  1683               	bcf	status, 6	;RP1=0, select bank1
  7114  0C79  1303               	movf	(spiSoftTxCmd@end)^080h,w
  7115  0C7A  0823               	movwf	(??_spiSoftTxCmd+0)^080h+0
  7116  0C7B  00A1               	addwf	(??_spiSoftTxCmd+0)^080h+0,w
  7117  0C7C  0721               	movwf	(??_spiSoftTxCmd+1)^080h+0
  7118  0C7D  00A2               	movf	(??_spiSoftTxCmd+1)^080h+0,w
  7119  0C7E  0822               	movwf	(spiSoftTxCmd@reg)^080h
  7120  0C7F  00A5               	line	55
  7121                           ;spi.c: 55:  if (oper)reg = reg | 0x80;
  7122                           	movf	((spiSoftTxCmd@oper)^080h),w
  7123  0C80  0820               	btfsc	status,2
  7124  0C81  1903               	goto	u2501
  7125  0C82  2C84               	goto	u2500
  7126  0C83  2C85               u2501:
  7127  0C84                     	goto	l3316
  7128  0C84  2C8B               u2500:
  7129  0C85                     	
  7130                           l3314:	
  7131  0C85                     	movf	(spiSoftTxCmd@reg)^080h,w
  7132  0C85  0825               	iorlw	080h
  7133  0C86  3880               	movwf	(??_spiSoftTxCmd+0)^080h+0
  7134  0C87  00A1               	movf	(??_spiSoftTxCmd+0)^080h+0,w
  7135  0C88  0821               	movwf	(spiSoftTxCmd@reg)^080h
  7136  0C89  00A5               	goto	l3318
  7137  0C8A  2C91               	line	56
  7138                           ;spi.c: 56:  else reg = reg & 0x7E;
  7139                           	
  7140                           l437:	
  7141  0C8B                     	
  7142                           l3316:	
  7143  0C8B                     	movf	(spiSoftTxCmd@reg)^080h,w
  7144  0C8B  0825               	andlw	07Eh
  7145  0C8C  397E               	movwf	(??_spiSoftTxCmd+0)^080h+0
  7146  0C8D  00A1               	movf	(??_spiSoftTxCmd+0)^080h+0,w
  7147  0C8E  0821               	movwf	(spiSoftTxCmd@reg)^080h
  7148  0C8F  00A5               	goto	l3318
  7149  0C90  2C91               	
  7150                           l438:	
  7151  0C91                     	line	58
  7152                           	
  7153                           l3318:	
  7154  0C91                     ;spi.c: 58:  for (a = 0; a < 8; a++)
  7155                           	clrf	(spiSoftTxCmd@a)^080h
  7156  0C91  01A4               	movlw	low(08h)
  7157  0C92  3008               	subwf	(spiSoftTxCmd@a)^080h,w
  7158  0C93  0224               	skipc
  7159  0C94  1C03               	goto	u2511
  7160  0C95  2C97               	goto	u2510
  7161  0C96  2C98               u2511:
  7162  0C97                     	goto	l439
  7163  0C97  2C9A               u2510:
  7164  0C98                     	goto	l443
  7165  0C98  2CC0               	
  7166                           l3320:	
  7167  0C99                     	goto	l443
  7168  0C99  2CC0               	
  7169                           l439:	
  7170  0C9A                     	line	60
  7171                           ;spi.c: 59:  {;spi.c: 60:   if (reg & 0x80)PORTCbits.RC5 = 1;
  7172                           	btfss	(spiSoftTxCmd@reg)^080h,(7)&7
  7173  0C9A  1FA5               	goto	u2521
  7174  0C9B  2C9D               	goto	u2520
  7175  0C9C  2C9E               u2521:
  7176  0C9D                     	goto	l441
  7177  0C9D  2CA2               u2520:
  7178  0C9E                     	
  7179                           l3322:	
  7180  0C9E                     	bcf	status, 5	;RP0=0, select bank0
  7181  0C9E  1283               	bcf	status, 6	;RP1=0, select bank0
  7182  0C9F  1303               	bsf	(7),5	;volatile
  7183  0CA0  1687               	goto	l3324
  7184  0CA1  2CA6               	line	61
  7185                           ;spi.c: 61:   else PORTCbits.RC5 = 0;
  7186                           	
  7187                           l441:	
  7188  0CA2                     	bcf	status, 5	;RP0=0, select bank0
  7189  0CA2  1283               	bcf	status, 6	;RP1=0, select bank0
  7190  0CA3  1303               	bcf	(7),5	;volatile
  7191  0CA4  1287               	goto	l3324
  7192  0CA5  2CA6               	
  7193                           l442:	
  7194  0CA6                     	line	62
  7195                           	
  7196                           l3324:	
  7197  0CA6                     ;spi.c: 62:   reg = reg << 1;
  7198                           	bsf	status, 5	;RP0=1, select bank1
  7199  0CA6  1683               	bcf	status, 6	;RP1=0, select bank1
  7200  0CA7  1303               	movf	(spiSoftTxCmd@reg)^080h,w
  7201  0CA8  0825               	movwf	(??_spiSoftTxCmd+0)^080h+0
  7202  0CA9  00A1               	addwf	(??_spiSoftTxCmd+0)^080h+0,w
  7203  0CAA  0721               	movwf	(??_spiSoftTxCmd+1)^080h+0
  7204  0CAB  00A2               	movf	(??_spiSoftTxCmd+1)^080h+0,w
  7205  0CAC  0822               	movwf	(spiSoftTxCmd@reg)^080h
  7206  0CAD  00A5               	line	63
  7207                           	
  7208                           l3326:	
  7209  0CAE                     ;spi.c: 63:   spiSoftClk();
  7210                           	fcall	_spiSoftClk
  7211  0CAE  160A  118A  27DB  120A  158A  	line	64
  7212                           	
  7213                           l3328:	
  7214  0CB3                     ;spi.c: 64:  }
  7215                           	movlw	low(01h)
  7216  0CB3  3001               	bsf	status, 5	;RP0=1, select bank1
  7217  0CB4  1683               	bcf	status, 6	;RP1=0, select bank1
  7218  0CB5  1303               	movwf	(??_spiSoftTxCmd+0)^080h+0
  7219  0CB6  00A1               	movf	(??_spiSoftTxCmd+0)^080h+0,w
  7220  0CB7  0821               	addwf	(spiSoftTxCmd@a)^080h,f
  7221  0CB8  07A4               	
  7222                           l3330:	
  7223  0CB9                     	movlw	low(08h)
  7224  0CB9  3008               	subwf	(spiSoftTxCmd@a)^080h,w
  7225  0CBA  0224               	skipc
  7226  0CBB  1C03               	goto	u2531
  7227  0CBC  2CBE               	goto	u2530
  7228  0CBD  2CBF               u2531:
  7229  0CBE                     	goto	l439
  7230  0CBE  2C9A               u2530:
  7231  0CBF                     	goto	l443
  7232  0CBF  2CC0               	
  7233                           l440:	
  7234  0CC0                     	line	65
  7235                           	
  7236                           l443:	
  7237  0CC0                     	return
  7238  0CC0  0008               	opt stack 0
  7239                           GLOBAL	__end_of_spiSoftTxCmd
  7240                           	__end_of_spiSoftTxCmd:
  7241  0CC1                     	signat	_spiSoftTxCmd,8313
  7242                           	global	_lcd_print
  7243                           
  7244 ;; *************** function _lcd_print *****************
  7245 ;; Defined at:
  7246 ;;		line 173 in file "lcd.c"
  7247 ;; Parameters:    Size  Location     Type
  7248 ;;  lin             1    wreg     unsigned char 
  7249 ;;  col             1    6[BANK1 ] unsigned char 
  7250 ;;  str             2    7[BANK1 ] PTR const unsigned char 
  7251 ;;		 -> uidAsci(13), STR_16(2), STR_15(2), STR_14(6), 
  7252 ;;		 -> STR_13(9), STR_12(8), STR_11(7), STR_10(7), 
  7253 ;;		 -> STR_9(16), STR_8(9), STR_7(7), STR_6(16), 
  7254 ;;		 -> STR_5(6), STR_4(7), STR_3(10), STR_2(7), 
  7255 ;;		 -> STR_1(11), 
  7256 ;; Auto vars:     Size  Location     Type
  7257 ;;  lin             1   11[BANK1 ] unsigned char 
  7258 ;;  pos             1   10[BANK1 ] unsigned char 
  7259 ;; Return value:  Size  Location     Type
  7260 ;;                  1    wreg      void 
  7261 ;; Registers used:
  7262 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7263 ;; Tracked objects:
  7264 ;;		On entry : 0/0
  7265 ;;		On exit  : 0/0
  7266 ;;		Unchanged: 0/0
  7267 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7268 ;;      Params:         0       0       3       0       0
  7269 ;;      Locals:         0       0       2       0       0
  7270 ;;      Temps:          0       0       1       0       0
  7271 ;;      Totals:         0       0       6       0       0
  7272 ;;Total ram usage:        6 bytes
  7273 ;; Hardware stack levels used:    1
  7274 ;; Hardware stack levels required when called:    4
  7275 ;; This function calls:
  7276 ;;		_lcd_data
  7277 ;;		_lcd_lincol
  7278 ;; This function is called by:
  7279 ;;		_main
  7280 ;;		_rfid_read
  7281 ;;		_rfid_display
  7282 ;; This function uses a non-reentrant model
  7283 ;;
  7284                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  7285                           	file	"lcd.c"
  7286                           	line	173
  7287                           global __ptext17
  7288                           __ptext17:	;psect for function _lcd_print
  7289  0C27                     psect	text17
  7290                           	file	"lcd.c"
  7291                           	line	173
  7292                           	global	__size_of_lcd_print
  7293                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  7294  004B                     	
  7295                           _lcd_print:	
  7296  0C27                     ;incstack = 0
  7297                           	opt	stack 3
  7298                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7299                           ;lcd_print@lin stored from wreg
  7300                           	bsf	status, 5	;RP0=1, select bank1
  7301  0C27  1683               	bcf	status, 6	;RP1=0, select bank1
  7302  0C28  1303               	movwf	(lcd_print@lin)^080h
  7303  0C29  00AB               	line	175
  7304                           	
  7305                           l3754:	
  7306  0C2A                     ;lcd.c: 173: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 174: {;lcd.c: 175:     char pos = col;
  7307                           	movf	(lcd_print@col)^080h,w
  7308  0C2A  0826               	movwf	(??_lcd_print+0)^080h+0
  7309  0C2B  00A9               	movf	(??_lcd_print+0)^080h+0,w
  7310  0C2C  0829               	movwf	(lcd_print@pos)^080h
  7311  0C2D  00AA               	line	176
  7312                           	
  7313                           l3756:	
  7314  0C2E                     ;lcd.c: 176:     lcd_lincol( lin, col );
  7315                           	movf	(lcd_print@col)^080h,w
  7316  0C2E  0826               	movwf	(??_lcd_print+0)^080h+0
  7317  0C2F  00A9               	movf	(??_lcd_print+0)^080h+0,w
  7318  0C30  0829               	movwf	(lcd_lincol@col)^080h
  7319  0C31  00A3               	movf	(lcd_print@lin)^080h,w
  7320  0C32  082B               	fcall	_lcd_lincol
  7321  0C33  120A  158A  20AF  120A  158A  	line	178
  7322                           ;lcd.c: 178:     while( *str )
  7323                           	goto	l3764
  7324  0C38  2C5A               	
  7325                           l120:	
  7326  0C39                     	line	180
  7327                           	
  7328                           l3758:	
  7329  0C39                     ;lcd.c: 179:     {;lcd.c: 180:         lcd_data( *str );
  7330                           	bsf	status, 5	;RP0=1, select bank1
  7331  0C39  1683               	bcf	status, 6	;RP1=0, select bank1
  7332  0C3A  1303               	movf	(lcd_print@str+1)^080h,w
  7333  0C3B  0828               	bcf	status, 5	;RP0=0, select bank0
  7334  0C3C  1283               	bcf	status, 6	;RP1=0, select bank0
  7335  0C3D  1303               	movwf	btemp+1
  7336  0C3E  00FF               	bsf	status, 5	;RP0=1, select bank1
  7337  0C3F  1683               	bcf	status, 6	;RP1=0, select bank1
  7338  0C40  1303               	movf	(lcd_print@str)^080h,w
  7339  0C41  0827               	movwf	fsr0
  7340  0C42  0084               	bcf	status, 5	;RP0=0, select bank0
  7341  0C43  1283               	bcf	status, 6	;RP1=0, select bank0
  7342  0C44  1303               	fcall	stringtab
  7343  0C45  120A  158A  2000  120A  158A  	fcall	_lcd_data
  7344  0C4A  120A  158A  2399  120A  158A  	line	181
  7345                           	
  7346                           l3760:	
  7347  0C4F                     ;lcd.c: 181:         ++str;
  7348                           	movlw	01h
  7349  0C4F  3001               	bsf	status, 5	;RP0=1, select bank1
  7350  0C50  1683               	bcf	status, 6	;RP1=0, select bank1
  7351  0C51  1303               	addwf	(lcd_print@str)^080h,f
  7352  0C52  07A7               	skipnc
  7353  0C53  1803               	incf	(lcd_print@str+1)^080h,f
  7354  0C54  0AA8               	line	182
  7355                           	
  7356                           l3762:	
  7357  0C55                     ;lcd.c: 182:         ++pos;
  7358                           	movlw	low(01h)
  7359  0C55  3001               	movwf	(??_lcd_print+0)^080h+0
  7360  0C56  00A9               	movf	(??_lcd_print+0)^080h+0,w
  7361  0C57  0829               	addwf	(lcd_print@pos)^080h,f
  7362  0C58  07AA               	goto	l3764
  7363  0C59  2C5A               	line	183
  7364                           ;lcd.c: 183:     }
  7365                           	
  7366                           l119:	
  7367  0C5A                     	line	178
  7368                           	
  7369                           l3764:	
  7370  0C5A                     ;lcd.c: 178:     while( *str )
  7371                           	bsf	status, 5	;RP0=1, select bank1
  7372  0C5A  1683               	bcf	status, 6	;RP1=0, select bank1
  7373  0C5B  1303               	movf	(lcd_print@str+1)^080h,w
  7374  0C5C  0828               	bcf	status, 5	;RP0=0, select bank0
  7375  0C5D  1283               	bcf	status, 6	;RP1=0, select bank0
  7376  0C5E  1303               	movwf	btemp+1
  7377  0C5F  00FF               	bsf	status, 5	;RP0=1, select bank1
  7378  0C60  1683               	bcf	status, 6	;RP1=0, select bank1
  7379  0C61  1303               	movf	(lcd_print@str)^080h,w
  7380  0C62  0827               	movwf	fsr0
  7381  0C63  0084               	bcf	status, 5	;RP0=0, select bank0
  7382  0C64  1283               	bcf	status, 6	;RP1=0, select bank0
  7383  0C65  1303               	fcall	stringtab
  7384  0C66  120A  158A  2000  120A  158A  	xorlw	0
  7385  0C6B  3A00               	skipz
  7386  0C6C  1D03               	goto	u2941
  7387  0C6D  2C6F               	goto	u2940
  7388  0C6E  2C70               u2941:
  7389  0C6F                     	goto	l3758
  7390  0C6F  2C39               u2940:
  7391  0C70                     	goto	l122
  7392  0C70  2C71               	
  7393                           l121:	
  7394  0C71                     	line	184
  7395                           	
  7396                           l122:	
  7397  0C71                     	return
  7398  0C71  0008               	opt stack 0
  7399                           GLOBAL	__end_of_lcd_print
  7400                           	__end_of_lcd_print:
  7401  0C72                     	signat	_lcd_print,12409
  7402                           	global	_lcd_lincol
  7403                           
  7404 ;; *************** function _lcd_lincol *****************
  7405 ;; Defined at:
  7406 ;;		line 118 in file "lcd.c"
  7407 ;; Parameters:    Size  Location     Type
  7408 ;;  lin             1    wreg     unsigned char 
  7409 ;;  col             1    3[BANK1 ] unsigned char 
  7410 ;; Auto vars:     Size  Location     Type
  7411 ;;  lin             1    5[BANK1 ] unsigned char 
  7412 ;; Return value:  Size  Location     Type
  7413 ;;                  1    wreg      void 
  7414 ;; Registers used:
  7415 ;;		wreg, status,2, status,0, pclath, cstack
  7416 ;; Tracked objects:
  7417 ;;		On entry : 0/0
  7418 ;;		On exit  : 0/0
  7419 ;;		Unchanged: 0/0
  7420 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7421 ;;      Params:         0       0       1       0       0
  7422 ;;      Locals:         0       0       1       0       0
  7423 ;;      Temps:          0       0       1       0       0
  7424 ;;      Totals:         0       0       3       0       0
  7425 ;;Total ram usage:        3 bytes
  7426 ;; Hardware stack levels used:    1
  7427 ;; Hardware stack levels required when called:    3
  7428 ;; This function calls:
  7429 ;;		_lcd_inst
  7430 ;; This function is called by:
  7431 ;;		_lcd_print
  7432 ;;		_lcd_num
  7433 ;; This function uses a non-reentrant model
  7434 ;;
  7435                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  7436                           	line	118
  7437                           global __ptext18
  7438                           __ptext18:	;psect for function _lcd_lincol
  7439  08AF                     psect	text18
  7440                           	file	"lcd.c"
  7441                           	line	118
  7442                           	global	__size_of_lcd_lincol
  7443                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  7444  0015                     	
  7445                           _lcd_lincol:	
  7446  08AF                     ;incstack = 0
  7447                           	opt	stack 3
  7448                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  7449                           ;lcd_lincol@lin stored from wreg
  7450                           	bsf	status, 5	;RP0=1, select bank1
  7451  08AF  1683               	bcf	status, 6	;RP1=0, select bank1
  7452  08B0  1303               	movwf	(lcd_lincol@lin)^080h
  7453  08B1  00A5               	line	120
  7454                           	
  7455                           l3442:	
  7456  08B2                     ;lcd.c: 118: void lcd_lincol ( unsigned char lin, unsigned char col);lcd.c: 119: {;lcd.c
                                 : 120:     lcd_inst ( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  7457                           	movf	(lcd_lincol@lin)^080h,w
  7458  08B2  0825               	movwf	(??_lcd_lincol+0)^080h+0
  7459  08B3  00A4               	movlw	06h
  7460  08B4  3006               u2635:
  7461  08B5                     	clrc
  7462  08B5  1003               	rlf	(??_lcd_lincol+0)^080h+0,f
  7463  08B6  0DA4               	addlw	-1
  7464  08B7  3EFF               	skipz
  7465  08B8  1D03               	goto	u2635
  7466  08B9  28B5               	movf	(lcd_lincol@col)^080h,w
  7467  08BA  0823               	addwf	0+(??_lcd_lincol+0)^080h+0,w
  7468  08BB  0724               	andlw	07Fh
  7469  08BC  397F               	addlw	080h
  7470  08BD  3E80               	fcall	_lcd_inst
  7471  08BE  120A  158A  2756  120A  158A  	line	121
  7472                           	
  7473                           l110:	
  7474  08C3                     	return
  7475  08C3  0008               	opt stack 0
  7476                           GLOBAL	__end_of_lcd_lincol
  7477                           	__end_of_lcd_lincol:
  7478  08C4                     	signat	_lcd_lincol,8313
  7479                           	global	_lcd_data
  7480                           
  7481 ;; *************** function _lcd_data *****************
  7482 ;; Defined at:
  7483 ;;		line 102 in file "lcd.c"
  7484 ;; Parameters:    Size  Location     Type
  7485 ;;  d               1    wreg     unsigned char 
  7486 ;; Auto vars:     Size  Location     Type
  7487 ;;  d               1    2[BANK1 ] unsigned char 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  1    wreg      void 
  7490 ;; Registers used:
  7491 ;;		wreg, status,2, status,0
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7497 ;;      Params:         0       0       0       0       0
  7498 ;;      Locals:         0       0       1       0       0
  7499 ;;      Temps:          0       0       2       0       0
  7500 ;;      Totals:         0       0       3       0       0
  7501 ;;Total ram usage:        3 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    2
  7504 ;; This function calls:
  7505 ;;		Nothing
  7506 ;; This function is called by:
  7507 ;;		_lcd_print
  7508 ;;		_lcd_num
  7509 ;; This function uses a non-reentrant model
  7510 ;;
  7511                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  7512                           	line	102
  7513                           global __ptext19
  7514                           __ptext19:	;psect for function _lcd_data
  7515  0B99                     psect	text19
  7516                           	file	"lcd.c"
  7517                           	line	102
  7518                           	global	__size_of_lcd_data
  7519                           	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_data
  7520  0044                     	
  7521                           _lcd_data:	
  7522  0B99                     ;incstack = 0
  7523                           	opt	stack 4
  7524                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  7525                           ;lcd_data@d stored from wreg
  7526                           	bsf	status, 5	;RP0=1, select bank1
  7527  0B99  1683               	bcf	status, 6	;RP1=0, select bank1
  7528  0B9A  1303               	movwf	(lcd_data@d)^080h
  7529  0B9B  00A2               	line	104
  7530                           	
  7531                           l3424:	
  7532  0B9C                     ;lcd.c: 102: void lcd_data (unsigned char d);lcd.c: 103: {;lcd.c: 104:     PORTDbits.RD4
                                  = 1;
  7533                           	bcf	status, 5	;RP0=0, select bank0
  7534  0B9C  1283               	bcf	status, 6	;RP1=0, select bank0
  7535  0B9D  1303               	bsf	(8),4	;volatile
  7536  0B9E  1608               	line	105
  7537                           	
  7538                           l3426:	
  7539  0B9F                     ;lcd.c: 105:     PORTD = ((PORTD & 0xF0)|(d>>4 & 0x0F));
  7540                           	bsf	status, 5	;RP0=1, select bank1
  7541  0B9F  1683               	bcf	status, 6	;RP1=0, select bank1
  7542  0BA0  1303               	movf	(lcd_data@d)^080h,w
  7543  0BA1  0822               	movwf	(??_lcd_data+0)^080h+0
  7544  0BA2  00A0               	movlw	04h
  7545  0BA3  3004               u2625:
  7546  0BA4                     	clrc
  7547  0BA4  1003               	rrf	(??_lcd_data+0)^080h+0,f
  7548  0BA5  0CA0               	addlw	-1
  7549  0BA6  3EFF               	skipz
  7550  0BA7  1D03               	goto	u2625
  7551  0BA8  2BA4               	movlw	low(0Fh)
  7552  0BA9  300F               	andwf	0+(??_lcd_data+0)^080h+0,w
  7553  0BAA  0520               	movwf	(??_lcd_data+1)^080h+0
  7554  0BAB  00A1               	bcf	status, 5	;RP0=0, select bank0
  7555  0BAC  1283               	bcf	status, 6	;RP1=0, select bank0
  7556  0BAD  1303               	movf	(8),w	;volatile
  7557  0BAE  0808               	andlw	0F0h
  7558  0BAF  39F0               	bsf	status, 5	;RP0=1, select bank1
  7559  0BB0  1683               	bcf	status, 6	;RP1=0, select bank1
  7560  0BB1  1303               	iorwf	0+(??_lcd_data+1)^080h+0,w
  7561  0BB2  0421               	bcf	status, 5	;RP0=0, select bank0
  7562  0BB3  1283               	bcf	status, 6	;RP1=0, select bank0
  7563  0BB4  1303               	movwf	(8)	;volatile
  7564  0BB5  0088               	line	106
  7565                           	
  7566                           l3428:	
  7567  0BB6                     ;lcd.c: 106:     PORTDbits.RD5 = 0;
  7568                           	bcf	(8),5	;volatile
  7569  0BB6  1288               	line	107
  7570                           	
  7571                           l3430:	
  7572  0BB7                     ;lcd.c: 107:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  7573                           	opt asmopt_push
  7574                           opt asmopt_off
  7575                           	movlw	65
  7576  0BB7  3041               	bsf	status, 5	;RP0=1, select bank1
  7577  0BB8  1683               	bcf	status, 6	;RP1=0, select bank1
  7578  0BB9  1303               movwf	((??_lcd_data+0)^080h+0),f
  7579  0BBA  00A0               	u4427:
  7580  0BBB                     decfsz	(??_lcd_data+0)^080h+0,f
  7581  0BBB  0BA0               	goto	u4427
  7582  0BBC  2BBB               	nop2
  7583  0BBD  2BBE               opt asmopt_pop
  7584                           
  7585                           	line	108
  7586                           	
  7587                           l3432:	
  7588  0BBE                     ;lcd.c: 108:     PORTDbits.RD5 = 1;
  7589                           	bcf	status, 5	;RP0=0, select bank0
  7590  0BBE  1283               	bcf	status, 6	;RP1=0, select bank0
  7591  0BBF  1303               	bsf	(8),5	;volatile
  7592  0BC0  1688               	line	110
  7593                           	
  7594                           l3434:	
  7595  0BC1                     ;lcd.c: 110:     PORTDbits.RD4 = 1;
  7596                           	bsf	(8),4	;volatile
  7597  0BC1  1608               	line	111
  7598                           	
  7599                           l3436:	
  7600  0BC2                     ;lcd.c: 111:     PORTD = ((PORTD & 0xF0)|(d & 0x0F));
  7601                           	movlw	low(0Fh)
  7602  0BC2  300F               	bsf	status, 5	;RP0=1, select bank1
  7603  0BC3  1683               	bcf	status, 6	;RP1=0, select bank1
  7604  0BC4  1303               	andwf	(lcd_data@d)^080h,w
  7605  0BC5  0522               	movwf	(??_lcd_data+0)^080h+0
  7606  0BC6  00A0               	bcf	status, 5	;RP0=0, select bank0
  7607  0BC7  1283               	bcf	status, 6	;RP1=0, select bank0
  7608  0BC8  1303               	movf	(8),w	;volatile
  7609  0BC9  0808               	andlw	0F0h
  7610  0BCA  39F0               	bsf	status, 5	;RP0=1, select bank1
  7611  0BCB  1683               	bcf	status, 6	;RP1=0, select bank1
  7612  0BCC  1303               	iorwf	0+(??_lcd_data+0)^080h+0,w
  7613  0BCD  0420               	bcf	status, 5	;RP0=0, select bank0
  7614  0BCE  1283               	bcf	status, 6	;RP1=0, select bank0
  7615  0BCF  1303               	movwf	(8)	;volatile
  7616  0BD0  0088               	line	112
  7617                           	
  7618                           l3438:	
  7619  0BD1                     ;lcd.c: 112:     PORTDbits.RD5 = 0;
  7620                           	bcf	(8),5	;volatile
  7621  0BD1  1288               	line	113
  7622                           ;lcd.c: 113:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  7623                           	opt asmopt_push
  7624                           opt asmopt_off
  7625                           	movlw	65
  7626  0BD2  3041               	bsf	status, 5	;RP0=1, select bank1
  7627  0BD3  1683               	bcf	status, 6	;RP1=0, select bank1
  7628  0BD4  1303               movwf	((??_lcd_data+0)^080h+0),f
  7629  0BD5  00A0               	u4437:
  7630  0BD6                     decfsz	(??_lcd_data+0)^080h+0,f
  7631  0BD6  0BA0               	goto	u4437
  7632  0BD7  2BD6               	nop2
  7633  0BD8  2BD9               opt asmopt_pop
  7634                           
  7635                           	line	114
  7636                           	
  7637                           l3440:	
  7638  0BD9                     ;lcd.c: 114:     PORTDbits.RD5 = 1;
  7639                           	bcf	status, 5	;RP0=0, select bank0
  7640  0BD9  1283               	bcf	status, 6	;RP1=0, select bank0
  7641  0BDA  1303               	bsf	(8),5	;volatile
  7642  0BDB  1688               	line	115
  7643                           	
  7644                           l107:	
  7645  0BDC                     	return
  7646  0BDC  0008               	opt stack 0
  7647                           GLOBAL	__end_of_lcd_data
  7648                           	__end_of_lcd_data:
  7649  0BDD                     	signat	_lcd_data,4217
  7650                           	global	_lcd_init
  7651                           
  7652 ;; *************** function _lcd_init *****************
  7653 ;; Defined at:
  7654 ;;		line 124 in file "lcd.c"
  7655 ;; Parameters:    Size  Location     Type
  7656 ;;		None
  7657 ;; Auto vars:     Size  Location     Type
  7658 ;;		None
  7659 ;; Return value:  Size  Location     Type
  7660 ;;                  1    wreg      void 
  7661 ;; Registers used:
  7662 ;;		wreg, status,2, status,0, pclath, cstack
  7663 ;; Tracked objects:
  7664 ;;		On entry : 0/0
  7665 ;;		On exit  : 0/0
  7666 ;;		Unchanged: 0/0
  7667 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7668 ;;      Params:         0       0       0       0       0
  7669 ;;      Locals:         0       0       0       0       0
  7670 ;;      Temps:          0       0       3       0       0
  7671 ;;      Totals:         0       0       3       0       0
  7672 ;;Total ram usage:        3 bytes
  7673 ;; Hardware stack levels used:    1
  7674 ;; Hardware stack levels required when called:    3
  7675 ;; This function calls:
  7676 ;;		_lcd_inst
  7677 ;; This function is called by:
  7678 ;;		_main
  7679 ;; This function uses a non-reentrant model
  7680 ;;
  7681                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  7682                           	line	124
  7683                           global __ptext20
  7684                           __ptext20:	;psect for function _lcd_init
  7685  07AB                     psect	text20
  7686                           	file	"lcd.c"
  7687                           	line	124
  7688                           	global	__size_of_lcd_init
  7689                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  7690  0050                     	
  7691                           _lcd_init:	
  7692  07AB                     ;incstack = 0
  7693                           	opt	stack 4
  7694                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7695                           	line	126
  7696                           	
  7697                           l3680:	
  7698  07AB                     ;lcd.c: 126:     _delay((unsigned long)((100)*(20000000/4000.0)));
  7699                           	opt asmopt_push
  7700                           opt asmopt_off
  7701                           movlw  3
  7702  07AB  3003               	bsf	status, 5	;RP0=1, select bank1
  7703  07AC  1683               	bcf	status, 6	;RP1=0, select bank1
  7704  07AD  1303               movwf	((??_lcd_init+0)^080h+0+2),f
  7705  07AE  00A5               movlw	138
  7706  07AF  308A               movwf	((??_lcd_init+0)^080h+0+1),f
  7707  07B0  00A4               	movlw	85
  7708  07B1  3055               movwf	((??_lcd_init+0)^080h+0),f
  7709  07B2  00A3               	u4447:
  7710  07B3                     decfsz	((??_lcd_init+0)^080h+0),f
  7711  07B3  0BA3               	goto	u4447
  7712  07B4  2FB3               	decfsz	((??_lcd_init+0)^080h+0+1),f
  7713  07B5  0BA4               	goto	u4447
  7714  07B6  2FB3               	decfsz	((??_lcd_init+0)^080h+0+2),f
  7715  07B7  0BA5               	goto	u4447
  7716  07B8  2FB3               opt asmopt_pop
  7717                           
  7718                           	line	132
  7719                           	
  7720                           l3682:	
  7721  07B9                     ;lcd.c: 132:        TRISDbits.TRISD0 = 0;
  7722                           	bsf	status, 5	;RP0=1, select bank1
  7723  07B9  1683               	bcf	status, 6	;RP1=0, select bank1
  7724  07BA  1303               	bcf	(136)^080h,0	;volatile
  7725  07BB  1008               	line	133
  7726                           	
  7727                           l3684:	
  7728  07BC                     ;lcd.c: 133:        TRISDbits.TRISD1 = 0;
  7729                           	bcf	(136)^080h,1	;volatile
  7730  07BC  1088               	line	134
  7731                           	
  7732                           l3686:	
  7733  07BD                     ;lcd.c: 134:        TRISDbits.TRISD2 = 0;
  7734                           	bcf	(136)^080h,2	;volatile
  7735  07BD  1108               	line	135
  7736                           	
  7737                           l3688:	
  7738  07BE                     ;lcd.c: 135:        TRISDbits.TRISD3 = 0;
  7739                           	bcf	(136)^080h,3	;volatile
  7740  07BE  1188               	line	136
  7741                           	
  7742                           l3690:	
  7743  07BF                     ;lcd.c: 136:        TRISDbits.TRISD4 = 0;
  7744                           	bcf	(136)^080h,4	;volatile
  7745  07BF  1208               	line	137
  7746                           	
  7747                           l3692:	
  7748  07C0                     ;lcd.c: 137:        TRISDbits.TRISD5 = 0;
  7749                           	bcf	(136)^080h,5	;volatile
  7750  07C0  1288               	line	138
  7751                           	
  7752                           l3694:	
  7753  07C1                     ;lcd.c: 138:        TRISDbits.TRISD6 = 0;
  7754                           	bcf	(136)^080h,6	;volatile
  7755  07C1  1308               	line	139
  7756                           	
  7757                           l3696:	
  7758  07C2                     ;lcd.c: 139:        TRISDbits.TRISD7 = 0;
  7759                           	bcf	(136)^080h,7	;volatile
  7760  07C2  1388               	line	156
  7761                           ;lcd.c: 156:     _delay((unsigned long)((100)*(20000000/4000.0)));
  7762                           	opt asmopt_push
  7763                           opt asmopt_off
  7764                           movlw  3
  7765  07C3  3003               	bsf	status, 5	;RP0=1, select bank1
  7766  07C4  1683               	bcf	status, 6	;RP1=0, select bank1
  7767  07C5  1303               movwf	((??_lcd_init+0)^080h+0+2),f
  7768  07C6  00A5               movlw	138
  7769  07C7  308A               movwf	((??_lcd_init+0)^080h+0+1),f
  7770  07C8  00A4               	movlw	85
  7771  07C9  3055               movwf	((??_lcd_init+0)^080h+0),f
  7772  07CA  00A3               	u4457:
  7773  07CB                     decfsz	((??_lcd_init+0)^080h+0),f
  7774  07CB  0BA3               	goto	u4457
  7775  07CC  2FCB               	decfsz	((??_lcd_init+0)^080h+0+1),f
  7776  07CD  0BA4               	goto	u4457
  7777  07CE  2FCB               	decfsz	((??_lcd_init+0)^080h+0+2),f
  7778  07CF  0BA5               	goto	u4457
  7779  07D0  2FCB               opt asmopt_pop
  7780                           
  7781                           	line	157
  7782                           	
  7783                           l3698:	
  7784  07D1                     ;lcd.c: 157:     PORTDbits.RD5 = 1;
  7785                           	bcf	status, 5	;RP0=0, select bank0
  7786  07D1  1283               	bcf	status, 6	;RP1=0, select bank0
  7787  07D2  1303               	bsf	(8),5	;volatile
  7788  07D3  1688               	line	158
  7789                           	
  7790                           l3700:	
  7791  07D4                     ;lcd.c: 158:     lcd_inst( 0x20|0x00|0x08 );
  7792                           	movlw	low(028h)
  7793  07D4  3028               	fcall	_lcd_inst
  7794  07D5  120A  158A  2756  120A  118A  	line	159
  7795                           	
  7796                           l3702:	
  7797  07DA                     ;lcd.c: 159:     lcd_inst( 0x08|0x04|0x00|0x00 );
  7798                           	movlw	low(0Ch)
  7799  07DA  300C               	fcall	_lcd_inst
  7800  07DB  120A  158A  2756  120A  118A  	line	160
  7801                           	
  7802                           l3704:	
  7803  07E0                     ;lcd.c: 160:     lcd_inst( 0x01 );
  7804                           	movlw	low(01h)
  7805  07E0  3001               	fcall	_lcd_inst
  7806  07E1  120A  158A  2756  120A  118A  	line	161
  7807                           	
  7808                           l3706:	
  7809  07E6                     ;lcd.c: 161:     lcd_inst( 0x02 );
  7810                           	movlw	low(02h)
  7811  07E6  3002               	fcall	_lcd_inst
  7812  07E7  120A  158A  2756  120A  118A  	line	162
  7813                           ;lcd.c: 162:     _delay((unsigned long)((100)*(20000000/4000.0)));
  7814                           	opt asmopt_push
  7815                           opt asmopt_off
  7816                           movlw  3
  7817  07EC  3003               	bsf	status, 5	;RP0=1, select bank1
  7818  07ED  1683               	bcf	status, 6	;RP1=0, select bank1
  7819  07EE  1303               movwf	((??_lcd_init+0)^080h+0+2),f
  7820  07EF  00A5               movlw	138
  7821  07F0  308A               movwf	((??_lcd_init+0)^080h+0+1),f
  7822  07F1  00A4               	movlw	85
  7823  07F2  3055               movwf	((??_lcd_init+0)^080h+0),f
  7824  07F3  00A3               	u4467:
  7825  07F4                     decfsz	((??_lcd_init+0)^080h+0),f
  7826  07F4  0BA3               	goto	u4467
  7827  07F5  2FF4               	decfsz	((??_lcd_init+0)^080h+0+1),f
  7828  07F6  0BA4               	goto	u4467
  7829  07F7  2FF4               	decfsz	((??_lcd_init+0)^080h+0+2),f
  7830  07F8  0BA5               	goto	u4467
  7831  07F9  2FF4               opt asmopt_pop
  7832                           
  7833                           	line	163
  7834                           	
  7835                           l113:	
  7836  07FA                     	return
  7837  07FA  0008               	opt stack 0
  7838                           GLOBAL	__end_of_lcd_init
  7839                           	__end_of_lcd_init:
  7840  07FB                     	signat	_lcd_init,89
  7841                           	global	_lcd_clr
  7842                           
  7843 ;; *************** function _lcd_clr *****************
  7844 ;; Defined at:
  7845 ;;		line 166 in file "lcd.c"
  7846 ;; Parameters:    Size  Location     Type
  7847 ;;		None
  7848 ;; Auto vars:     Size  Location     Type
  7849 ;;		None
  7850 ;; Return value:  Size  Location     Type
  7851 ;;                  1    wreg      void 
  7852 ;; Registers used:
  7853 ;;		wreg, status,2, status,0, pclath, cstack
  7854 ;; Tracked objects:
  7855 ;;		On entry : 0/0
  7856 ;;		On exit  : 0/0
  7857 ;;		Unchanged: 0/0
  7858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7859 ;;      Params:         0       0       0       0       0
  7860 ;;      Locals:         0       0       0       0       0
  7861 ;;      Temps:          0       0       0       0       0
  7862 ;;      Totals:         0       0       0       0       0
  7863 ;;Total ram usage:        0 bytes
  7864 ;; Hardware stack levels used:    1
  7865 ;; Hardware stack levels required when called:    3
  7866 ;; This function calls:
  7867 ;;		_lcd_inst
  7868 ;; This function is called by:
  7869 ;;		_main
  7870 ;; This function uses a non-reentrant model
  7871 ;;
  7872                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  7873                           	line	166
  7874                           global __ptext21
  7875                           __ptext21:	;psect for function _lcd_clr
  7876  17CC                     psect	text21
  7877                           	file	"lcd.c"
  7878                           	line	166
  7879                           	global	__size_of_lcd_clr
  7880                           	__size_of_lcd_clr	equ	__end_of_lcd_clr-_lcd_clr
  7881  0007                     	
  7882                           _lcd_clr:	
  7883  17CC                     ;incstack = 0
  7884                           	opt	stack 4
  7885                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  7886                           	line	168
  7887                           	
  7888                           l3766:	
  7889  17CC                     ;lcd.c: 168:     lcd_inst(0x01);
  7890                           	movlw	low(01h)
  7891  17CC  3001               	fcall	_lcd_inst
  7892  17CD  120A  158A  2756  160A  118A  	line	169
  7893                           	
  7894                           l116:	
  7895  17D2                     	return
  7896  17D2  0008               	opt stack 0
  7897                           GLOBAL	__end_of_lcd_clr
  7898                           	__end_of_lcd_clr:
  7899  17D3                     	signat	_lcd_clr,89
  7900                           	global	_lcd_inst
  7901                           
  7902 ;; *************** function _lcd_inst *****************
  7903 ;; Defined at:
  7904 ;;		line 70 in file "lcd.c"
  7905 ;; Parameters:    Size  Location     Type
  7906 ;;  i               1    wreg     unsigned char 
  7907 ;; Auto vars:     Size  Location     Type
  7908 ;;  i               1    2[BANK1 ] unsigned char 
  7909 ;; Return value:  Size  Location     Type
  7910 ;;                  1    wreg      void 
  7911 ;; Registers used:
  7912 ;;		wreg, status,2, status,0
  7913 ;; Tracked objects:
  7914 ;;		On entry : 0/0
  7915 ;;		On exit  : 0/0
  7916 ;;		Unchanged: 0/0
  7917 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7918 ;;      Params:         0       0       0       0       0
  7919 ;;      Locals:         0       0       1       0       0
  7920 ;;      Temps:          0       0       2       0       0
  7921 ;;      Totals:         0       0       3       0       0
  7922 ;;Total ram usage:        3 bytes
  7923 ;; Hardware stack levels used:    1
  7924 ;; Hardware stack levels required when called:    2
  7925 ;; This function calls:
  7926 ;;		Nothing
  7927 ;; This function is called by:
  7928 ;;		_lcd_lincol
  7929 ;;		_lcd_init
  7930 ;;		_lcd_clr
  7931 ;; This function uses a non-reentrant model
  7932 ;;
  7933                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  7934                           	line	70
  7935                           global __ptext22
  7936                           __ptext22:	;psect for function _lcd_inst
  7937  0F56                     psect	text22
  7938                           	file	"lcd.c"
  7939                           	line	70
  7940                           	global	__size_of_lcd_inst
  7941                           	__size_of_lcd_inst	equ	__end_of_lcd_inst-_lcd_inst
  7942  00AA                     	
  7943                           _lcd_inst:	
  7944  0F56                     ;incstack = 0
  7945                           	opt	stack 3
  7946                           ; Regs used in _lcd_inst: [wreg+status,2+status,0]
  7947                           ;lcd_inst@i stored from wreg
  7948                           	bsf	status, 5	;RP0=1, select bank1
  7949  0F56  1683               	bcf	status, 6	;RP1=0, select bank1
  7950  0F57  1303               	movwf	(lcd_inst@i)^080h
  7951  0F58  00A2               	line	72
  7952                           	
  7953                           l3348:	
  7954  0F59                     ;lcd.c: 70: void lcd_inst (unsigned char i);lcd.c: 71: {;lcd.c: 72:     PORTDbits.RD4 = 
                                 0;
  7955                           	bcf	status, 5	;RP0=0, select bank0
  7956  0F59  1283               	bcf	status, 6	;RP1=0, select bank0
  7957  0F5A  1303               	bcf	(8),4	;volatile
  7958  0F5B  1208               	line	73
  7959                           	
  7960                           l3350:	
  7961  0F5C                     ;lcd.c: 73:     PORTD = ((PORTD & 0xF0)|(i>>4 & 0x0F));
  7962                           	bsf	status, 5	;RP0=1, select bank1
  7963  0F5C  1683               	bcf	status, 6	;RP1=0, select bank1
  7964  0F5D  1303               	movf	(lcd_inst@i)^080h,w
  7965  0F5E  0822               	movwf	(??_lcd_inst+0)^080h+0
  7966  0F5F  00A0               	movlw	04h
  7967  0F60  3004               u2545:
  7968  0F61                     	clrc
  7969  0F61  1003               	rrf	(??_lcd_inst+0)^080h+0,f
  7970  0F62  0CA0               	addlw	-1
  7971  0F63  3EFF               	skipz
  7972  0F64  1D03               	goto	u2545
  7973  0F65  2F61               	movlw	low(0Fh)
  7974  0F66  300F               	andwf	0+(??_lcd_inst+0)^080h+0,w
  7975  0F67  0520               	movwf	(??_lcd_inst+1)^080h+0
  7976  0F68  00A1               	bcf	status, 5	;RP0=0, select bank0
  7977  0F69  1283               	bcf	status, 6	;RP1=0, select bank0
  7978  0F6A  1303               	movf	(8),w	;volatile
  7979  0F6B  0808               	andlw	0F0h
  7980  0F6C  39F0               	bsf	status, 5	;RP0=1, select bank1
  7981  0F6D  1683               	bcf	status, 6	;RP1=0, select bank1
  7982  0F6E  1303               	iorwf	0+(??_lcd_inst+1)^080h+0,w
  7983  0F6F  0421               	bcf	status, 5	;RP0=0, select bank0
  7984  0F70  1283               	bcf	status, 6	;RP1=0, select bank0
  7985  0F71  1303               	movwf	(8)	;volatile
  7986  0F72  0088               	line	75
  7987                           	
  7988                           l3352:	
  7989  0F73                     ;lcd.c: 75:     PORTDbits.RD5 =0;
  7990                           	bcf	(8),5	;volatile
  7991  0F73  1288               	line	76
  7992                           ;lcd.c: 76:     if ( i == 0x01 || i == 0x02 )
  7993                           	bsf	status, 5	;RP0=1, select bank1
  7994  0F74  1683               	bcf	status, 6	;RP1=0, select bank1
  7995  0F75  1303               		decf	((lcd_inst@i)^080h),w
  7996  0F76  0322               	btfsc	status,2
  7997  0F77  1903               	goto	u2551
  7998  0F78  2F7A               	goto	u2550
  7999  0F79  2F7B               u2551:
  8000  0F7A                     	goto	l3356
  8001  0F7A  2F82               u2550:
  8002  0F7B                     	
  8003                           l3354:	
  8004  0F7B                     		movlw	2
  8005  0F7B  3002               	xorwf	((lcd_inst@i)^080h),w
  8006  0F7C  0622               	btfss	status,2
  8007  0F7D  1D03               	goto	u2561
  8008  0F7E  2F80               	goto	u2560
  8009  0F7F  2F81               u2561:
  8010  0F80                     	goto	l3358
  8011  0F80  2F8D               u2560:
  8012  0F81                     	goto	l3356
  8013  0F81  2F82               	
  8014                           l97:	
  8015  0F82                     	line	77
  8016                           	
  8017                           l3356:	
  8018  0F82                     ;lcd.c: 77:         _delay((unsigned long)((2)*(20000000/4000.0)));
  8019                           	opt asmopt_push
  8020                           opt asmopt_off
  8021                           movlw	13
  8022  0F82  300D               	bsf	status, 5	;RP0=1, select bank1
  8023  0F83  1683               	bcf	status, 6	;RP1=0, select bank1
  8024  0F84  1303               movwf	((??_lcd_inst+0)^080h+0+1),f
  8025  0F85  00A1               	movlw	251
  8026  0F86  30FB               movwf	((??_lcd_inst+0)^080h+0),f
  8027  0F87  00A0               	u4477:
  8028  0F88                     decfsz	((??_lcd_inst+0)^080h+0),f
  8029  0F88  0BA0               	goto	u4477
  8030  0F89  2F88               	decfsz	((??_lcd_inst+0)^080h+0+1),f
  8031  0F8A  0BA1               	goto	u4477
  8032  0F8B  2F88               opt asmopt_pop
  8033                           
  8034                           	goto	l3360
  8035  0F8C  2F95               	line	78
  8036                           ;lcd.c: 78:     else
  8037                           	
  8038                           l95:	
  8039  0F8D                     	line	79
  8040                           	
  8041                           l3358:	
  8042  0F8D                     ;lcd.c: 79:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  8043                           	opt asmopt_push
  8044                           opt asmopt_off
  8045                           	movlw	65
  8046  0F8D  3041               	bsf	status, 5	;RP0=1, select bank1
  8047  0F8E  1683               	bcf	status, 6	;RP1=0, select bank1
  8048  0F8F  1303               movwf	((??_lcd_inst+0)^080h+0),f
  8049  0F90  00A0               	u4487:
  8050  0F91                     decfsz	(??_lcd_inst+0)^080h+0,f
  8051  0F91  0BA0               	goto	u4487
  8052  0F92  2F91               	nop2
  8053  0F93  2F94               opt asmopt_pop
  8054                           
  8055                           	goto	l3360
  8056  0F94  2F95               	
  8057                           l98:	
  8058  0F95                     	line	80
  8059                           	
  8060                           l3360:	
  8061  0F95                     ;lcd.c: 80:     PORTDbits.RD5 = 1;
  8062                           	bcf	status, 5	;RP0=0, select bank0
  8063  0F95  1283               	bcf	status, 6	;RP1=0, select bank0
  8064  0F96  1303               	bsf	(8),5	;volatile
  8065  0F97  1688               	line	82
  8066                           	
  8067                           l3362:	
  8068  0F98                     ;lcd.c: 82:     if ( (i & 0xF0) == (0x20 | 0x00) )
  8069                           	movlw	low(0F0h)
  8070  0F98  30F0               	bsf	status, 5	;RP0=1, select bank1
  8071  0F99  1683               	bcf	status, 6	;RP1=0, select bank1
  8072  0F9A  1303               	andwf	(lcd_inst@i)^080h,w
  8073  0F9B  0522               	movwf	(??_lcd_inst+0)^080h+0
  8074  0F9C  00A0               		movlw	32
  8075  0F9D  3020               	xorwf	((??_lcd_inst+0)^080h+0),w
  8076  0F9E  0620               	btfss	status,2
  8077  0F9F  1D03               	goto	u2571
  8078  0FA0  2FA2               	goto	u2570
  8079  0FA1  2FA3               u2571:
  8080  0FA2                     	goto	l3374
  8081  0FA2  2FC9               u2570:
  8082  0FA3                     	line	84
  8083                           	
  8084                           l3364:	
  8085  0FA3                     ;lcd.c: 83:     {;lcd.c: 84:         PORTDbits.RD4 = 0;
  8086                           	bcf	status, 5	;RP0=0, select bank0
  8087  0FA3  1283               	bcf	status, 6	;RP1=0, select bank0
  8088  0FA4  1303               	bcf	(8),4	;volatile
  8089  0FA5  1208               	line	85
  8090                           	
  8091                           l3366:	
  8092  0FA6                     ;lcd.c: 85:         PORTD = ((PORTD & 0xF0)|(i>>4 & 0x0F));
  8093                           	bsf	status, 5	;RP0=1, select bank1
  8094  0FA6  1683               	bcf	status, 6	;RP1=0, select bank1
  8095  0FA7  1303               	movf	(lcd_inst@i)^080h,w
  8096  0FA8  0822               	movwf	(??_lcd_inst+0)^080h+0
  8097  0FA9  00A0               	movlw	04h
  8098  0FAA  3004               u2585:
  8099  0FAB                     	clrc
  8100  0FAB  1003               	rrf	(??_lcd_inst+0)^080h+0,f
  8101  0FAC  0CA0               	addlw	-1
  8102  0FAD  3EFF               	skipz
  8103  0FAE  1D03               	goto	u2585
  8104  0FAF  2FAB               	movlw	low(0Fh)
  8105  0FB0  300F               	andwf	0+(??_lcd_inst+0)^080h+0,w
  8106  0FB1  0520               	movwf	(??_lcd_inst+1)^080h+0
  8107  0FB2  00A1               	bcf	status, 5	;RP0=0, select bank0
  8108  0FB3  1283               	bcf	status, 6	;RP1=0, select bank0
  8109  0FB4  1303               	movf	(8),w	;volatile
  8110  0FB5  0808               	andlw	0F0h
  8111  0FB6  39F0               	bsf	status, 5	;RP0=1, select bank1
  8112  0FB7  1683               	bcf	status, 6	;RP1=0, select bank1
  8113  0FB8  1303               	iorwf	0+(??_lcd_inst+1)^080h+0,w
  8114  0FB9  0421               	bcf	status, 5	;RP0=0, select bank0
  8115  0FBA  1283               	bcf	status, 6	;RP1=0, select bank0
  8116  0FBB  1303               	movwf	(8)	;volatile
  8117  0FBC  0088               	line	86
  8118                           	
  8119                           l3368:	
  8120  0FBD                     ;lcd.c: 86:         PORTDbits.RD5 = 0;
  8121                           	bcf	(8),5	;volatile
  8122  0FBD  1288               	line	87
  8123                           	
  8124                           l3370:	
  8125  0FBE                     ;lcd.c: 87:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  8126                           	opt asmopt_push
  8127                           opt asmopt_off
  8128                           	movlw	65
  8129  0FBE  3041               	bsf	status, 5	;RP0=1, select bank1
  8130  0FBF  1683               	bcf	status, 6	;RP1=0, select bank1
  8131  0FC0  1303               movwf	((??_lcd_inst+0)^080h+0),f
  8132  0FC1  00A0               	u4497:
  8133  0FC2                     decfsz	(??_lcd_inst+0)^080h+0,f
  8134  0FC2  0BA0               	goto	u4497
  8135  0FC3  2FC2               	nop2
  8136  0FC4  2FC5               opt asmopt_pop
  8137                           
  8138                           	line	88
  8139                           	
  8140                           l3372:	
  8141  0FC5                     ;lcd.c: 88:         PORTDbits.RD5 = 1;
  8142                           	bcf	status, 5	;RP0=0, select bank0
  8143  0FC5  1283               	bcf	status, 6	;RP1=0, select bank0
  8144  0FC6  1303               	bsf	(8),5	;volatile
  8145  0FC7  1688               	goto	l3374
  8146  0FC8  2FC9               	line	89
  8147                           ;lcd.c: 89:     }
  8148                           	
  8149                           l99:	
  8150  0FC9                     	line	91
  8151                           	
  8152                           l3374:	
  8153  0FC9                     ;lcd.c: 91:     PORTDbits.RD4 = 0;
  8154                           	bcf	status, 5	;RP0=0, select bank0
  8155  0FC9  1283               	bcf	(8),4	;volatile
  8156  0FCA  1208               	line	92
  8157                           	
  8158                           l3376:	
  8159  0FCB                     ;lcd.c: 92:     PORTD = ((PORTD & 0xF0)|(i & 0x0F));
  8160                           	movlw	low(0Fh)
  8161  0FCB  300F               	bsf	status, 5	;RP0=1, select bank1
  8162  0FCC  1683               	bcf	status, 6	;RP1=0, select bank1
  8163  0FCD  1303               	andwf	(lcd_inst@i)^080h,w
  8164  0FCE  0522               	movwf	(??_lcd_inst+0)^080h+0
  8165  0FCF  00A0               	bcf	status, 5	;RP0=0, select bank0
  8166  0FD0  1283               	bcf	status, 6	;RP1=0, select bank0
  8167  0FD1  1303               	movf	(8),w	;volatile
  8168  0FD2  0808               	andlw	0F0h
  8169  0FD3  39F0               	bsf	status, 5	;RP0=1, select bank1
  8170  0FD4  1683               	bcf	status, 6	;RP1=0, select bank1
  8171  0FD5  1303               	iorwf	0+(??_lcd_inst+0)^080h+0,w
  8172  0FD6  0420               	bcf	status, 5	;RP0=0, select bank0
  8173  0FD7  1283               	bcf	status, 6	;RP1=0, select bank0
  8174  0FD8  1303               	movwf	(8)	;volatile
  8175  0FD9  0088               	line	93
  8176                           	
  8177                           l3378:	
  8178  0FDA                     ;lcd.c: 93:     PORTDbits.RD5 = 0;
  8179                           	bcf	(8),5	;volatile
  8180  0FDA  1288               	line	94
  8181                           	
  8182                           l3380:	
  8183  0FDB                     ;lcd.c: 94:     if ( i==0x01 || i == 0x02 )
  8184                           	bsf	status, 5	;RP0=1, select bank1
  8185  0FDB  1683               	bcf	status, 6	;RP1=0, select bank1
  8186  0FDC  1303               		decf	((lcd_inst@i)^080h),w
  8187  0FDD  0322               	btfsc	status,2
  8188  0FDE  1903               	goto	u2591
  8189  0FDF  2FE1               	goto	u2590
  8190  0FE0  2FE2               u2591:
  8191  0FE1                     	goto	l3384
  8192  0FE1  2FE9               u2590:
  8193  0FE2                     	
  8194                           l3382:	
  8195  0FE2                     		movlw	2
  8196  0FE2  3002               	xorwf	((lcd_inst@i)^080h),w
  8197  0FE3  0622               	btfss	status,2
  8198  0FE4  1D03               	goto	u2601
  8199  0FE5  2FE7               	goto	u2600
  8200  0FE6  2FE8               u2601:
  8201  0FE7                     	goto	l3386
  8202  0FE7  2FF4               u2600:
  8203  0FE8                     	goto	l3384
  8204  0FE8  2FE9               	
  8205                           l102:	
  8206  0FE9                     	line	95
  8207                           	
  8208                           l3384:	
  8209  0FE9                     ;lcd.c: 95:         _delay((unsigned long)((2)*(20000000/4000.0)));
  8210                           	opt asmopt_push
  8211                           opt asmopt_off
  8212                           movlw	13
  8213  0FE9  300D               	bsf	status, 5	;RP0=1, select bank1
  8214  0FEA  1683               	bcf	status, 6	;RP1=0, select bank1
  8215  0FEB  1303               movwf	((??_lcd_inst+0)^080h+0+1),f
  8216  0FEC  00A1               	movlw	251
  8217  0FED  30FB               movwf	((??_lcd_inst+0)^080h+0),f
  8218  0FEE  00A0               	u4507:
  8219  0FEF                     decfsz	((??_lcd_inst+0)^080h+0),f
  8220  0FEF  0BA0               	goto	u4507
  8221  0FF0  2FEF               	decfsz	((??_lcd_inst+0)^080h+0+1),f
  8222  0FF1  0BA1               	goto	u4507
  8223  0FF2  2FEF               opt asmopt_pop
  8224                           
  8225                           	goto	l3388
  8226  0FF3  2FFC               	line	96
  8227                           ;lcd.c: 96:     else
  8228                           	
  8229                           l100:	
  8230  0FF4                     	line	97
  8231                           	
  8232                           l3386:	
  8233  0FF4                     ;lcd.c: 97:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  8234                           	opt asmopt_push
  8235                           opt asmopt_off
  8236                           	movlw	65
  8237  0FF4  3041               	bsf	status, 5	;RP0=1, select bank1
  8238  0FF5  1683               	bcf	status, 6	;RP1=0, select bank1
  8239  0FF6  1303               movwf	((??_lcd_inst+0)^080h+0),f
  8240  0FF7  00A0               	u4517:
  8241  0FF8                     decfsz	(??_lcd_inst+0)^080h+0,f
  8242  0FF8  0BA0               	goto	u4517
  8243  0FF9  2FF8               	nop2
  8244  0FFA  2FFB               opt asmopt_pop
  8245                           
  8246                           	goto	l3388
  8247  0FFB  2FFC               	
  8248                           l103:	
  8249  0FFC                     	line	98
  8250                           	
  8251                           l3388:	
  8252  0FFC                     ;lcd.c: 98:     PORTDbits.RD5 = 1;
  8253                           	bcf	status, 5	;RP0=0, select bank0
  8254  0FFC  1283               	bcf	status, 6	;RP1=0, select bank0
  8255  0FFD  1303               	bsf	(8),5	;volatile
  8256  0FFE  1688               	line	99
  8257                           	
  8258                           l104:	
  8259  0FFF                     	return
  8260  0FFF  0008               	opt stack 0
  8261                           GLOBAL	__end_of_lcd_inst
  8262                           	__end_of_lcd_inst:
  8263  1000                     	signat	_lcd_inst,4217
  8264                           	global	_hex2Ascii
  8265                           
  8266 ;; *************** function _hex2Ascii *****************
  8267 ;; Defined at:
  8268 ;;		line 762 in file "rfid.c"
  8269 ;; Parameters:    Size  Location     Type
  8270 ;;  strIn           2    0[BANK1 ] PTR unsigned char 
  8271 ;;		 -> UID(7), main@UID(7), 
  8272 ;;  strOut          1    2[BANK1 ] PTR unsigned char 
  8273 ;;		 -> uidAsci(13), main@uidAsci(13), 
  8274 ;;  cntDig          1    3[BANK1 ] unsigned char 
  8275 ;; Auto vars:     Size  Location     Type
  8276 ;;  dez             1   11[BANK1 ] unsigned char 
  8277 ;;  uni             1   10[BANK1 ] unsigned char 
  8278 ;;  a               1    9[BANK1 ] unsigned char 
  8279 ;;  b               1    8[BANK1 ] unsigned char 
  8280 ;; Return value:  Size  Location     Type
  8281 ;;                  1    wreg      void 
  8282 ;; Registers used:
  8283 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8284 ;; Tracked objects:
  8285 ;;		On entry : 0/0
  8286 ;;		On exit  : 0/0
  8287 ;;		Unchanged: 0/0
  8288 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8289 ;;      Params:         0       0       4       0       0
  8290 ;;      Locals:         0       0       4       0       0
  8291 ;;      Temps:          0       0       4       0       0
  8292 ;;      Totals:         0       0      12       0       0
  8293 ;;Total ram usage:       12 bytes
  8294 ;; Hardware stack levels used:    1
  8295 ;; Hardware stack levels required when called:    2
  8296 ;; This function calls:
  8297 ;;		Nothing
  8298 ;; This function is called by:
  8299 ;;		_main
  8300 ;;		_rfid_display
  8301 ;; This function uses a non-reentrant model
  8302 ;;
  8303                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8304                           	file	"rfid.c"
  8305                           	line	762
  8306                           global __ptext23
  8307                           __ptext23:	;psect for function _hex2Ascii
  8308  0D88                     psect	text23
  8309                           	file	"rfid.c"
  8310                           	line	762
  8311                           	global	__size_of_hex2Ascii
  8312                           	__size_of_hex2Ascii	equ	__end_of_hex2Ascii-_hex2Ascii
  8313  008D                     	
  8314                           _hex2Ascii:	
  8315  0D88                     ;incstack = 0
  8316                           	opt	stack 5
  8317                           ; Regs used in _hex2Ascii: [wreg-fsr0h+status,2+status,0]
  8318                           	line	765
  8319                           	
  8320                           l4610:	
  8321  0D88                     ;rfid.c: 762: void hex2Ascii(char *strIn, char *strOut, char cntDig);rfid.c: 763: {;rfid
                                 .c: 764:  char a,b,uni,dez;;rfid.c: 765:  for(a=0;a<cntDig;a++)
  8322                           	bsf	status, 5	;RP0=1, select bank1
  8323  0D88  1683               	bcf	status, 6	;RP1=0, select bank1
  8324  0D89  1303               	clrf	(hex2Ascii@a)^080h
  8325  0D8A  01A9               	goto	l4642
  8326  0D8B  2E0D               	
  8327                           l399:	
  8328  0D8C                     	line	767
  8329                           	
  8330                           l4612:	
  8331  0D8C                     ;rfid.c: 766:  {;rfid.c: 767:   b=a*2;
  8332                           	movf	(hex2Ascii@a)^080h,w
  8333  0D8C  0829               	movwf	(??_hex2Ascii+0)^080h+0
  8334  0D8D  00A4               	addwf	(??_hex2Ascii+0)^080h+0,w
  8335  0D8E  0724               	movwf	(??_hex2Ascii+1)^080h+0
  8336  0D8F  00A5               	movf	(??_hex2Ascii+1)^080h+0,w
  8337  0D90  0825               	movwf	(hex2Ascii@b)^080h
  8338  0D91  00A8               	line	768
  8339                           	
  8340                           l4614:	
  8341  0D92                     ;rfid.c: 768:   uni= strIn[a] & 0x0F;
  8342                           	movf	(hex2Ascii@a)^080h,w
  8343  0D92  0829               	addwf	(hex2Ascii@strIn)^080h,w
  8344  0D93  0720               	movwf	(??_hex2Ascii+0)^080h+0
  8345  0D94  00A4               	movf	(hex2Ascii@strIn+1)^080h,w
  8346  0D95  0821               	skipnc
  8347  0D96  1803               	addlw	1
  8348  0D97  3E01               	movwf	1+((??_hex2Ascii+0)^080h+0)
  8349  0D98  00A5               	movf	0+(??_hex2Ascii+0)^080h+0,w
  8350  0D99  0824               	movwf	fsr0
  8351  0D9A  0084               	bsf	status,7
  8352  0D9B  1783               	btfss	1+(??_hex2Ascii+0)^080h+0,0
  8353  0D9C  1C25               	bcf	status,7
  8354  0D9D  1383               	movf	indf,w
  8355  0D9E  0800               	andlw	0Fh
  8356  0D9F  390F               	movwf	(??_hex2Ascii+2)^080h+0
  8357  0DA0  00A6               	movf	(??_hex2Ascii+2)^080h+0,w
  8358  0DA1  0826               	movwf	(hex2Ascii@uni)^080h
  8359  0DA2  00AA               	line	769
  8360                           	
  8361                           l4616:	
  8362  0DA3                     ;rfid.c: 769:   dez=(strIn[a] & 0xF0)>>4;
  8363                           	movf	(hex2Ascii@a)^080h,w
  8364  0DA3  0829               	addwf	(hex2Ascii@strIn)^080h,w
  8365  0DA4  0720               	movwf	(??_hex2Ascii+0)^080h+0
  8366  0DA5  00A4               	movf	(hex2Ascii@strIn+1)^080h,w
  8367  0DA6  0821               	skipnc
  8368  0DA7  1803               	addlw	1
  8369  0DA8  3E01               	movwf	1+((??_hex2Ascii+0)^080h+0)
  8370  0DA9  00A5               	movf	0+(??_hex2Ascii+0)^080h+0,w
  8371  0DAA  0824               	movwf	fsr0
  8372  0DAB  0084               	bsf	status,7
  8373  0DAC  1783               	btfss	1+(??_hex2Ascii+0)^080h+0,0
  8374  0DAD  1C25               	bcf	status,7
  8375  0DAE  1383               	movf	indf,w
  8376  0DAF  0800               	movwf	(??_hex2Ascii+2)^080h+0
  8377  0DB0  00A6               	movlw	04h
  8378  0DB1  3004               u4095:
  8379  0DB2                     	clrc
  8380  0DB2  1003               	rrf	(??_hex2Ascii+2)^080h+0,f
  8381  0DB3  0CA6               	addlw	-1
  8382  0DB4  3EFF               	skipz
  8383  0DB5  1D03               	goto	u4095
  8384  0DB6  2DB2               	movf	0+(??_hex2Ascii+2)^080h+0,w
  8385  0DB7  0826               	andlw	0Fh
  8386  0DB8  390F               	movwf	(??_hex2Ascii+3)^080h+0
  8387  0DB9  00A7               	movf	(??_hex2Ascii+3)^080h+0,w
  8388  0DBA  0827               	movwf	(hex2Ascii@dez)^080h
  8389  0DBB  00AB               	line	770
  8390                           	
  8391                           l4618:	
  8392  0DBC                     ;rfid.c: 770:   if (uni <10) uni += '0';
  8393                           	movlw	low(0Ah)
  8394  0DBC  300A               	subwf	(hex2Ascii@uni)^080h,w
  8395  0DBD  022A               	skipnc
  8396  0DBE  1803               	goto	u4101
  8397  0DBF  2DC1               	goto	u4100
  8398  0DC0  2DC2               u4101:
  8399  0DC1                     	goto	l4622
  8400  0DC1  2DC7               u4100:
  8401  0DC2                     	
  8402                           l4620:	
  8403  0DC2                     	movlw	low(030h)
  8404  0DC2  3030               	movwf	(??_hex2Ascii+0)^080h+0
  8405  0DC3  00A4               	movf	(??_hex2Ascii+0)^080h+0,w
  8406  0DC4  0824               	addwf	(hex2Ascii@uni)^080h,f
  8407  0DC5  07AA               	goto	l4622
  8408  0DC6  2DC7               	
  8409                           l400:	
  8410  0DC7                     	line	771
  8411                           	
  8412                           l4622:	
  8413  0DC7                     ;rfid.c: 771:   if (uni > 9 && uni < 16) uni += 0x37;
  8414                           	movlw	low(0Ah)
  8415  0DC7  300A               	subwf	(hex2Ascii@uni)^080h,w
  8416  0DC8  022A               	skipc
  8417  0DC9  1C03               	goto	u4111
  8418  0DCA  2DCC               	goto	u4110
  8419  0DCB  2DCD               u4111:
  8420  0DCC                     	goto	l4628
  8421  0DCC  2DD8               u4110:
  8422  0DCD                     	
  8423                           l4624:	
  8424  0DCD                     	movlw	low(010h)
  8425  0DCD  3010               	subwf	(hex2Ascii@uni)^080h,w
  8426  0DCE  022A               	skipnc
  8427  0DCF  1803               	goto	u4121
  8428  0DD0  2DD2               	goto	u4120
  8429  0DD1  2DD3               u4121:
  8430  0DD2                     	goto	l4628
  8431  0DD2  2DD8               u4120:
  8432  0DD3                     	
  8433                           l4626:	
  8434  0DD3                     	movlw	low(037h)
  8435  0DD3  3037               	movwf	(??_hex2Ascii+0)^080h+0
  8436  0DD4  00A4               	movf	(??_hex2Ascii+0)^080h+0,w
  8437  0DD5  0824               	addwf	(hex2Ascii@uni)^080h,f
  8438  0DD6  07AA               	goto	l4628
  8439  0DD7  2DD8               	
  8440                           l401:	
  8441  0DD8                     	line	772
  8442                           	
  8443                           l4628:	
  8444  0DD8                     ;rfid.c: 772:   if (dez <10) dez += '0';
  8445                           	movlw	low(0Ah)
  8446  0DD8  300A               	subwf	(hex2Ascii@dez)^080h,w
  8447  0DD9  022B               	skipnc
  8448  0DDA  1803               	goto	u4131
  8449  0DDB  2DDD               	goto	u4130
  8450  0DDC  2DDE               u4131:
  8451  0DDD                     	goto	l4632
  8452  0DDD  2DE3               u4130:
  8453  0DDE                     	
  8454                           l4630:	
  8455  0DDE                     	movlw	low(030h)
  8456  0DDE  3030               	movwf	(??_hex2Ascii+0)^080h+0
  8457  0DDF  00A4               	movf	(??_hex2Ascii+0)^080h+0,w
  8458  0DE0  0824               	addwf	(hex2Ascii@dez)^080h,f
  8459  0DE1  07AB               	goto	l4632
  8460  0DE2  2DE3               	
  8461                           l402:	
  8462  0DE3                     	line	773
  8463                           	
  8464                           l4632:	
  8465  0DE3                     ;rfid.c: 773:   if (dez > 9 && dez < 16) dez += 0x37;
  8466                           	movlw	low(0Ah)
  8467  0DE3  300A               	subwf	(hex2Ascii@dez)^080h,w
  8468  0DE4  022B               	skipc
  8469  0DE5  1C03               	goto	u4141
  8470  0DE6  2DE8               	goto	u4140
  8471  0DE7  2DE9               u4141:
  8472  0DE8                     	goto	l4638
  8473  0DE8  2DF4               u4140:
  8474  0DE9                     	
  8475                           l4634:	
  8476  0DE9                     	movlw	low(010h)
  8477  0DE9  3010               	subwf	(hex2Ascii@dez)^080h,w
  8478  0DEA  022B               	skipnc
  8479  0DEB  1803               	goto	u4151
  8480  0DEC  2DEE               	goto	u4150
  8481  0DED  2DEF               u4151:
  8482  0DEE                     	goto	l4638
  8483  0DEE  2DF4               u4150:
  8484  0DEF                     	
  8485                           l4636:	
  8486  0DEF                     	movlw	low(037h)
  8487  0DEF  3037               	movwf	(??_hex2Ascii+0)^080h+0
  8488  0DF0  00A4               	movf	(??_hex2Ascii+0)^080h+0,w
  8489  0DF1  0824               	addwf	(hex2Ascii@dez)^080h,f
  8490  0DF2  07AB               	goto	l4638
  8491  0DF3  2DF4               	
  8492                           l403:	
  8493  0DF4                     	line	774
  8494                           	
  8495                           l4638:	
  8496  0DF4                     ;rfid.c: 774:   strOut[b]=dez;
  8497                           	movf	(hex2Ascii@dez)^080h,w
  8498  0DF4  082B               	movwf	(??_hex2Ascii+0)^080h+0
  8499  0DF5  00A4               	movf	(hex2Ascii@b)^080h,w
  8500  0DF6  0828               	addwf	(hex2Ascii@strOut)^080h,w
  8501  0DF7  0722               	movwf	(??_hex2Ascii+1)^080h+0
  8502  0DF8  00A5               	movf	0+(??_hex2Ascii+1)^080h+0,w
  8503  0DF9  0825               	movwf	fsr0
  8504  0DFA  0084               	movf	(??_hex2Ascii+0)^080h+0,w
  8505  0DFB  0824               	bsf	status, 7	;select IRP bank2
  8506  0DFC  1783               	movwf	indf
  8507  0DFD  0080               	line	775
  8508                           	
  8509                           l4640:	
  8510  0DFE                     ;rfid.c: 775:   strOut[b+1]=uni;
  8511                           	movf	(hex2Ascii@uni)^080h,w
  8512  0DFE  082A               	movwf	(??_hex2Ascii+0)^080h+0
  8513  0DFF  00A4               	movf	(hex2Ascii@b)^080h,w
  8514  0E00  0828               	addlw	01h
  8515  0E01  3E01               	addwf	(hex2Ascii@strOut)^080h,w
  8516  0E02  0722               	movwf	(??_hex2Ascii+1)^080h+0
  8517  0E03  00A5               	movf	0+(??_hex2Ascii+1)^080h+0,w
  8518  0E04  0825               	movwf	fsr0
  8519  0E05  0084               	movf	(??_hex2Ascii+0)^080h+0,w
  8520  0E06  0824               	movwf	indf
  8521  0E07  0080               	line	776
  8522                           ;rfid.c: 776:  }
  8523                           	movlw	low(01h)
  8524  0E08  3001               	movwf	(??_hex2Ascii+0)^080h+0
  8525  0E09  00A4               	movf	(??_hex2Ascii+0)^080h+0,w
  8526  0E0A  0824               	addwf	(hex2Ascii@a)^080h,f
  8527  0E0B  07A9               	goto	l4642
  8528  0E0C  2E0D               	
  8529                           l398:	
  8530  0E0D                     	
  8531                           l4642:	
  8532  0E0D                     	movf	(hex2Ascii@cntDig)^080h,w
  8533  0E0D  0823               	subwf	(hex2Ascii@a)^080h,w
  8534  0E0E  0229               	skipc
  8535  0E0F  1C03               	goto	u4161
  8536  0E10  2E12               	goto	u4160
  8537  0E11  2E13               u4161:
  8538  0E12                     	goto	l4612
  8539  0E12  2D8C               u4160:
  8540  0E13                     	goto	l405
  8541  0E13  2E14               	
  8542                           l404:	
  8543  0E14                     	line	777
  8544                           	
  8545                           l405:	
  8546  0E14                     	return
  8547  0E14  0008               	opt stack 0
  8548                           GLOBAL	__end_of_hex2Ascii
  8549                           	__end_of_hex2Ascii:
  8550  0E15                     	signat	_hex2Ascii,12409
  8551                           	global	_MFRC522_AntiColl
  8552                           
  8553 ;; *************** function _MFRC522_AntiColl *****************
  8554 ;; Defined at:
  8555 ;;		line 718 in file "rfid.c"
  8556 ;; Parameters:    Size  Location     Type
  8557 ;;  serNum          2   32[BANK1 ] PTR unsigned char 
  8558 ;;		 -> UID(7), main@UID(7), 
  8559 ;; Auto vars:     Size  Location     Type
  8560 ;;  i               1   42[BANK1 ] unsigned char 
  8561 ;;  _status         1   41[BANK1 ] unsigned char 
  8562 ;;  unLen           1   40[BANK1 ] unsigned char 
  8563 ;;  serNumCheck     1   39[BANK1 ] unsigned char 
  8564 ;; Return value:  Size  Location     Type
  8565 ;;                  1    wreg      unsigned char 
  8566 ;; Registers used:
  8567 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8568 ;; Tracked objects:
  8569 ;;		On entry : 0/0
  8570 ;;		On exit  : 0/0
  8571 ;;		Unchanged: 0/0
  8572 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8573 ;;      Params:         0       0       2       0       0
  8574 ;;      Locals:         0       0       4       0       0
  8575 ;;      Temps:          0       0       5       0       0
  8576 ;;      Totals:         0       0      11       0       0
  8577 ;;Total ram usage:       11 bytes
  8578 ;; Hardware stack levels used:    1
  8579 ;; Hardware stack levels required when called:    7
  8580 ;; This function calls:
  8581 ;;		_MFRC522_Clear_Bit
  8582 ;;		_MFRC522_ToCard
  8583 ;;		_MFRC522_Wr
  8584 ;; This function is called by:
  8585 ;;		_main
  8586 ;;		_rfid_read
  8587 ;; This function uses a non-reentrant model
  8588 ;;
  8589                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8590                           	line	718
  8591                           global __ptext24
  8592                           __ptext24:	;psect for function _MFRC522_AntiColl
  8593  0E15                     psect	text24
  8594                           	file	"rfid.c"
  8595                           	line	718
  8596                           	global	__size_of_MFRC522_AntiColl
  8597                           	__size_of_MFRC522_AntiColl	equ	__end_of_MFRC522_AntiColl-_MFRC522_AntiColl
  8598  009B                     	
  8599                           _MFRC522_AntiColl:	
  8600  0E15                     ;incstack = 0
  8601                           	opt	stack 0
  8602                           ; Regs used in _MFRC522_AntiColl: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8603                           	line	722
  8604                           	
  8605                           l4578:	
  8606  0E15                     ;rfid.c: 718: char MFRC522_AntiColl(char *serNum);rfid.c: 719: {;rfid.c: 720:  char _sta
                                 tus;;rfid.c: 721:  char i;;rfid.c: 722:  char serNumCheck = 0;
  8607                           	bsf	status, 5	;RP0=1, select bank1
  8608  0E15  1683               	bcf	status, 6	;RP1=0, select bank1
  8609  0E16  1303               	clrf	(MFRC522_AntiColl@serNumCheck)^080h
  8610  0E17  01C7               	line	725
  8611                           	
  8612                           l4580:	
  8613  0E18                     ;rfid.c: 723:  char unLen;;rfid.c: 725:  MFRC522_Wr(0x0D, 0x00);
  8614                           	clrf	(MFRC522_Wr@value)^080h
  8615  0E18  01A8               	movlw	low(0Dh)
  8616  0E19  300D               	fcall	_MFRC522_Wr
  8617  0E1A  120A  158A  2151  120A  158A  	line	727
  8618                           	
  8619                           l4582:	
  8620  0E1F                     ;rfid.c: 727:  serNum[0] = 0x93;
  8621                           	movlw	low(093h)
  8622  0E1F  3093               	bsf	status, 5	;RP0=1, select bank1
  8623  0E20  1683               	bcf	status, 6	;RP1=0, select bank1
  8624  0E21  1303               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8625  0E22  00C2               	movf	(MFRC522_AntiColl@serNum)^080h,w
  8626  0E23  0840               	movwf	fsr0
  8627  0E24  0084               	bsf	status,7
  8628  0E25  1783               	btfss	(MFRC522_AntiColl@serNum+1)^080h,0
  8629  0E26  1C41               	bcf	status,7
  8630  0E27  1383               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8631  0E28  0842               	movwf	indf
  8632  0E29  0080               	line	728
  8633                           	
  8634                           l4584:	
  8635  0E2A                     ;rfid.c: 728:  serNum[1] = 0x20;
  8636                           	movlw	low(020h)
  8637  0E2A  3020               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8638  0E2B  00C2               	movlw	low(01h)
  8639  0E2C  3001               	movwf	(??_MFRC522_AntiColl+1)^080h+0
  8640  0E2D  00C3               	movf	(??_MFRC522_AntiColl+1)^080h+0,w
  8641  0E2E  0843               	addwf	(MFRC522_AntiColl@serNum)^080h,w
  8642  0E2F  0740               	movwf	(??_MFRC522_AntiColl+3)^080h+0
  8643  0E30  00C5               	movf	(MFRC522_AntiColl@serNum+1)^080h,w
  8644  0E31  0841               	movwf	(??_MFRC522_AntiColl+2)^080h+0
  8645  0E32  00C4               	skipnc
  8646  0E33  1803               	incf	(??_MFRC522_AntiColl+2)^080h+0,f
  8647  0E34  0AC4               	btfsc	(??_MFRC522_AntiColl+1)^080h+0,7
  8648  0E35  1BC3               	decf	(??_MFRC522_AntiColl+2)^080h+0,f
  8649  0E36  03C4               	movf	(??_MFRC522_AntiColl+2)^080h+0,w
  8650  0E37  0844               	movwf	((??_MFRC522_AntiColl+3)^080h+0)+1
  8651  0E38  00C6               	movf	0+(??_MFRC522_AntiColl+3)^080h+0,w
  8652  0E39  0845               	movwf	fsr0
  8653  0E3A  0084               	bsf	status,7
  8654  0E3B  1783               	btfss	1+(??_MFRC522_AntiColl+3)^080h+0,0
  8655  0E3C  1C46               	bcf	status,7
  8656  0E3D  1383               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8657  0E3E  0842               	movwf	indf
  8658  0E3F  0080               	line	729
  8659                           	
  8660                           l4586:	
  8661  0E40                     ;rfid.c: 729:  MFRC522_Clear_Bit(0x08, 0x08);
  8662                           	movlw	low(08h)
  8663  0E40  3008               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8664  0E41  00C2               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8665  0E42  0842               	movwf	(MFRC522_Clear_Bit@mask)^080h
  8666  0E43  00AB               	movlw	low(08h)
  8667  0E44  3008               	fcall	_MFRC522_Clear_Bit
  8668  0E45  120A  158A  2104  120A  158A  	line	730
  8669                           	
  8670                           l4588:	
  8671  0E4A                     ;rfid.c: 730:  _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  8672                           	bsf	status, 5	;RP0=1, select bank1
  8673  0E4A  1683               	bcf	status, 6	;RP1=0, select bank1
  8674  0E4B  1303               		movf	(MFRC522_AntiColl@serNum)^080h,w
  8675  0E4C  0840               	movwf	(MFRC522_ToCard@sendData)^080h
  8676  0E4D  00AF               movf	(MFRC522_AntiColl@serNum+1)^080h,w
  8677  0E4E  0841               movwf	(MFRC522_ToCard@sendData+1)^080h
  8678  0E4F  00B0               
  8679                           	movlw	low(02h)
  8680  0E50  3002               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8681  0E51  00C2               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8682  0E52  0842               	movwf	(MFRC522_ToCard@sendLen)^080h
  8683  0E53  00B1               		movf	(MFRC522_AntiColl@serNum)^080h,w
  8684  0E54  0840               	movwf	(MFRC522_ToCard@backData)^080h
  8685  0E55  00B2               movf	(MFRC522_AntiColl@serNum+1)^080h,w
  8686  0E56  0841               movwf	(MFRC522_ToCard@backData+1)^080h
  8687  0E57  00B3               
  8688                           	movlw	(low(MFRC522_AntiColl@unLen|((0x0)<<8)))&0ffh
  8689  0E58  30C8               	movwf	(??_MFRC522_AntiColl+1)^080h+0
  8690  0E59  00C3               	movf	(??_MFRC522_AntiColl+1)^080h+0,w
  8691  0E5A  0843               	movwf	(MFRC522_ToCard@backLen)^080h
  8692  0E5B  00B4               	movlw	low(0Ch)
  8693  0E5C  300C               	fcall	_MFRC522_ToCard
  8694  0E5D  120A  118A  2555  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  8695  0E62  1683               	bcf	status, 6	;RP1=0, select bank1
  8696  0E63  1303               	movwf	(??_MFRC522_AntiColl+2)^080h+0
  8697  0E64  00C4               	movf	(??_MFRC522_AntiColl+2)^080h+0,w
  8698  0E65  0844               	movwf	(MFRC522_AntiColl@_status)^080h
  8699  0E66  00C9               	line	732
  8700                           	
  8701                           l4590:	
  8702  0E67                     ;rfid.c: 732:  if (_status == 0)
  8703                           	movf	((MFRC522_AntiColl@_status)^080h),w
  8704  0E67  0849               	btfss	status,2
  8705  0E68  1D03               	goto	u4051
  8706  0E69  2E6B               	goto	u4050
  8707  0E6A  2E6C               u4051:
  8708  0E6B                     	goto	l391
  8709  0E6B  2EAD               u4050:
  8710  0E6C                     	line	734
  8711                           	
  8712                           l4592:	
  8713  0E6C                     ;rfid.c: 733:  {;rfid.c: 734:   for (i = 0; i < 4; i++) serNumCheck ^= serNum[i];
  8714                           	clrf	(MFRC522_AntiColl@i)^080h
  8715  0E6C  01CA               	
  8716                           l4594:	
  8717  0E6D                     	movlw	low(04h)
  8718  0E6D  3004               	subwf	(MFRC522_AntiColl@i)^080h,w
  8719  0E6E  024A               	skipc
  8720  0E6F  1C03               	goto	u4061
  8721  0E70  2E72               	goto	u4060
  8722  0E71  2E73               u4061:
  8723  0E72                     	goto	l4598
  8724  0E72  2E75               u4060:
  8725  0E73                     	goto	l4604
  8726  0E73  2E90               	
  8727                           l4596:	
  8728  0E74                     	goto	l4604
  8729  0E74  2E90               	
  8730                           l392:	
  8731  0E75                     	
  8732                           l4598:	
  8733  0E75                     	movf	(MFRC522_AntiColl@i)^080h,w
  8734  0E75  084A               	addwf	(MFRC522_AntiColl@serNum)^080h,w
  8735  0E76  0740               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8736  0E77  00C2               	movf	(MFRC522_AntiColl@serNum+1)^080h,w
  8737  0E78  0841               	skipnc
  8738  0E79  1803               	addlw	1
  8739  0E7A  3E01               	movwf	1+((??_MFRC522_AntiColl+0)^080h+0)
  8740  0E7B  00C3               	movf	0+(??_MFRC522_AntiColl+0)^080h+0,w
  8741  0E7C  0842               	movwf	fsr0
  8742  0E7D  0084               	bsf	status,7
  8743  0E7E  1783               	btfss	1+(??_MFRC522_AntiColl+0)^080h+0,0
  8744  0E7F  1C43               	bcf	status,7
  8745  0E80  1383               	movf	indf,w
  8746  0E81  0800               	movwf	(??_MFRC522_AntiColl+2)^080h+0
  8747  0E82  00C4               	movf	(??_MFRC522_AntiColl+2)^080h+0,w
  8748  0E83  0844               	xorwf	(MFRC522_AntiColl@serNumCheck)^080h,f
  8749  0E84  06C7               	
  8750                           l4600:	
  8751  0E85                     	movlw	low(01h)
  8752  0E85  3001               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8753  0E86  00C2               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8754  0E87  0842               	addwf	(MFRC522_AntiColl@i)^080h,f
  8755  0E88  07CA               	
  8756                           l4602:	
  8757  0E89                     	movlw	low(04h)
  8758  0E89  3004               	subwf	(MFRC522_AntiColl@i)^080h,w
  8759  0E8A  024A               	skipc
  8760  0E8B  1C03               	goto	u4071
  8761  0E8C  2E8E               	goto	u4070
  8762  0E8D  2E8F               u4071:
  8763  0E8E                     	goto	l4598
  8764  0E8E  2E75               u4070:
  8765  0E8F                     	goto	l4604
  8766  0E8F  2E90               	
  8767                           l393:	
  8768  0E90                     	line	735
  8769                           	
  8770                           l4604:	
  8771  0E90                     ;rfid.c: 735:   if (serNumCheck != serNum[4])_status = 2;
  8772                           	movlw	low(04h)
  8773  0E90  3004               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8774  0E91  00C2               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8775  0E92  0842               	addwf	(MFRC522_AntiColl@serNum)^080h,w
  8776  0E93  0740               	movwf	(??_MFRC522_AntiColl+2)^080h+0
  8777  0E94  00C4               	movf	(MFRC522_AntiColl@serNum+1)^080h,w
  8778  0E95  0841               	movwf	(??_MFRC522_AntiColl+1)^080h+0
  8779  0E96  00C3               	skipnc
  8780  0E97  1803               	incf	(??_MFRC522_AntiColl+1)^080h+0,f
  8781  0E98  0AC3               	btfsc	(??_MFRC522_AntiColl+0)^080h+0,7
  8782  0E99  1BC2               	decf	(??_MFRC522_AntiColl+1)^080h+0,f
  8783  0E9A  03C3               	movf	(??_MFRC522_AntiColl+1)^080h+0,w
  8784  0E9B  0843               	movwf	((??_MFRC522_AntiColl+2)^080h+0)+1
  8785  0E9C  00C5               	movf	0+(??_MFRC522_AntiColl+2)^080h+0,w
  8786  0E9D  0844               	movwf	fsr0
  8787  0E9E  0084               	bsf	status,7
  8788  0E9F  1783               	btfss	1+(??_MFRC522_AntiColl+2)^080h+0,0
  8789  0EA0  1C45               	bcf	status,7
  8790  0EA1  1383               	movf	indf,w
  8791  0EA2  0800               	xorwf	(MFRC522_AntiColl@serNumCheck)^080h,w
  8792  0EA3  0647               	skipnz
  8793  0EA4  1903               	goto	u4081
  8794  0EA5  2EA7               	goto	u4080
  8795  0EA6  2EA8               u4081:
  8796  0EA7                     	goto	l391
  8797  0EA7  2EAD               u4080:
  8798  0EA8                     	
  8799                           l4606:	
  8800  0EA8                     	movlw	low(02h)
  8801  0EA8  3002               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8802  0EA9  00C2               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8803  0EAA  0842               	movwf	(MFRC522_AntiColl@_status)^080h
  8804  0EAB  00C9               	goto	l391
  8805  0EAC  2EAD               	
  8806                           l394:	
  8807  0EAD                     	line	736
  8808                           ;rfid.c: 736:  }
  8809                           	
  8810                           l391:	
  8811  0EAD                     	line	738
  8812                           ;rfid.c: 738:  return (_status);
  8813                           	movf	(MFRC522_AntiColl@_status)^080h,w
  8814  0EAD  0849               	goto	l395
  8815  0EAE  2EAF               	
  8816                           l4608:	
  8817  0EAF                     	line	739
  8818                           	
  8819                           l395:	
  8820  0EAF                     	return
  8821  0EAF  0008               	opt stack 0
  8822                           GLOBAL	__end_of_MFRC522_AntiColl
  8823                           	__end_of_MFRC522_AntiColl:
  8824  0EB0                     	signat	_MFRC522_AntiColl,4217
  8825                           	global	_MFRC522_ToCard
  8826                           
  8827 ;; *************** function _MFRC522_ToCard *****************
  8828 ;; Defined at:
  8829 ;;		line 486 in file "rfid.c"
  8830 ;; Parameters:    Size  Location     Type
  8831 ;;  command         1    wreg     unsigned char 
  8832 ;;  sendData        2   15[BANK1 ] PTR unsigned char 
  8833 ;;		 -> UID(7), main@UID(7), 
  8834 ;;  sendLen         1   17[BANK1 ] unsigned char 
  8835 ;;  backData        2   18[BANK1 ] PTR unsigned char 
  8836 ;;		 -> UID(7), main@UID(7), 
  8837 ;;  backLen         1   20[BANK1 ] PTR unsigned char 
  8838 ;;		 -> MFRC522_AntiColl@unLen(1), 
  8839 ;; Auto vars:     Size  Location     Type
  8840 ;;  command         1   28[BANK1 ] unsigned char 
  8841 ;;  i               2   29[BANK1 ] unsigned int 
  8842 ;;  n               1   31[BANK1 ] unsigned char 
  8843 ;;  lastBits        1   27[BANK1 ] unsigned char 
  8844 ;;  _status         1   26[BANK1 ] unsigned char 
  8845 ;;  waitIRq         1   25[BANK1 ] unsigned char 
  8846 ;;  irqEn           1   24[BANK1 ] unsigned char 
  8847 ;; Return value:  Size  Location     Type
  8848 ;;                  1    wreg      unsigned char 
  8849 ;; Registers used:
  8850 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8851 ;; Tracked objects:
  8852 ;;		On entry : 0/0
  8853 ;;		On exit  : 0/0
  8854 ;;		Unchanged: 0/0
  8855 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8856 ;;      Params:         0       0       6       0       0
  8857 ;;      Locals:         0       0       8       0       0
  8858 ;;      Temps:          0       0       3       0       0
  8859 ;;      Totals:         0       0      17       0       0
  8860 ;;Total ram usage:       17 bytes
  8861 ;; Hardware stack levels used:    1
  8862 ;; Hardware stack levels required when called:    6
  8863 ;; This function calls:
  8864 ;;		_MFRC522_Clear_Bit
  8865 ;;		_MFRC522_Rd
  8866 ;;		_MFRC522_Set_Bit
  8867 ;;		_MFRC522_Wr
  8868 ;; This function is called by:
  8869 ;;		_MFRC522_AntiColl
  8870 ;; This function uses a non-reentrant model
  8871 ;;
  8872                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  8873                           	line	486
  8874                           global __ptext25
  8875                           __ptext25:	;psect for function _MFRC522_ToCard
  8876  0555                     psect	text25
  8877                           	file	"rfid.c"
  8878                           	line	486
  8879                           	global	__size_of_MFRC522_ToCard
  8880                           	__size_of_MFRC522_ToCard	equ	__end_of_MFRC522_ToCard-_MFRC522_ToCard
  8881  016F                     	
  8882                           _MFRC522_ToCard:	
  8883  0555                     ;incstack = 0
  8884                           	opt	stack 0
  8885                           ; Regs used in _MFRC522_ToCard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8886                           ;MFRC522_ToCard@command stored from wreg
  8887                           	bsf	status, 5	;RP0=1, select bank1
  8888  0555  1683               	bcf	status, 6	;RP1=0, select bank1
  8889  0556  1303               	movwf	(MFRC522_ToCard@command)^080h
  8890  0557  00BC               	line	488
  8891                           	
  8892                           l4476:	
  8893  0558                     ;rfid.c: 486: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *back
                                 Data, char *backLen);rfid.c: 487: {;rfid.c: 488:  char _status = 2;
  8894                           	movlw	low(02h)
  8895  0558  3002               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8896  0559  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  8897  055A  0835               	movwf	(MFRC522_ToCard@_status)^080h
  8898  055B  00BA               	line	489
  8899                           	
  8900                           l4478:	
  8901  055C                     ;rfid.c: 489:  char irqEn = 0x00;
  8902                           	clrf	(MFRC522_ToCard@irqEn)^080h
  8903  055C  01B8               	line	490
  8904                           	
  8905                           l4480:	
  8906  055D                     ;rfid.c: 490:  char waitIRq = 0x00;
  8907                           	clrf	(MFRC522_ToCard@waitIRq)^080h
  8908  055D  01B9               	line	495
  8909                           ;rfid.c: 491:  char lastBits;;rfid.c: 492:  char n;;rfid.c: 493:  unsigned int i;;rfid.c
                                 : 495:  switch (command)
  8910                           	goto	l4488
  8911  055E  2D73               	line	497
  8912                           ;rfid.c: 496:  {;rfid.c: 497:   case 0x0E:
  8913                           	
  8914                           l358:	
  8915  055F                     	line	499
  8916                           	
  8917                           l4482:	
  8918  055F                     ;rfid.c: 498:   {;rfid.c: 499:    irqEn = 0x12;
  8919                           	movlw	low(012h)
  8920  055F  3012               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8921  0560  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  8922  0561  0835               	movwf	(MFRC522_ToCard@irqEn)^080h
  8923  0562  00B8               	line	500
  8924                           ;rfid.c: 500:    waitIRq = 0x10;
  8925                           	movlw	low(010h)
  8926  0563  3010               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8927  0564  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  8928  0565  0835               	movwf	(MFRC522_ToCard@waitIRq)^080h
  8929  0566  00B9               	line	501
  8930                           ;rfid.c: 501:    break;
  8931                           	goto	l4490
  8932  0567  2D83               	line	503
  8933                           ;rfid.c: 502:   };rfid.c: 503:   case 0x0C:
  8934                           	
  8935                           l360:	
  8936  0568                     	line	505
  8937                           	
  8938                           l4484:	
  8939  0568                     ;rfid.c: 504:   {;rfid.c: 505:    irqEn = 0x77;
  8940                           	movlw	low(077h)
  8941  0568  3077               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8942  0569  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  8943  056A  0835               	movwf	(MFRC522_ToCard@irqEn)^080h
  8944  056B  00B8               	line	506
  8945                           ;rfid.c: 506:    waitIRq = 0x30;
  8946                           	movlw	low(030h)
  8947  056C  3030               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8948  056D  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  8949  056E  0835               	movwf	(MFRC522_ToCard@waitIRq)^080h
  8950  056F  00B9               	line	507
  8951                           ;rfid.c: 507:    break;
  8952                           	goto	l4490
  8953  0570  2D83               	line	509
  8954                           ;rfid.c: 508:   };rfid.c: 509:   default:
  8955                           	
  8956                           l361:	
  8957  0571                     	line	510
  8958                           ;rfid.c: 510:    break;
  8959                           	goto	l4490
  8960  0571  2D83               	line	511
  8961                           	
  8962                           l4486:	
  8963  0572                     ;rfid.c: 511:  }
  8964                           	goto	l4490
  8965  0572  2D83               	
  8966                           l357:	
  8967  0573                     	
  8968                           l4488:	
  8969  0573                     	movf	(MFRC522_ToCard@command)^080h,w
  8970  0573  083C               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8971  0574  00B5               	clrf	(??_MFRC522_ToCard+0)^080h+0+1
  8972  0575  01B6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8973                           ; Switch size 1, requested type "space"
  8974                           ; Number of cases is 1, Range of values is 0 to 0
  8975                           ; switch strategies available:
  8976                           ; Name         Instructions Cycles
  8977                           ; simple_byte            4     3 (average)
  8978                           ; direct_byte           11     8 (fixed)
  8979                           ; jumptable            260     6 (fixed)
  8980                           ;	Chosen strategy is simple_byte
  8981                           
  8982                           	movf 1+(??_MFRC522_ToCard+0)^080h+0,w
  8983  0576  0836               	opt asmopt_push
  8984                           	opt asmopt_off
  8985                           	xorlw	0^0	; case 0
  8986  0577  3A00               	skipnz
  8987  0578  1903               	goto	l4928
  8988  0579  2D7B               	goto	l4490
  8989  057A  2D83               	opt asmopt_pop
  8990                           	
  8991                           l4928:	
  8992  057B                     ; Switch size 1, requested type "space"
  8993                           ; Number of cases is 2, Range of values is 12 to 14
  8994                           ; switch strategies available:
  8995                           ; Name         Instructions Cycles
  8996                           ; simple_byte            7     4 (average)
  8997                           ; direct_byte           20    11 (fixed)
  8998                           ; jumptable            263     9 (fixed)
  8999                           ;	Chosen strategy is simple_byte
  9000                           
  9001                           	movf 0+(??_MFRC522_ToCard+0)^080h+0,w
  9002  057B  0835               	opt asmopt_push
  9003                           	opt asmopt_off
  9004                           	xorlw	12^0	; case 12
  9005  057C  3A0C               	skipnz
  9006  057D  1903               	goto	l4484
  9007  057E  2D68               	xorlw	14^12	; case 14
  9008  057F  3A02               	skipnz
  9009  0580  1903               	goto	l4482
  9010  0581  2D5F               	goto	l4490
  9011  0582  2D83               	opt asmopt_pop
  9012                           
  9013                           	
  9014                           l359:	
  9015  0583                     	line	514
  9016                           	
  9017                           l4490:	
  9018  0583                     ;rfid.c: 514:  for (i = 0; i < sendLen; i++) MFRC522_Wr(0x09, sendData[i]);
  9019                           	clrf	(MFRC522_ToCard@i)^080h
  9020  0583  01BD               	clrf	(MFRC522_ToCard@i+1)^080h
  9021  0584  01BE               	goto	l4496
  9022  0585  2DA5               	
  9023                           l363:	
  9024  0586                     	
  9025                           l4492:	
  9026  0586                     	movf	(MFRC522_ToCard@i)^080h,w
  9027  0586  083D               	addwf	(MFRC522_ToCard@sendData)^080h,w
  9028  0587  072F               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9029  0588  00B5               	movf	(MFRC522_ToCard@sendData+1)^080h,w
  9030  0589  0830               	skipnc
  9031  058A  1803               	addlw	1
  9032  058B  3E01               	movwf	1+((??_MFRC522_ToCard+0)^080h+0)
  9033  058C  00B6               	movf	0+(??_MFRC522_ToCard+0)^080h+0,w
  9034  058D  0835               	movwf	fsr0
  9035  058E  0084               	bsf	status,7
  9036  058F  1783               	btfss	1+(??_MFRC522_ToCard+0)^080h+0,0
  9037  0590  1C36               	bcf	status,7
  9038  0591  1383               	movf	indf,w
  9039  0592  0800               	movwf	(??_MFRC522_ToCard+2)^080h+0
  9040  0593  00B7               	movf	(??_MFRC522_ToCard+2)^080h+0,w
  9041  0594  0837               	movwf	(MFRC522_Wr@value)^080h
  9042  0595  00A8               	movlw	low(09h)
  9043  0596  3009               	fcall	_MFRC522_Wr
  9044  0597  120A  158A  2151  120A  118A  	
  9045                           l4494:	
  9046  059C                     	movlw	01h
  9047  059C  3001               	bsf	status, 5	;RP0=1, select bank1
  9048  059D  1683               	bcf	status, 6	;RP1=0, select bank1
  9049  059E  1303               	addwf	(MFRC522_ToCard@i)^080h,f
  9050  059F  07BD               	skipnc
  9051  05A0  1803               	incf	(MFRC522_ToCard@i+1)^080h,f
  9052  05A1  0ABE               	movlw	0
  9053  05A2  3000               	addwf	(MFRC522_ToCard@i+1)^080h,f
  9054  05A3  07BE               	goto	l4496
  9055  05A4  2DA5               	
  9056                           l362:	
  9057  05A5                     	
  9058                           l4496:	
  9059  05A5                     	movf	(MFRC522_ToCard@sendLen)^080h,w
  9060  05A5  0831               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9061  05A6  00B5               	clrf	(??_MFRC522_ToCard+0)^080h+0+1
  9062  05A7  01B6               	movf	1+(??_MFRC522_ToCard+0)^080h+0,w
  9063  05A8  0836               	subwf	(MFRC522_ToCard@i+1)^080h,w
  9064  05A9  023E               	skipz
  9065  05AA  1D03               	goto	u3885
  9066  05AB  2DAE               	movf	0+(??_MFRC522_ToCard+0)^080h+0,w
  9067  05AC  0835               	subwf	(MFRC522_ToCard@i)^080h,w
  9068  05AD  023D               u3885:
  9069  05AE                     	skipc
  9070  05AE  1C03               	goto	u3881
  9071  05AF  2DB1               	goto	u3880
  9072  05B0  2DB2               u3881:
  9073  05B1                     	goto	l4492
  9074  05B1  2D86               u3880:
  9075  05B2                     	goto	l4498
  9076  05B2  2DB3               	
  9077                           l364:	
  9078  05B3                     	line	517
  9079                           	
  9080                           l4498:	
  9081  05B3                     ;rfid.c: 517:  MFRC522_Wr(0x01, command);
  9082                           	movf	(MFRC522_ToCard@command)^080h,w
  9083  05B3  083C               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9084  05B4  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9085  05B5  0835               	movwf	(MFRC522_Wr@value)^080h
  9086  05B6  00A8               	movlw	low(01h)
  9087  05B7  3001               	fcall	_MFRC522_Wr
  9088  05B8  120A  158A  2151  120A  118A  	line	520
  9089                           	
  9090                           l4500:	
  9091  05BD                     ;rfid.c: 520:  if (command == 0x0C) MFRC522_Set_Bit(0x0D, 0x80);
  9092                           		movlw	12
  9093  05BD  300C               	bsf	status, 5	;RP0=1, select bank1
  9094  05BE  1683               	bcf	status, 6	;RP1=0, select bank1
  9095  05BF  1303               	xorwf	((MFRC522_ToCard@command)^080h),w
  9096  05C0  063C               	btfss	status,2
  9097  05C1  1D03               	goto	u3891
  9098  05C2  2DC4               	goto	u3890
  9099  05C3  2DC5               u3891:
  9100  05C4                     	goto	l4504
  9101  05C4  2DD0               u3890:
  9102  05C5                     	
  9103                           l4502:	
  9104  05C5                     	movlw	low(080h)
  9105  05C5  3080               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9106  05C6  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9107  05C7  0835               	movwf	(MFRC522_Set_Bit@mask)^080h
  9108  05C8  00AB               	movlw	low(0Dh)
  9109  05C9  300D               	fcall	_MFRC522_Set_Bit
  9110  05CA  120A  158A  20EE  120A  118A  	goto	l4504
  9111  05CF  2DD0               	
  9112                           l365:	
  9113  05D0                     	line	524
  9114                           	
  9115                           l4504:	
  9116  05D0                     ;rfid.c: 524:  i = 0xFFFF;
  9117                           	movlw	0FFh
  9118  05D0  30FF               	bsf	status, 5	;RP0=1, select bank1
  9119  05D1  1683               	bcf	status, 6	;RP1=0, select bank1
  9120  05D2  1303               	movwf	(MFRC522_ToCard@i)^080h
  9121  05D3  00BD               	movlw	0FFh
  9122  05D4  30FF               	movwf	((MFRC522_ToCard@i)^080h)+1
  9123  05D5  00BE               	goto	l4506
  9124  05D6  2DD7               	line	525
  9125                           ;rfid.c: 525:  do
  9126                           	
  9127                           l366:	
  9128  05D7                     	line	529
  9129                           	
  9130                           l4506:	
  9131  05D7                     ;rfid.c: 526:  {;rfid.c: 529:   n = MFRC522_Rd(0x04);
  9132                           	movlw	low(04h)
  9133  05D7  3004               	fcall	_MFRC522_Rd
  9134  05D8  120A  158A  21AB  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  9135  05DD  1683               	bcf	status, 6	;RP1=0, select bank1
  9136  05DE  1303               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9137  05DF  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9138  05E0  0835               	movwf	(MFRC522_ToCard@n)^080h
  9139  05E1  00BF               	line	530
  9140                           ;rfid.c: 530:   i--;
  9141                           	movlw	01h
  9142  05E2  3001               	subwf	(MFRC522_ToCard@i)^080h,f
  9143  05E3  02BD               	movlw	0
  9144  05E4  3000               	skipc
  9145  05E5  1C03               	decf	(MFRC522_ToCard@i+1)^080h,f
  9146  05E6  03BE               	subwf	(MFRC522_ToCard@i+1)^080h,f
  9147  05E7  02BE               	line	531
  9148                           	
  9149                           l4508:	
  9150  05E8                     ;rfid.c: 531:  } while (i && !(n & 0x01) && !(n & waitIRq));
  9151                           	movf	((MFRC522_ToCard@i)^080h),w
  9152  05E8  083D               iorwf	((MFRC522_ToCard@i+1)^080h),w
  9153  05E9  043E               	btfsc	status,2
  9154  05EA  1903               	goto	u3901
  9155  05EB  2DED               	goto	u3900
  9156  05EC  2DEE               u3901:
  9157  05ED                     	goto	l4514
  9158  05ED  2DFA               u3900:
  9159  05EE                     	
  9160                           l4510:	
  9161  05EE                     	btfsc	(MFRC522_ToCard@n)^080h,(0)&7
  9162  05EE  183F               	goto	u3911
  9163  05EF  2DF1               	goto	u3910
  9164  05F0  2DF2               u3911:
  9165  05F1                     	goto	l4514
  9166  05F1  2DFA               u3910:
  9167  05F2                     	
  9168                           l4512:	
  9169  05F2                     	movf	(MFRC522_ToCard@n)^080h,w
  9170  05F2  083F               	andwf	(MFRC522_ToCard@waitIRq)^080h,w
  9171  05F3  0539               	btfsc	status,2
  9172  05F4  1903               	goto	u3921
  9173  05F5  2DF7               	goto	u3920
  9174  05F6  2DF8               u3921:
  9175  05F7                     	goto	l4506
  9176  05F7  2DD7               u3920:
  9177  05F8                     	goto	l4514
  9178  05F8  2DFA               	
  9179                           l368:	
  9180  05F9                     	goto	l4514
  9181  05F9  2DFA               	
  9182                           l369:	
  9183  05FA                     	line	533
  9184                           	
  9185                           l4514:	
  9186  05FA                     ;rfid.c: 533:  MFRC522_Clear_Bit(0x0D, 0x80);
  9187                           	movlw	low(080h)
  9188  05FA  3080               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9189  05FB  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9190  05FC  0835               	movwf	(MFRC522_Clear_Bit@mask)^080h
  9191  05FD  00AB               	movlw	low(0Dh)
  9192  05FE  300D               	fcall	_MFRC522_Clear_Bit
  9193  05FF  120A  158A  2104  120A  118A  	line	535
  9194                           	
  9195                           l4516:	
  9196  0604                     ;rfid.c: 535:  if (i != 0)
  9197                           	bsf	status, 5	;RP0=1, select bank1
  9198  0604  1683               	bcf	status, 6	;RP1=0, select bank1
  9199  0605  1303               	movf	((MFRC522_ToCard@i)^080h),w
  9200  0606  083D               iorwf	((MFRC522_ToCard@i+1)^080h),w
  9201  0607  043E               	btfsc	status,2
  9202  0608  1903               	goto	u3931
  9203  0609  2E0B               	goto	u3930
  9204  060A  2E0C               u3931:
  9205  060B                     	goto	l370
  9206  060B  2EC1               u3930:
  9207  060C                     	line	537
  9208                           	
  9209                           l4518:	
  9210  060C                     ;rfid.c: 536:  {;rfid.c: 537:   if (!(MFRC522_Rd(0x06) & 0x1B))
  9211                           	movlw	low(06h)
  9212  060C  3006               	fcall	_MFRC522_Rd
  9213  060D  120A  158A  21AB  120A  118A  	andlw	01Bh
  9214  0612  391B               	btfss	status,2
  9215  0613  1D03               	goto	u3941
  9216  0614  2E16               	goto	u3940
  9217  0615  2E17               u3941:
  9218  0616                     	goto	l4554
  9219  0616  2EBA               u3940:
  9220  0617                     	line	539
  9221                           	
  9222                           l4520:	
  9223  0617                     ;rfid.c: 538:   {;rfid.c: 539:    _status = 0;
  9224                           	bsf	status, 5	;RP0=1, select bank1
  9225  0617  1683               	bcf	status, 6	;RP1=0, select bank1
  9226  0618  1303               	clrf	(MFRC522_ToCard@_status)^080h
  9227  0619  01BA               	line	540
  9228                           	
  9229                           l4522:	
  9230  061A                     ;rfid.c: 540:    if (n & irqEn & 0x01) _status = 1;
  9231                           	movf	(MFRC522_ToCard@irqEn)^080h,w
  9232  061A  0838               	andwf	(MFRC522_ToCard@n)^080h,w
  9233  061B  053F               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9234  061C  00B5               	btfss	0+(??_MFRC522_ToCard+0)^080h+0,(0)&7
  9235  061D  1C35               	goto	u3951
  9236  061E  2E20               	goto	u3950
  9237  061F  2E21               u3951:
  9238  0620                     	goto	l4526
  9239  0620  2E24               u3950:
  9240  0621                     	
  9241                           l4524:	
  9242  0621                     	clrf	(MFRC522_ToCard@_status)^080h
  9243  0621  01BA               	incf	(MFRC522_ToCard@_status)^080h,f
  9244  0622  0ABA               	goto	l4526
  9245  0623  2E24               	
  9246                           l372:	
  9247  0624                     	line	542
  9248                           	
  9249                           l4526:	
  9250  0624                     ;rfid.c: 542:    if (command == 0x0C)
  9251                           		movlw	12
  9252  0624  300C               	xorwf	((MFRC522_ToCard@command)^080h),w
  9253  0625  063C               	btfss	status,2
  9254  0626  1D03               	goto	u3961
  9255  0627  2E29               	goto	u3960
  9256  0628  2E2A               u3961:
  9257  0629                     	goto	l370
  9258  0629  2EC1               u3960:
  9259  062A                     	line	544
  9260                           	
  9261                           l4528:	
  9262  062A                     ;rfid.c: 543:    {;rfid.c: 544:     n = MFRC522_Rd(0x0A);
  9263                           	movlw	low(0Ah)
  9264  062A  300A               	fcall	_MFRC522_Rd
  9265  062B  120A  158A  21AB  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  9266  0630  1683               	bcf	status, 6	;RP1=0, select bank1
  9267  0631  1303               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9268  0632  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9269  0633  0835               	movwf	(MFRC522_ToCard@n)^080h
  9270  0634  00BF               	line	545
  9271                           ;rfid.c: 545:     lastBits = MFRC522_Rd(0x0C) & 0x07;
  9272                           	movlw	low(0Ch)
  9273  0635  300C               	fcall	_MFRC522_Rd
  9274  0636  120A  158A  21AB  120A  118A  	andlw	07h
  9275  063B  3907               	bsf	status, 5	;RP0=1, select bank1
  9276  063C  1683               	bcf	status, 6	;RP1=0, select bank1
  9277  063D  1303               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9278  063E  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9279  063F  0835               	movwf	(MFRC522_ToCard@lastBits)^080h
  9280  0640  00BB               	line	547
  9281                           	
  9282                           l4530:	
  9283  0641                     ;rfid.c: 547:     if (lastBits) *backLen = (n - 1) * 8 + lastBits;
  9284                           	movf	((MFRC522_ToCard@lastBits)^080h),w
  9285  0641  083B               	btfsc	status,2
  9286  0642  1903               	goto	u3971
  9287  0643  2E45               	goto	u3970
  9288  0644  2E46               u3971:
  9289  0645                     	goto	l4534
  9290  0645  2E58               u3970:
  9291  0646                     	
  9292                           l4532:	
  9293  0646                     	movf	(MFRC522_ToCard@n)^080h,w
  9294  0646  083F               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9295  0647  00B5               	movlw	03h
  9296  0648  3003               u3985:
  9297  0649                     	clrc
  9298  0649  1003               	rlf	(??_MFRC522_ToCard+0)^080h+0,f
  9299  064A  0DB5               	addlw	-1
  9300  064B  3EFF               	skipz
  9301  064C  1D03               	goto	u3985
  9302  064D  2E49               	movf	(MFRC522_ToCard@lastBits)^080h,w
  9303  064E  083B               	addwf	0+(??_MFRC522_ToCard+0)^080h+0,w
  9304  064F  0735               	addlw	0F8h
  9305  0650  3EF8               	movwf	(??_MFRC522_ToCard+1)^080h+0
  9306  0651  00B6               	movf	(MFRC522_ToCard@backLen)^080h,w
  9307  0652  0834               	movwf	fsr0
  9308  0653  0084               	movf	(??_MFRC522_ToCard+1)^080h+0,w
  9309  0654  0836               	bcf	status, 7	;select IRP bank0
  9310  0655  1383               	movwf	indf
  9311  0656  0080               	goto	l4536
  9312  0657  2E69               	line	548
  9313                           ;rfid.c: 548:     else *backLen = n * 8;
  9314                           	
  9315                           l374:	
  9316  0658                     	
  9317                           l4534:	
  9318  0658                     	movf	(MFRC522_ToCard@n)^080h,w
  9319  0658  083F               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9320  0659  00B5               	movlw	(03h)-1
  9321  065A  3002               u3995:
  9322  065B                     	clrc
  9323  065B  1003               	rlf	(??_MFRC522_ToCard+0)^080h+0,f
  9324  065C  0DB5               	addlw	-1
  9325  065D  3EFF               	skipz
  9326  065E  1D03               	goto	u3995
  9327  065F  2E5B               	clrc
  9328  0660  1003               	rlf	(??_MFRC522_ToCard+0)^080h+0,w
  9329  0661  0D35               	movwf	(??_MFRC522_ToCard+1)^080h+0
  9330  0662  00B6               	movf	(MFRC522_ToCard@backLen)^080h,w
  9331  0663  0834               	movwf	fsr0
  9332  0664  0084               	movf	(??_MFRC522_ToCard+1)^080h+0,w
  9333  0665  0836               	bcf	status, 7	;select IRP bank0
  9334  0666  1383               	movwf	indf
  9335  0667  0080               	goto	l4536
  9336  0668  2E69               	
  9337                           l375:	
  9338  0669                     	line	550
  9339                           	
  9340                           l4536:	
  9341  0669                     ;rfid.c: 550:     if (n == 0) n = 1;
  9342                           	movf	((MFRC522_ToCard@n)^080h),w
  9343  0669  083F               	btfss	status,2
  9344  066A  1D03               	goto	u4001
  9345  066B  2E6D               	goto	u4000
  9346  066C  2E6E               u4001:
  9347  066D                     	goto	l4540
  9348  066D  2E71               u4000:
  9349  066E                     	
  9350                           l4538:	
  9351  066E                     	clrf	(MFRC522_ToCard@n)^080h
  9352  066E  01BF               	incf	(MFRC522_ToCard@n)^080h,f
  9353  066F  0ABF               	goto	l4540
  9354  0670  2E71               	
  9355                           l376:	
  9356  0671                     	line	551
  9357                           	
  9358                           l4540:	
  9359  0671                     ;rfid.c: 551:     if (n > 16) n = 16;
  9360                           	movlw	low(011h)
  9361  0671  3011               	subwf	(MFRC522_ToCard@n)^080h,w
  9362  0672  023F               	skipc
  9363  0673  1C03               	goto	u4011
  9364  0674  2E76               	goto	u4010
  9365  0675  2E77               u4011:
  9366  0676                     	goto	l4544
  9367  0676  2E7C               u4010:
  9368  0677                     	
  9369                           l4542:	
  9370  0677                     	movlw	low(010h)
  9371  0677  3010               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9372  0678  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9373  0679  0835               	movwf	(MFRC522_ToCard@n)^080h
  9374  067A  00BF               	goto	l4544
  9375  067B  2E7C               	
  9376                           l377:	
  9377  067C                     	line	554
  9378                           	
  9379                           l4544:	
  9380  067C                     ;rfid.c: 554:     for (i = 0; i < n; i++) backData[i] = MFRC522_Rd(0x09);
  9381                           	clrf	(MFRC522_ToCard@i)^080h
  9382  067C  01BD               	clrf	(MFRC522_ToCard@i+1)^080h
  9383  067D  01BE               	goto	l4550
  9384  067E  2E9D               	
  9385                           l379:	
  9386  067F                     	
  9387                           l4546:	
  9388  067F                     	movlw	low(09h)
  9389  067F  3009               	fcall	_MFRC522_Rd
  9390  0680  120A  158A  21AB  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  9391  0685  1683               	bcf	status, 6	;RP1=0, select bank1
  9392  0686  1303               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9393  0687  00B5               	movf	(MFRC522_ToCard@i)^080h,w
  9394  0688  083D               	addwf	(MFRC522_ToCard@backData)^080h,w
  9395  0689  0732               	movwf	(??_MFRC522_ToCard+1)^080h+0
  9396  068A  00B6               	movf	(MFRC522_ToCard@backData+1)^080h,w
  9397  068B  0833               	skipnc
  9398  068C  1803               	addlw	1
  9399  068D  3E01               	movwf	1+((??_MFRC522_ToCard+1)^080h+0)
  9400  068E  00B7               	movf	0+(??_MFRC522_ToCard+1)^080h+0,w
  9401  068F  0836               	movwf	fsr0
  9402  0690  0084               	bsf	status,7
  9403  0691  1783               	btfss	1+(??_MFRC522_ToCard+1)^080h+0,0
  9404  0692  1C37               	bcf	status,7
  9405  0693  1383               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9406  0694  0835               	movwf	indf
  9407  0695  0080               	
  9408                           l4548:	
  9409  0696                     	movlw	01h
  9410  0696  3001               	addwf	(MFRC522_ToCard@i)^080h,f
  9411  0697  07BD               	skipnc
  9412  0698  1803               	incf	(MFRC522_ToCard@i+1)^080h,f
  9413  0699  0ABE               	movlw	0
  9414  069A  3000               	addwf	(MFRC522_ToCard@i+1)^080h,f
  9415  069B  07BE               	goto	l4550
  9416  069C  2E9D               	
  9417                           l378:	
  9418  069D                     	
  9419                           l4550:	
  9420  069D                     	movf	(MFRC522_ToCard@n)^080h,w
  9421  069D  083F               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9422  069E  00B5               	clrf	(??_MFRC522_ToCard+0)^080h+0+1
  9423  069F  01B6               	movf	1+(??_MFRC522_ToCard+0)^080h+0,w
  9424  06A0  0836               	subwf	(MFRC522_ToCard@i+1)^080h,w
  9425  06A1  023E               	skipz
  9426  06A2  1D03               	goto	u4025
  9427  06A3  2EA6               	movf	0+(??_MFRC522_ToCard+0)^080h+0,w
  9428  06A4  0835               	subwf	(MFRC522_ToCard@i)^080h,w
  9429  06A5  023D               u4025:
  9430  06A6                     	skipc
  9431  06A6  1C03               	goto	u4021
  9432  06A7  2EA9               	goto	u4020
  9433  06A8  2EAA               u4021:
  9434  06A9                     	goto	l4546
  9435  06A9  2E7F               u4020:
  9436  06AA                     	goto	l4552
  9437  06AA  2EAB               	
  9438                           l380:	
  9439  06AB                     	line	555
  9440                           	
  9441                           l4552:	
  9442  06AB                     ;rfid.c: 555:     backData[i] = 0;
  9443                           	movf	(MFRC522_ToCard@i)^080h,w
  9444  06AB  083D               	addwf	(MFRC522_ToCard@backData)^080h,w
  9445  06AC  0732               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9446  06AD  00B5               	movf	(MFRC522_ToCard@backData+1)^080h,w
  9447  06AE  0833               	skipnc
  9448  06AF  1803               	addlw	1
  9449  06B0  3E01               	movwf	1+((??_MFRC522_ToCard+0)^080h+0)
  9450  06B1  00B6               	movf	0+(??_MFRC522_ToCard+0)^080h+0,w
  9451  06B2  0835               	movwf	fsr0
  9452  06B3  0084               	bsf	status,7
  9453  06B4  1783               	btfss	1+(??_MFRC522_ToCard+0)^080h+0,0
  9454  06B5  1C36               	bcf	status,7
  9455  06B6  1383               	clrf	indf
  9456  06B7  0180               	goto	l370
  9457  06B8  2EC1               	line	556
  9458                           ;rfid.c: 556:    }
  9459                           	
  9460                           l373:	
  9461  06B9                     	line	557
  9462                           ;rfid.c: 557:   } else _status = 2;
  9463                           	goto	l370
  9464  06B9  2EC1               	
  9465                           l371:	
  9466  06BA                     	
  9467                           l4554:	
  9468  06BA                     	movlw	low(02h)
  9469  06BA  3002               	bsf	status, 5	;RP0=1, select bank1
  9470  06BB  1683               	bcf	status, 6	;RP1=0, select bank1
  9471  06BC  1303               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9472  06BD  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9473  06BE  0835               	movwf	(MFRC522_ToCard@_status)^080h
  9474  06BF  00BA               	goto	l370
  9475  06C0  2EC1               	
  9476                           l381:	
  9477  06C1                     	line	558
  9478                           ;rfid.c: 558:  }
  9479                           	
  9480                           l370:	
  9481  06C1                     	line	563
  9482                           ;rfid.c: 563:  return (_status);
  9483                           	movf	(MFRC522_ToCard@_status)^080h,w
  9484  06C1  083A               	goto	l382
  9485  06C2  2EC3               	
  9486                           l4556:	
  9487  06C3                     	line	564
  9488                           	
  9489                           l382:	
  9490  06C3                     	return
  9491  06C3  0008               	opt stack 0
  9492                           GLOBAL	__end_of_MFRC522_ToCard
  9493                           	__end_of_MFRC522_ToCard:
  9494  06C4                     	signat	_MFRC522_ToCard,20601
  9495                           	global	_MFRC522_Set_Bit
  9496                           
  9497 ;; *************** function _MFRC522_Set_Bit *****************
  9498 ;; Defined at:
  9499 ;;		line 441 in file "rfid.c"
  9500 ;; Parameters:    Size  Location     Type
  9501 ;;  addr            1    wreg     unsigned char 
  9502 ;;  mask            1   11[BANK1 ] unsigned char 
  9503 ;; Auto vars:     Size  Location     Type
  9504 ;;  addr            1   13[BANK1 ] unsigned char 
  9505 ;; Return value:  Size  Location     Type
  9506 ;;                  1    wreg      void 
  9507 ;; Registers used:
  9508 ;;		wreg, status,2, status,0, pclath, cstack
  9509 ;; Tracked objects:
  9510 ;;		On entry : 0/0
  9511 ;;		On exit  : 0/0
  9512 ;;		Unchanged: 0/0
  9513 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9514 ;;      Params:         0       0       1       0       0
  9515 ;;      Locals:         0       0       1       0       0
  9516 ;;      Temps:          0       0       1       0       0
  9517 ;;      Totals:         0       0       3       0       0
  9518 ;;Total ram usage:        3 bytes
  9519 ;; Hardware stack levels used:    1
  9520 ;; Hardware stack levels required when called:    5
  9521 ;; This function calls:
  9522 ;;		_MFRC522_Rd
  9523 ;;		_MFRC522_Wr
  9524 ;; This function is called by:
  9525 ;;		_MFRC522_ToCard
  9526 ;; This function uses a non-reentrant model
  9527 ;;
  9528                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9529                           	line	441
  9530                           global __ptext26
  9531                           __ptext26:	;psect for function _MFRC522_Set_Bit
  9532  08EE                     psect	text26
  9533                           	file	"rfid.c"
  9534                           	line	441
  9535                           	global	__size_of_MFRC522_Set_Bit
  9536                           	__size_of_MFRC522_Set_Bit	equ	__end_of_MFRC522_Set_Bit-_MFRC522_Set_Bit
  9537  0016                     	
  9538                           _MFRC522_Set_Bit:	
  9539  08EE                     ;incstack = 0
  9540                           	opt	stack 0
  9541                           ; Regs used in _MFRC522_Set_Bit: [wreg+status,2+status,0+pclath+cstack]
  9542                           ;MFRC522_Set_Bit@addr stored from wreg
  9543                           	bsf	status, 5	;RP0=1, select bank1
  9544  08EE  1683               	bcf	status, 6	;RP1=0, select bank1
  9545  08EF  1303               	movwf	(MFRC522_Set_Bit@addr)^080h
  9546  08F0  00AD               	line	443
  9547                           	
  9548                           l3416:	
  9549  08F1                     ;rfid.c: 441: static void MFRC522_Set_Bit(char addr, char mask);rfid.c: 442: {;rfid.c: 4
                                 43:  MFRC522_Wr(addr, MFRC522_Rd(addr) | mask);
  9550                           	movf	(MFRC522_Set_Bit@addr)^080h,w
  9551  08F1  082D               	fcall	_MFRC522_Rd
  9552  08F2  120A  158A  21AB  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  9553  08F7  1683               	bcf	status, 6	;RP1=0, select bank1
  9554  08F8  1303               	iorwf	(MFRC522_Set_Bit@mask)^080h,w
  9555  08F9  042B               	movwf	(??_MFRC522_Set_Bit+0)^080h+0
  9556  08FA  00AC               	movf	(??_MFRC522_Set_Bit+0)^080h+0,w
  9557  08FB  082C               	movwf	(MFRC522_Wr@value)^080h
  9558  08FC  00A8               	movf	(MFRC522_Set_Bit@addr)^080h,w
  9559  08FD  082D               	fcall	_MFRC522_Wr
  9560  08FE  120A  158A  2151  120A  158A  	line	444
  9561                           	
  9562                           l354:	
  9563  0903                     	return
  9564  0903  0008               	opt stack 0
  9565                           GLOBAL	__end_of_MFRC522_Set_Bit
  9566                           	__end_of_MFRC522_Set_Bit:
  9567  0904                     	signat	_MFRC522_Set_Bit,8313
  9568                           	global	_MFRC522_Clear_Bit
  9569                           
  9570 ;; *************** function _MFRC522_Clear_Bit *****************
  9571 ;; Defined at:
  9572 ;;		line 436 in file "rfid.c"
  9573 ;; Parameters:    Size  Location     Type
  9574 ;;  addr            1    wreg     unsigned char 
  9575 ;;  mask            1   11[BANK1 ] unsigned char 
  9576 ;; Auto vars:     Size  Location     Type
  9577 ;;  addr            1   14[BANK1 ] unsigned char 
  9578 ;; Return value:  Size  Location     Type
  9579 ;;                  1    wreg      void 
  9580 ;; Registers used:
  9581 ;;		wreg, status,2, status,0, pclath, cstack
  9582 ;; Tracked objects:
  9583 ;;		On entry : 0/0
  9584 ;;		On exit  : 0/0
  9585 ;;		Unchanged: 0/0
  9586 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9587 ;;      Params:         0       0       1       0       0
  9588 ;;      Locals:         0       0       1       0       0
  9589 ;;      Temps:          0       0       2       0       0
  9590 ;;      Totals:         0       0       4       0       0
  9591 ;;Total ram usage:        4 bytes
  9592 ;; Hardware stack levels used:    1
  9593 ;; Hardware stack levels required when called:    5
  9594 ;; This function calls:
  9595 ;;		_MFRC522_Rd
  9596 ;;		_MFRC522_Wr
  9597 ;; This function is called by:
  9598 ;;		_MFRC522_ToCard
  9599 ;;		_MFRC522_AntiColl
  9600 ;; This function uses a non-reentrant model
  9601 ;;
  9602                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  9603                           	line	436
  9604                           global __ptext27
  9605                           __ptext27:	;psect for function _MFRC522_Clear_Bit
  9606  0904                     psect	text27
  9607                           	file	"rfid.c"
  9608                           	line	436
  9609                           	global	__size_of_MFRC522_Clear_Bit
  9610                           	__size_of_MFRC522_Clear_Bit	equ	__end_of_MFRC522_Clear_Bit-_MFRC522_Clear_Bit
  9611  0018                     	
  9612                           _MFRC522_Clear_Bit:	
  9613  0904                     ;incstack = 0
  9614                           	opt	stack 0
  9615                           ; Regs used in _MFRC522_Clear_Bit: [wreg+status,2+status,0+pclath+cstack]
  9616                           ;MFRC522_Clear_Bit@addr stored from wreg
  9617                           	bsf	status, 5	;RP0=1, select bank1
  9618  0904  1683               	bcf	status, 6	;RP1=0, select bank1
  9619  0905  1303               	movwf	(MFRC522_Clear_Bit@addr)^080h
  9620  0906  00AE               	line	438
  9621                           	
  9622                           l3414:	
  9623  0907                     ;rfid.c: 436: static void MFRC522_Clear_Bit(char addr, char mask);rfid.c: 437: {;rfid.c:
                                  438:  MFRC522_Wr(addr, MFRC522_Rd(addr) & (~mask));
  9624                           	comf	(MFRC522_Clear_Bit@mask)^080h,w
  9625  0907  092B               	movwf	(??_MFRC522_Clear_Bit+0)^080h+0
  9626  0908  00AC               	movf	(MFRC522_Clear_Bit@addr)^080h,w
  9627  0909  082E               	fcall	_MFRC522_Rd
  9628  090A  120A  158A  21AB  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  9629  090F  1683               	bcf	status, 6	;RP1=0, select bank1
  9630  0910  1303               	andwf	(??_MFRC522_Clear_Bit+0)^080h+0,w
  9631  0911  052C               	movwf	(??_MFRC522_Clear_Bit+1)^080h+0
  9632  0912  00AD               	movf	(??_MFRC522_Clear_Bit+1)^080h+0,w
  9633  0913  082D               	movwf	(MFRC522_Wr@value)^080h
  9634  0914  00A8               	movf	(MFRC522_Clear_Bit@addr)^080h,w
  9635  0915  082E               	fcall	_MFRC522_Wr
  9636  0916  120A  158A  2151  120A  158A  	line	439
  9637                           	
  9638                           l351:	
  9639  091B                     	return
  9640  091B  0008               	opt stack 0
  9641                           GLOBAL	__end_of_MFRC522_Clear_Bit
  9642                           	__end_of_MFRC522_Clear_Bit:
  9643  091C                     	signat	_MFRC522_Clear_Bit,8313
  9644                           	global	_MFRC522_Wr
  9645                           
  9646 ;; *************** function _MFRC522_Wr *****************
  9647 ;; Defined at:
  9648 ;;		line 416 in file "rfid.c"
  9649 ;; Parameters:    Size  Location     Type
  9650 ;;  addr            1    wreg     unsigned char 
  9651 ;;  value           1    8[BANK1 ] unsigned char 
  9652 ;; Auto vars:     Size  Location     Type
  9653 ;;  addr            1   10[BANK1 ] unsigned char 
  9654 ;; Return value:  Size  Location     Type
  9655 ;;                  1    wreg      void 
  9656 ;; Registers used:
  9657 ;;		wreg, status,2, status,0, pclath, cstack
  9658 ;; Tracked objects:
  9659 ;;		On entry : 0/0
  9660 ;;		On exit  : 0/0
  9661 ;;		Unchanged: 0/0
  9662 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9663 ;;      Params:         0       0       1       0       0
  9664 ;;      Locals:         0       0       1       0       0
  9665 ;;      Temps:          0       0       1       0       0
  9666 ;;      Totals:         0       0       3       0       0
  9667 ;;Total ram usage:        3 bytes
  9668 ;; Hardware stack levels used:    1
  9669 ;; Hardware stack levels required when called:    4
  9670 ;; This function calls:
  9671 ;;		_spiSoftTxDat
  9672 ;; This function is called by:
  9673 ;;		_MFRC522_Clear_Bit
  9674 ;;		_MFRC522_Set_Bit
  9675 ;;		_MFRC522_ToCard
  9676 ;;		_MFRC522_AntiColl
  9677 ;; This function uses a non-reentrant model
  9678 ;;
  9679                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  9680                           	line	416
  9681                           global __ptext28
  9682                           __ptext28:	;psect for function _MFRC522_Wr
  9683  0951                     psect	text28
  9684                           	file	"rfid.c"
  9685                           	line	416
  9686                           	global	__size_of_MFRC522_Wr
  9687                           	__size_of_MFRC522_Wr	equ	__end_of_MFRC522_Wr-_MFRC522_Wr
  9688  001D                     	
  9689                           _MFRC522_Wr:	
  9690  0951                     ;incstack = 0
  9691                           	opt	stack 2
  9692                           ; Regs used in _MFRC522_Wr: [wreg+status,2+status,0+pclath+cstack]
  9693                           ;MFRC522_Wr@addr stored from wreg
  9694                           	bsf	status, 5	;RP0=1, select bank1
  9695  0951  1683               	bcf	status, 6	;RP1=0, select bank1
  9696  0952  1303               	movwf	(MFRC522_Wr@addr)^080h
  9697  0953  00AA               	line	418
  9698                           	
  9699                           l3332:	
  9700  0954                     ;rfid.c: 416: static void MFRC522_Wr(char addr, char value);rfid.c: 417: {;rfid.c: 418: 
                                  PORTAbits.RA5 = 0;
  9701                           	bcf	status, 5	;RP0=0, select bank0
  9702  0954  1283               	bcf	status, 6	;RP1=0, select bank0
  9703  0955  1303               	bcf	(5),5	;volatile
  9704  0956  1285               	line	419
  9705                           	
  9706                           l3334:	
  9707  0957                     ;rfid.c: 419:  spiSoftTxDat((addr << 1) & 0x7E);
  9708                           	bsf	status, 5	;RP0=1, select bank1
  9709  0957  1683               	bcf	status, 6	;RP1=0, select bank1
  9710  0958  1303               	movf	(MFRC522_Wr@addr)^080h,w
  9711  0959  082A               	movwf	(??_MFRC522_Wr+0)^080h+0
  9712  095A  00A9               	addwf	(??_MFRC522_Wr+0)^080h+0,w
  9713  095B  0729               	andlw	07Eh
  9714  095C  397E               	fcall	_spiSoftTxDat
  9715  095D  120A  158A  22F1  120A  158A  	line	420
  9716                           ;rfid.c: 420:  spiSoftTxDat(value);
  9717                           	bsf	status, 5	;RP0=1, select bank1
  9718  0962  1683               	bcf	status, 6	;RP1=0, select bank1
  9719  0963  1303               	movf	(MFRC522_Wr@value)^080h,w
  9720  0964  0828               	fcall	_spiSoftTxDat
  9721  0965  120A  158A  22F1  120A  158A  	line	421
  9722                           	
  9723                           l3336:	
  9724  096A                     ;rfid.c: 421:  PORTAbits.RA5 = 1;
  9725                           	bcf	status, 5	;RP0=0, select bank0
  9726  096A  1283               	bcf	status, 6	;RP1=0, select bank0
  9727  096B  1303               	bsf	(5),5	;volatile
  9728  096C  1685               	line	422
  9729                           	
  9730                           l345:	
  9731  096D                     	return
  9732  096D  0008               	opt stack 0
  9733                           GLOBAL	__end_of_MFRC522_Wr
  9734                           	__end_of_MFRC522_Wr:
  9735  096E                     	signat	_MFRC522_Wr,8313
  9736                           	global	_MFRC522_Rd
  9737                           
  9738 ;; *************** function _MFRC522_Rd *****************
  9739 ;; Defined at:
  9740 ;;		line 424 in file "rfid.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  addr            1    wreg     unsigned char 
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;  addr            1    6[BANK1 ] unsigned char 
  9745 ;;  value           1    7[BANK1 ] unsigned char 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  1    wreg      unsigned char 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0, pclath, cstack
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9755 ;;      Params:         0       0       0       0       0
  9756 ;;      Locals:         0       0       2       0       0
  9757 ;;      Temps:          0       0       1       0       0
  9758 ;;      Totals:         0       0       3       0       0
  9759 ;;Total ram usage:        3 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; Hardware stack levels required when called:    4
  9762 ;; This function calls:
  9763 ;;		_spiSoftRxDat
  9764 ;;		_spiSoftTxDat
  9765 ;; This function is called by:
  9766 ;;		_MFRC522_Clear_Bit
  9767 ;;		_MFRC522_Set_Bit
  9768 ;;		_MFRC522_ToCard
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
  9772                           	line	424
  9773                           global __ptext29
  9774                           __ptext29:	;psect for function _MFRC522_Rd
  9775  09AB                     psect	text29
  9776                           	file	"rfid.c"
  9777                           	line	424
  9778                           	global	__size_of_MFRC522_Rd
  9779                           	__size_of_MFRC522_Rd	equ	__end_of_MFRC522_Rd-_MFRC522_Rd
  9780  0024                     	
  9781                           _MFRC522_Rd:	
  9782  09AB                     ;incstack = 0
  9783                           	opt	stack 0
  9784                           ; Regs used in _MFRC522_Rd: [wreg+status,2+status,0+pclath+cstack]
  9785                           ;MFRC522_Rd@addr stored from wreg
  9786                           	bsf	status, 5	;RP0=1, select bank1
  9787  09AB  1683               	bcf	status, 6	;RP1=0, select bank1
  9788  09AC  1303               	movwf	(MFRC522_Rd@addr)^080h
  9789  09AD  00A6               	line	427
  9790                           	
  9791                           l3338:	
  9792  09AE                     ;rfid.c: 424: static char MFRC522_Rd(char addr);rfid.c: 425: {;rfid.c: 426:  char value;
                                 ;rfid.c: 427:  PORTAbits.RA5 = 0;
  9793                           	bcf	status, 5	;RP0=0, select bank0
  9794  09AE  1283               	bcf	status, 6	;RP1=0, select bank0
  9795  09AF  1303               	bcf	(5),5	;volatile
  9796  09B0  1285               	line	428
  9797                           	
  9798                           l3340:	
  9799  09B1                     ;rfid.c: 428:  spiSoftTxDat(((addr << 1) & 0x7E) | 0x80);
  9800                           	bsf	status, 5	;RP0=1, select bank1
  9801  09B1  1683               	bcf	status, 6	;RP1=0, select bank1
  9802  09B2  1303               	movf	(MFRC522_Rd@addr)^080h,w
  9803  09B3  0826               	movwf	(??_MFRC522_Rd+0)^080h+0
  9804  09B4  00A5               	addwf	(??_MFRC522_Rd+0)^080h+0,w
  9805  09B5  0725               	andlw	07Eh
  9806  09B6  397E               	iorlw	080h
  9807  09B7  3880               	fcall	_spiSoftTxDat
  9808  09B8  120A  158A  22F1  120A  158A  	line	431
  9809                           ;rfid.c: 431:  value = spiSoftRxDat();
  9810                           	fcall	_spiSoftRxDat
  9811  09BD  120A  158A  22BE  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  9812  09C2  1683               	bcf	status, 6	;RP1=0, select bank1
  9813  09C3  1303               	movwf	(??_MFRC522_Rd+0)^080h+0
  9814  09C4  00A5               	movf	(??_MFRC522_Rd+0)^080h+0,w
  9815  09C5  0825               	movwf	(MFRC522_Rd@value)^080h
  9816  09C6  00A7               	line	432
  9817                           	
  9818                           l3342:	
  9819  09C7                     ;rfid.c: 432:  PORTAbits.RA5 = 1;
  9820                           	bcf	status, 5	;RP0=0, select bank0
  9821  09C7  1283               	bcf	status, 6	;RP1=0, select bank0
  9822  09C8  1303               	bsf	(5),5	;volatile
  9823  09C9  1685               	line	433
  9824                           	
  9825                           l3344:	
  9826  09CA                     ;rfid.c: 433:  return value;
  9827                           	bsf	status, 5	;RP0=1, select bank1
  9828  09CA  1683               	bcf	status, 6	;RP1=0, select bank1
  9829  09CB  1303               	movf	(MFRC522_Rd@value)^080h,w
  9830  09CC  0827               	goto	l348
  9831  09CD  29CE               	
  9832                           l3346:	
  9833  09CE                     	line	434
  9834                           	
  9835                           l348:	
  9836  09CE                     	return
  9837  09CE  0008               	opt stack 0
  9838                           GLOBAL	__end_of_MFRC522_Rd
  9839                           	__end_of_MFRC522_Rd:
  9840  09CF                     	signat	_MFRC522_Rd,4217
  9841                           	global	_spiSoftTxDat
  9842                           
  9843 ;; *************** function _spiSoftTxDat *****************
  9844 ;; Defined at:
  9845 ;;		line 67 in file "spi.c"
  9846 ;; Parameters:    Size  Location     Type
  9847 ;;  dado            1    wreg     unsigned char 
  9848 ;; Auto vars:     Size  Location     Type
  9849 ;;  dado            1    2[BANK1 ] unsigned char 
  9850 ;;  a               1    4[BANK1 ] unsigned char 
  9851 ;;  reg             1    3[BANK1 ] unsigned char 
  9852 ;; Return value:  Size  Location     Type
  9853 ;;                  1    wreg      void 
  9854 ;; Registers used:
  9855 ;;		wreg, status,2, status,0, pclath, cstack
  9856 ;; Tracked objects:
  9857 ;;		On entry : 0/0
  9858 ;;		On exit  : 0/0
  9859 ;;		Unchanged: 0/0
  9860 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9861 ;;      Params:         0       0       0       0       0
  9862 ;;      Locals:         0       0       3       0       0
  9863 ;;      Temps:          0       0       2       0       0
  9864 ;;      Totals:         0       0       5       0       0
  9865 ;;Total ram usage:        5 bytes
  9866 ;; Hardware stack levels used:    1
  9867 ;; Hardware stack levels required when called:    3
  9868 ;; This function calls:
  9869 ;;		_spiSoftClk
  9870 ;; This function is called by:
  9871 ;;		_mfrc522ClrBit
  9872 ;;		_mfrc522SetBit
  9873 ;;		_mfrc522Rst
  9874 ;;		_mfrc522Iniciar
  9875 ;;		_tagTxCmd
  9876 ;;		_procura_tag
  9877 ;;		_MFRC522_Wr
  9878 ;;		_MFRC522_Rd
  9879 ;; This function uses a non-reentrant model
  9880 ;;
  9881                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  9882                           	file	"spi.c"
  9883                           	line	67
  9884                           global __ptext30
  9885                           __ptext30:	;psect for function _spiSoftTxDat
  9886  0AF1                     psect	text30
  9887                           	file	"spi.c"
  9888                           	line	67
  9889                           	global	__size_of_spiSoftTxDat
  9890                           	__size_of_spiSoftTxDat	equ	__end_of_spiSoftTxDat-_spiSoftTxDat
  9891  0037                     	
  9892                           _spiSoftTxDat:	
  9893  0AF1                     ;incstack = 0
  9894                           	opt	stack 2
  9895                           ; Regs used in _spiSoftTxDat: [wreg+status,2+status,0+pclath+cstack]
  9896                           ;spiSoftTxDat@dado stored from wreg
  9897                           	bsf	status, 5	;RP0=1, select bank1
  9898  0AF1  1683               	bcf	status, 6	;RP1=0, select bank1
  9899  0AF2  1303               	movwf	(spiSoftTxDat@dado)^080h
  9900  0AF3  00A2               	line	70
  9901                           	
  9902                           l3292:	
  9903  0AF4                     ;spi.c: 67: void spiSoftTxDat(char dado);spi.c: 68: {;spi.c: 69:  char reg, a;;spi.c: 70
                                 :  reg = dado;
  9904                           	movf	(spiSoftTxDat@dado)^080h,w
  9905  0AF4  0822               	movwf	(??_spiSoftTxDat+0)^080h+0
  9906  0AF5  00A0               	movf	(??_spiSoftTxDat+0)^080h+0,w
  9907  0AF6  0820               	movwf	(spiSoftTxDat@reg)^080h
  9908  0AF7  00A3               	line	71
  9909                           	
  9910                           l3294:	
  9911  0AF8                     ;spi.c: 71:  for (a = 0; a < 8; a++)
  9912                           	clrf	(spiSoftTxDat@a)^080h
  9913  0AF8  01A4               	
  9914                           l3296:	
  9915  0AF9                     	movlw	low(08h)
  9916  0AF9  3008               	subwf	(spiSoftTxDat@a)^080h,w
  9917  0AFA  0224               	skipc
  9918  0AFB  1C03               	goto	u2471
  9919  0AFC  2AFE               	goto	u2470
  9920  0AFD  2AFF               u2471:
  9921  0AFE                     	goto	l446
  9922  0AFE  2B01               u2470:
  9923  0AFF                     	goto	l450
  9924  0AFF  2B27               	
  9925                           l3298:	
  9926  0B00                     	goto	l450
  9927  0B00  2B27               	
  9928                           l446:	
  9929  0B01                     	line	73
  9930                           ;spi.c: 72:  {;spi.c: 73:   if (reg & 0x80)PORTCbits.RC5 = 1;
  9931                           	btfss	(spiSoftTxDat@reg)^080h,(7)&7
  9932  0B01  1FA3               	goto	u2481
  9933  0B02  2B04               	goto	u2480
  9934  0B03  2B05               u2481:
  9935  0B04                     	goto	l448
  9936  0B04  2B09               u2480:
  9937  0B05                     	
  9938                           l3300:	
  9939  0B05                     	bcf	status, 5	;RP0=0, select bank0
  9940  0B05  1283               	bcf	status, 6	;RP1=0, select bank0
  9941  0B06  1303               	bsf	(7),5	;volatile
  9942  0B07  1687               	goto	l3302
  9943  0B08  2B0D               	line	74
  9944                           ;spi.c: 74:   else PORTCbits.RC5 = 0;
  9945                           	
  9946                           l448:	
  9947  0B09                     	bcf	status, 5	;RP0=0, select bank0
  9948  0B09  1283               	bcf	status, 6	;RP1=0, select bank0
  9949  0B0A  1303               	bcf	(7),5	;volatile
  9950  0B0B  1287               	goto	l3302
  9951  0B0C  2B0D               	
  9952                           l449:	
  9953  0B0D                     	line	75
  9954                           	
  9955                           l3302:	
  9956  0B0D                     ;spi.c: 75:   reg = reg << 1;
  9957                           	bsf	status, 5	;RP0=1, select bank1
  9958  0B0D  1683               	bcf	status, 6	;RP1=0, select bank1
  9959  0B0E  1303               	movf	(spiSoftTxDat@reg)^080h,w
  9960  0B0F  0823               	movwf	(??_spiSoftTxDat+0)^080h+0
  9961  0B10  00A0               	addwf	(??_spiSoftTxDat+0)^080h+0,w
  9962  0B11  0720               	movwf	(??_spiSoftTxDat+1)^080h+0
  9963  0B12  00A1               	movf	(??_spiSoftTxDat+1)^080h+0,w
  9964  0B13  0821               	movwf	(spiSoftTxDat@reg)^080h
  9965  0B14  00A3               	line	76
  9966                           	
  9967                           l3304:	
  9968  0B15                     ;spi.c: 76:   spiSoftClk();
  9969                           	fcall	_spiSoftClk
  9970  0B15  160A  118A  27DB  120A  158A  	line	77
  9971                           	
  9972                           l3306:	
  9973  0B1A                     ;spi.c: 77:  }
  9974                           	movlw	low(01h)
  9975  0B1A  3001               	bsf	status, 5	;RP0=1, select bank1
  9976  0B1B  1683               	bcf	status, 6	;RP1=0, select bank1
  9977  0B1C  1303               	movwf	(??_spiSoftTxDat+0)^080h+0
  9978  0B1D  00A0               	movf	(??_spiSoftTxDat+0)^080h+0,w
  9979  0B1E  0820               	addwf	(spiSoftTxDat@a)^080h,f
  9980  0B1F  07A4               	
  9981                           l3308:	
  9982  0B20                     	movlw	low(08h)
  9983  0B20  3008               	subwf	(spiSoftTxDat@a)^080h,w
  9984  0B21  0224               	skipc
  9985  0B22  1C03               	goto	u2491
  9986  0B23  2B25               	goto	u2490
  9987  0B24  2B26               u2491:
  9988  0B25                     	goto	l446
  9989  0B25  2B01               u2490:
  9990  0B26                     	goto	l450
  9991  0B26  2B27               	
  9992                           l447:	
  9993  0B27                     	line	78
  9994                           	
  9995                           l450:	
  9996  0B27                     	return
  9997  0B27  0008               	opt stack 0
  9998                           GLOBAL	__end_of_spiSoftTxDat
  9999                           	__end_of_spiSoftTxDat:
 10000  0B28                     	signat	_spiSoftTxDat,4217
 10001                           	global	_spiSoftRxDat
 10002                           
 10003 ;; *************** function _spiSoftRxDat *****************
 10004 ;; Defined at:
 10005 ;;		line 80 in file "spi.c"
 10006 ;; Parameters:    Size  Location     Type
 10007 ;;		None
 10008 ;; Auto vars:     Size  Location     Type
 10009 ;;  a               1    3[BANK1 ] unsigned char 
 10010 ;;  rc              1    2[BANK1 ] unsigned char 
 10011 ;; Return value:  Size  Location     Type
 10012 ;;                  1    wreg      unsigned char 
 10013 ;; Registers used:
 10014 ;;		wreg, status,2, status,0, pclath, cstack
 10015 ;; Tracked objects:
 10016 ;;		On entry : 0/0
 10017 ;;		On exit  : 0/0
 10018 ;;		Unchanged: 0/0
 10019 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10020 ;;      Params:         0       0       0       0       0
 10021 ;;      Locals:         0       0       2       0       0
 10022 ;;      Temps:          0       0       2       0       0
 10023 ;;      Totals:         0       0       4       0       0
 10024 ;;Total ram usage:        4 bytes
 10025 ;; Hardware stack levels used:    1
 10026 ;; Hardware stack levels required when called:    3
 10027 ;; This function calls:
 10028 ;;		_spiSoftClk
 10029 ;; This function is called by:
 10030 ;;		_mfrc522ClrBit
 10031 ;;		_mfrc522SetBit
 10032 ;;		_tagTxCmd
 10033 ;;		_MFRC522_Rd
 10034 ;; This function uses a non-reentrant model
 10035 ;;
 10036                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 10037                           	line	80
 10038                           global __ptext31
 10039                           __ptext31:	;psect for function _spiSoftRxDat
 10040  0ABE                     psect	text31
 10041                           	file	"spi.c"
 10042                           	line	80
 10043                           	global	__size_of_spiSoftRxDat
 10044                           	__size_of_spiSoftRxDat	equ	__end_of_spiSoftRxDat-_spiSoftRxDat
 10045  0033                     	
 10046                           _spiSoftRxDat:	
 10047  0ABE                     ;incstack = 0
 10048                           	opt	stack 2
 10049                           ; Regs used in _spiSoftRxDat: [wreg+status,2+status,0+pclath+cstack]
 10050                           	line	83
 10051                           	
 10052                           l3270:	
 10053  0ABE                     ;spi.c: 82:  char rc, a;;spi.c: 83:  for (a = 0; a < 8; a++)
 10054                           	bsf	status, 5	;RP0=1, select bank1
 10055  0ABE  1683               	bcf	status, 6	;RP1=0, select bank1
 10056  0ABF  1303               	clrf	(spiSoftRxDat@a)^080h
 10057  0AC0  01A3               	
 10058                           l3272:	
 10059  0AC1                     	movlw	low(08h)
 10060  0AC1  3008               	subwf	(spiSoftRxDat@a)^080h,w
 10061  0AC2  0223               	skipc
 10062  0AC3  1C03               	goto	u2441
 10063  0AC4  2AC6               	goto	u2440
 10064  0AC5  2AC7               u2441:
 10065  0AC6                     	goto	l3276
 10066  0AC6  2AC9               u2440:
 10067  0AC7                     	goto	l3288
 10068  0AC7  2AEE               	
 10069                           l3274:	
 10070  0AC8                     	goto	l3288
 10071  0AC8  2AEE               	
 10072                           l453:	
 10073  0AC9                     	line	85
 10074                           	
 10075                           l3276:	
 10076  0AC9                     ;spi.c: 84:  {;spi.c: 85:   rc = rc << 1;
 10077                           	movf	(spiSoftRxDat@rc)^080h,w
 10078  0AC9  0822               	movwf	(??_spiSoftRxDat+0)^080h+0
 10079  0ACA  00A0               	addwf	(??_spiSoftRxDat+0)^080h+0,w
 10080  0ACB  0720               	movwf	(??_spiSoftRxDat+1)^080h+0
 10081  0ACC  00A1               	movf	(??_spiSoftRxDat+1)^080h+0,w
 10082  0ACD  0821               	movwf	(spiSoftRxDat@rc)^080h
 10083  0ACE  00A2               	line	86
 10084                           	
 10085                           l3278:	
 10086  0ACF                     ;spi.c: 86:   if (PORTCbits.RC4)rc++;
 10087                           	bcf	status, 5	;RP0=0, select bank0
 10088  0ACF  1283               	bcf	status, 6	;RP1=0, select bank0
 10089  0AD0  1303               	btfss	(7),4	;volatile
 10090  0AD1  1E07               	goto	u2451
 10091  0AD2  2AD4               	goto	u2450
 10092  0AD3  2AD5               u2451:
 10093  0AD4                     	goto	l3282
 10094  0AD4  2ADC               u2450:
 10095  0AD5                     	
 10096                           l3280:	
 10097  0AD5                     	movlw	low(01h)
 10098  0AD5  3001               	bsf	status, 5	;RP0=1, select bank1
 10099  0AD6  1683               	bcf	status, 6	;RP1=0, select bank1
 10100  0AD7  1303               	movwf	(??_spiSoftRxDat+0)^080h+0
 10101  0AD8  00A0               	movf	(??_spiSoftRxDat+0)^080h+0,w
 10102  0AD9  0820               	addwf	(spiSoftRxDat@rc)^080h,f
 10103  0ADA  07A2               	goto	l3282
 10104  0ADB  2ADC               	
 10105                           l455:	
 10106  0ADC                     	line	87
 10107                           	
 10108                           l3282:	
 10109  0ADC                     ;spi.c: 87:   spiSoftClk();
 10110                           	fcall	_spiSoftClk
 10111  0ADC  160A  118A  27DB  120A  158A  	line	88
 10112                           	
 10113                           l3284:	
 10114  0AE1                     ;spi.c: 88:  }
 10115                           	movlw	low(01h)
 10116  0AE1  3001               	bsf	status, 5	;RP0=1, select bank1
 10117  0AE2  1683               	bcf	status, 6	;RP1=0, select bank1
 10118  0AE3  1303               	movwf	(??_spiSoftRxDat+0)^080h+0
 10119  0AE4  00A0               	movf	(??_spiSoftRxDat+0)^080h+0,w
 10120  0AE5  0820               	addwf	(spiSoftRxDat@a)^080h,f
 10121  0AE6  07A3               	
 10122                           l3286:	
 10123  0AE7                     	movlw	low(08h)
 10124  0AE7  3008               	subwf	(spiSoftRxDat@a)^080h,w
 10125  0AE8  0223               	skipc
 10126  0AE9  1C03               	goto	u2461
 10127  0AEA  2AEC               	goto	u2460
 10128  0AEB  2AED               u2461:
 10129  0AEC                     	goto	l3276
 10130  0AEC  2AC9               u2460:
 10131  0AED                     	goto	l3288
 10132  0AED  2AEE               	
 10133                           l454:	
 10134  0AEE                     	line	89
 10135                           	
 10136                           l3288:	
 10137  0AEE                     ;spi.c: 89:  return (rc);
 10138                           	movf	(spiSoftRxDat@rc)^080h,w
 10139  0AEE  0822               	goto	l456
 10140  0AEF  2AF0               	
 10141                           l3290:	
 10142  0AF0                     	line	90
 10143                           	
 10144                           l456:	
 10145  0AF0                     	return
 10146  0AF0  0008               	opt stack 0
 10147                           GLOBAL	__end_of_spiSoftRxDat
 10148                           	__end_of_spiSoftRxDat:
 10149  0AF1                     	signat	_spiSoftRxDat,89
 10150                           	global	_spiSoftClk
 10151                           
 10152 ;; *************** function _spiSoftClk *****************
 10153 ;; Defined at:
 10154 ;;		line 17 in file "spi.c"
 10155 ;; Parameters:    Size  Location     Type
 10156 ;;		None
 10157 ;; Auto vars:     Size  Location     Type
 10158 ;;		None
 10159 ;; Return value:  Size  Location     Type
 10160 ;;                  1    wreg      void 
 10161 ;; Registers used:
 10162 ;;		None
 10163 ;; Tracked objects:
 10164 ;;		On entry : 0/0
 10165 ;;		On exit  : 0/0
 10166 ;;		Unchanged: 0/0
 10167 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10168 ;;      Params:         0       0       0       0       0
 10169 ;;      Locals:         0       0       0       0       0
 10170 ;;      Temps:          0       0       0       0       0
 10171 ;;      Totals:         0       0       0       0       0
 10172 ;;Total ram usage:        0 bytes
 10173 ;; Hardware stack levels used:    1
 10174 ;; Hardware stack levels required when called:    2
 10175 ;; This function calls:
 10176 ;;		Nothing
 10177 ;; This function is called by:
 10178 ;;		_spiSoftTxCmd
 10179 ;;		_spiSoftTxDat
 10180 ;;		_spiSoftRxDat
 10181 ;; This function uses a non-reentrant model
 10182 ;;
 10183                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 10184                           	line	17
 10185                           global __ptext32
 10186                           __ptext32:	;psect for function _spiSoftClk
 10187  17DB                     psect	text32
 10188                           	file	"spi.c"
 10189                           	line	17
 10190                           	global	__size_of_spiSoftClk
 10191                           	__size_of_spiSoftClk	equ	__end_of_spiSoftClk-_spiSoftClk
 10192  000A                     	
 10193                           _spiSoftClk:	
 10194  17DB                     ;incstack = 0
 10195                           	opt	stack 2
 10196                           ; Regs used in _spiSoftClk: []
 10197                           	line	19
 10198                           	
 10199                           l3268:	
 10200  17DB                     ;spi.c: 19:  PORTCbits.RC3 = 1;
 10201                           	bcf	status, 5	;RP0=0, select bank0
 10202  17DB  1283               	bcf	status, 6	;RP1=0, select bank0
 10203  17DC  1303               	bsf	(7),3	;volatile
 10204  17DD  1587               	line	20
 10205                           ;spi.c: 20:  _delay((unsigned long)((1)*(20000000/4000000.0)));
 10206                           		opt asmopt_push
 10207                           	opt asmopt_off
 10208                           	nop2	;2 cycle nop
 10209  17DE  2FDF               	nop2	;2 cycle nop
 10210  17DF  2FE0               	nop
 10211  17E0  0000               	opt asmopt_pop
 10212                           
 10213                           	line	21
 10214                           ;spi.c: 21:  PORTCbits.RC3 = 0;
 10215                           	bcf	status, 5	;RP0=0, select bank0
 10216  17E1  1283               	bcf	status, 6	;RP1=0, select bank0
 10217  17E2  1303               	bcf	(7),3	;volatile
 10218  17E3  1187               	line	22
 10219                           	
 10220                           l428:	
 10221  17E4                     	return
 10222  17E4  0008               	opt stack 0
 10223                           GLOBAL	__end_of_spiSoftClk
 10224                           	__end_of_spiSoftClk:
 10225  17E5                     	signat	_spiSoftClk,89
 10226                           	global	_isr
 10227                           
 10228 ;; *************** function _isr *****************
 10229 ;; Defined at:
 10230 ;;		line 15 in file "interrupt.c"
 10231 ;; Parameters:    Size  Location     Type
 10232 ;;		None
 10233 ;; Auto vars:     Size  Location     Type
 10234 ;;		None
 10235 ;; Return value:  Size  Location     Type
 10236 ;;                  1    wreg      void 
 10237 ;; Registers used:
 10238 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10239 ;; Tracked objects:
 10240 ;;		On entry : 0/0
 10241 ;;		On exit  : 0/0
 10242 ;;		Unchanged: 0/0
 10243 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10244 ;;      Params:         0       0       0       0       0
 10245 ;;      Locals:         0       8       0       0       0
 10246 ;;      Temps:          0       7       0       0       0
 10247 ;;      Totals:         0      15       0       0       0
 10248 ;;Total ram usage:       15 bytes
 10249 ;; Hardware stack levels used:    1
 10250 ;; Hardware stack levels required when called:    1
 10251 ;; This function calls:
 10252 ;;		___aldiv
 10253 ;;		___lmul
 10254 ;;		_tmr_tick_int
 10255 ;; This function is called by:
 10256 ;;		Interrupt level 1
 10257 ;; This function uses a non-reentrant model
 10258 ;;
 10259                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 10260                           	file	"interrupt.c"
 10261                           	line	15
 10262                           global __ptext33
 10263                           __ptext33:	;psect for function _isr
 10264  06C4                     psect	text33
 10265                           	file	"interrupt.c"
 10266                           	line	15
 10267                           	global	__size_of_isr
 10268                           	__size_of_isr	equ	__end_of_isr-_isr
 10269  00E7                     	
 10270                           _isr:	
 10271  06C4                     ;incstack = 0
 10272                           	opt	stack 0
 10273                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10274                           psect	intentry,class=CODE,delta=2
 10275                           global __pintentry
 10276                           __pintentry:
 10277  0004                     global interrupt_function
 10278                           interrupt_function:
 10279  0004                     	global saved_w
 10280                           	saved_w	set	btemp+0
 10281  007E                     	movwf	saved_w
 10282  0004  00FE               	swapf	status,w
 10283  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
 10284  0006  1283               	bcf	status, 6	;RP1=0, select bank0
 10285  0007  1303               	movwf	(??_isr+4)
 10286  0008  00B6               	movf	fsr0,w
 10287  0009  0804               	movwf	(??_isr+5)
 10288  000A  00B7               	movf	pclath,w
 10289  000B  080A               	movwf	(??_isr+6)
 10290  000C  00B8               	ljmp	_isr
 10291  000D  120A  118A  2EC4   psect	text33
 10292                           	line	17
 10293                           	
 10294                           i1l4794:	
 10295  06C4                     ;interrupt.c: 17:     if ( INTCONbits.RBIE && INTCONbits.RBIF )
 10296                           	btfss	(11),3	;volatile
 10297  06C4  1D8B               	goto	u429_21
 10298  06C5  2EC7               	goto	u429_20
 10299  06C6  2EC8               u429_21:
 10300  06C7                     	goto	i1l4820
 10301  06C7  2F94               u429_20:
 10302  06C8                     	
 10303                           i1l4796:	
 10304  06C8                     	btfss	(11),0	;volatile
 10305  06C8  1C0B               	goto	u430_21
 10306  06C9  2ECB               	goto	u430_20
 10307  06CA  2ECC               u430_21:
 10308  06CB                     	goto	i1l4820
 10309  06CB  2F94               u430_20:
 10310  06CC                     	line	20
 10311                           	
 10312                           i1l4798:	
 10313  06CC                     ;interrupt.c: 18:     {;interrupt.c: 20:         if(PORTBbits.RB7)
 10314                           	btfss	(6),7	;volatile
 10315  06CC  1F86               	goto	u431_21
 10316  06CD  2ECF               	goto	u431_20
 10317  06CE  2ED0               u431_21:
 10318  06CF                     	goto	i1l163
 10319  06CF  2EDC               u431_20:
 10320  06D0                     	line	22
 10321                           	
 10322                           i1l4800:	
 10323  06D0                     ;interrupt.c: 21:         {;interrupt.c: 22:             TMR1H = 0;
 10324                           	clrf	(15)	;volatile
 10325  06D0  018F               	line	23
 10326                           ;interrupt.c: 23:             TMR1L = 0;
 10327                           	clrf	(14)	;volatile
 10328  06D1  018E               	line	24
 10329                           	
 10330                           i1l4802:	
 10331  06D2                     ;interrupt.c: 24:             time = 0;
 10332                           	movlw	high highword(0)
 10333  06D2  3000               	movwf	(_time+3)
 10334  06D3  00CC               	movlw	low highword(0)
 10335  06D4  3000               	movwf	(_time+2)
 10336  06D5  00CB               	movlw	high(0)
 10337  06D6  3000               	movwf	(_time+1)
 10338  06D7  00CA               	movlw	low(0)
 10339  06D8  3000               	movwf	(_time)
 10340  06D9  00C9               
 10341                           	line	25
 10342                           	
 10343                           i1l4804:	
 10344  06DA                     ;interrupt.c: 25:             T1CONbits.TMR1ON = 1;
 10345                           	bsf	(16),0	;volatile
 10346  06DA  1410               	line	26
 10347                           ;interrupt.c: 26:         }
 10348                           	goto	i1l4818
 10349  06DB  2F92               	line	27
 10350                           ;interrupt.c: 27:         else
 10351                           	
 10352                           i1l163:	
 10353  06DC                     	line	29
 10354                           ;interrupt.c: 28:         {;interrupt.c: 29:             T1CONbits.TMR1ON = 0;
 10355                           	bcf	(16),0	;volatile
 10356  06DC  1010               	line	30
 10357                           	
 10358                           i1l4806:	
 10359  06DD                     ;interrupt.c: 30:             time = TMR1H;
 10360                           	movf	(15),w	;volatile
 10361  06DD  080F               	movwf	(??_isr+0)+0
 10362  06DE  00B2               	clrf	(??_isr+0)+0+1
 10363  06DF  01B3               	clrf	(??_isr+0)+0+2
 10364  06E0  01B4               	clrf	(??_isr+0)+0+3
 10365  06E1  01B5               	movf	3+(??_isr+0)+0,w
 10366  06E2  0835               	movwf	(_time+3)
 10367  06E3  00CC               	movf	2+(??_isr+0)+0,w
 10368  06E4  0834               	movwf	(_time+2)
 10369  06E5  00CB               	movf	1+(??_isr+0)+0,w
 10370  06E6  0833               	movwf	(_time+1)
 10371  06E7  00CA               	movf	0+(??_isr+0)+0,w
 10372  06E8  0832               	movwf	(_time)
 10373  06E9  00C9               
 10374                           	line	31
 10375                           	
 10376                           i1l4808:	
 10377  06EA                     ;interrupt.c: 31:             time <<= 8;
 10378                           	movlw	08h
 10379  06EA  3008               	movwf	(??_isr+0)+0
 10380  06EB  00B2               u432_25:
 10381  06EC                     	clrc
 10382  06EC  1003               	rlf	(_time),f
 10383  06ED  0DC9               	rlf	(_time+1),f
 10384  06EE  0DCA               	rlf	(_time+2),f
 10385  06EF  0DCB               	rlf	(_time+3),f
 10386  06F0  0DCC               	decfsz	(??_isr+0)+0
 10387  06F1  0BB2               	goto	u432_25
 10388  06F2  2EEC               	line	32
 10389                           	
 10390                           i1l4810:	
 10391  06F3                     ;interrupt.c: 32:             time += TMR1L;
 10392                           	movf	(14),w	;volatile
 10393  06F3  080E               	movwf	(??_isr+0)+0
 10394  06F4  00B2               	clrf	(??_isr+0)+0+1
 10395  06F5  01B3               	clrf	(??_isr+0)+0+2
 10396  06F6  01B4               	clrf	(??_isr+0)+0+3
 10397  06F7  01B5               	movf	0+(??_isr+0)+0,w
 10398  06F8  0832               	addwf	(_time),f
 10399  06F9  07C9               	movf	1+(??_isr+0)+0,w
 10400  06FA  0833               	clrz
 10401  06FB  1103               	skipnc
 10402  06FC  1803               	addlw	1
 10403  06FD  3E01               	skipnz
 10404  06FE  1903               	goto	u433_21
 10405  06FF  2F01               	addwf	(_time+1),f
 10406  0700  07CA               u433_21:
 10407  0701                     	movf	2+(??_isr+0)+0,w
 10408  0701  0834               	clrz
 10409  0702  1103               	skipnc
 10410  0703  1803               	addlw	1
 10411  0704  3E01               	skipnz
 10412  0705  1903               	goto	u433_22
 10413  0706  2F08               	addwf	(_time+2),f
 10414  0707  07CB               u433_22:
 10415  0708                     	movf	3+(??_isr+0)+0,w
 10416  0708  0835               	clrz
 10417  0709  1103               	skipnc
 10418  070A  1803               	addlw	1
 10419  070B  3E01               	skipnz
 10420  070C  1903               	goto	u433_23
 10421  070D  2F0F               	addwf	(_time+3),f
 10422  070E  07CC               u433_23:
 10423  070F                     
 10424                           	line	33
 10425                           	
 10426                           i1l4812:	
 10427  070F                     ;interrupt.c: 33:             dist = ((((time*34717) /5000) /2) /1000) ;
 10428                           	movlw	0
 10429  070F  3000               	movwf	(___aldiv@divisor+3)
 10430  0710  00A7               	movlw	0
 10431  0711  3000               	movwf	(___aldiv@divisor+2)
 10432  0712  00A6               	movlw	013h
 10433  0713  3013               	movwf	(___aldiv@divisor+1)
 10434  0714  00A5               	movlw	088h
 10435  0715  3088               	movwf	(___aldiv@divisor)
 10436  0716  00A4               
 10437                           	movf	(_time+3),w
 10438  0717  084C               	movwf	(___lmul@multiplier+3)
 10439  0718  00F3               	movf	(_time+2),w
 10440  0719  084B               	movwf	(___lmul@multiplier+2)
 10441  071A  00F2               	movf	(_time+1),w
 10442  071B  084A               	movwf	(___lmul@multiplier+1)
 10443  071C  00F1               	movf	(_time),w
 10444  071D  0849               	movwf	(___lmul@multiplier)
 10445  071E  00F0               
 10446                           	movlw	0
 10447  071F  3000               	movwf	(___lmul@multiplicand+3)
 10448  0720  00F7               	movlw	0
 10449  0721  3000               	movwf	(___lmul@multiplicand+2)
 10450  0722  00F6               	movlw	087h
 10451  0723  3087               	movwf	(___lmul@multiplicand+1)
 10452  0724  00F5               	movlw	09Dh
 10453  0725  309D               	movwf	(___lmul@multiplicand)
 10454  0726  00F4               
 10455                           	fcall	___lmul
 10456  0727  120A  158A  24C1  120A  118A  	movf	(3+(?___lmul)),w
 10457  072C  0873               	bcf	status, 5	;RP0=0, select bank0
 10458  072D  1283               	bcf	status, 6	;RP1=0, select bank0
 10459  072E  1303               	movwf	(___aldiv@dividend+3)
 10460  072F  00AB               	movf	(2+(?___lmul)),w
 10461  0730  0872               	movwf	(___aldiv@dividend+2)
 10462  0731  00AA               	movf	(1+(?___lmul)),w
 10463  0732  0871               	movwf	(___aldiv@dividend+1)
 10464  0733  00A9               	movf	(0+(?___lmul)),w
 10465  0734  0870               	movwf	(___aldiv@dividend)
 10466  0735  00A8               
 10467                           	fcall	___aldiv
 10468  0736  120A  158A  26B0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
 10469  073B  1283               	bcf	status, 6	;RP1=0, select bank0
 10470  073C  1303               	movf	(3+(?___aldiv)),w
 10471  073D  0827               	movwf	(_isr$1615+3)
 10472  073E  00BC               	movf	(2+(?___aldiv)),w
 10473  073F  0826               	movwf	(_isr$1615+2)
 10474  0740  00BB               	movf	(1+(?___aldiv)),w
 10475  0741  0825               	movwf	(_isr$1615+1)
 10476  0742  00BA               	movf	(0+(?___aldiv)),w
 10477  0743  0824               	movwf	(_isr$1615)
 10478  0744  00B9               
 10479                           	
 10480                           i1l4814:	
 10481  0745                     ;interrupt.c: 33:             dist = ((((time*34717) /5000) /2) /1000) ;
 10482                           	movlw	0
 10483  0745  3000               	movwf	(___aldiv@divisor+3)
 10484  0746  00A7               	movlw	0
 10485  0747  3000               	movwf	(___aldiv@divisor+2)
 10486  0748  00A6               	movlw	0
 10487  0749  3000               	movwf	(___aldiv@divisor+1)
 10488  074A  00A5               	movlw	02h
 10489  074B  3002               	movwf	(___aldiv@divisor)
 10490  074C  00A4               
 10491                           	movf	(_isr$1615+3),w
 10492  074D  083C               	movwf	(___aldiv@dividend+3)
 10493  074E  00AB               	movf	(_isr$1615+2),w
 10494  074F  083B               	movwf	(___aldiv@dividend+2)
 10495  0750  00AA               	movf	(_isr$1615+1),w
 10496  0751  083A               	movwf	(___aldiv@dividend+1)
 10497  0752  00A9               	movf	(_isr$1615),w
 10498  0753  0839               	movwf	(___aldiv@dividend)
 10499  0754  00A8               
 10500                           	fcall	___aldiv
 10501  0755  120A  158A  26B0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
 10502  075A  1283               	bcf	status, 6	;RP1=0, select bank0
 10503  075B  1303               	movf	(3+(?___aldiv)),w
 10504  075C  0827               	movwf	(_isr$1616+3)
 10505  075D  00C0               	movf	(2+(?___aldiv)),w
 10506  075E  0826               	movwf	(_isr$1616+2)
 10507  075F  00BF               	movf	(1+(?___aldiv)),w
 10508  0760  0825               	movwf	(_isr$1616+1)
 10509  0761  00BE               	movf	(0+(?___aldiv)),w
 10510  0762  0824               	movwf	(_isr$1616)
 10511  0763  00BD               
 10512                           	
 10513                           i1l4816:	
 10514  0764                     ;interrupt.c: 33:             dist = ((((time*34717) /5000) /2) /1000) ;
 10515                           	movlw	0
 10516  0764  3000               	movwf	(___aldiv@divisor+3)
 10517  0765  00A7               	movlw	0
 10518  0766  3000               	movwf	(___aldiv@divisor+2)
 10519  0767  00A6               	movlw	03h
 10520  0768  3003               	movwf	(___aldiv@divisor+1)
 10521  0769  00A5               	movlw	0E8h
 10522  076A  30E8               	movwf	(___aldiv@divisor)
 10523  076B  00A4               
 10524                           	movf	(_isr$1616+3),w
 10525  076C  0840               	movwf	(___aldiv@dividend+3)
 10526  076D  00AB               	movf	(_isr$1616+2),w
 10527  076E  083F               	movwf	(___aldiv@dividend+2)
 10528  076F  00AA               	movf	(_isr$1616+1),w
 10529  0770  083E               	movwf	(___aldiv@dividend+1)
 10530  0771  00A9               	movf	(_isr$1616),w
 10531  0772  083D               	movwf	(___aldiv@dividend)
 10532  0773  00A8               
 10533                           	fcall	___aldiv
 10534  0774  120A  158A  26B0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
 10535  0779  1283               	bcf	status, 6	;RP1=0, select bank0
 10536  077A  1303               	movf	(3+(?___aldiv)),w
 10537  077B  0827               	bsf	status, 5	;RP0=1, select bank1
 10538  077C  1683               	bcf	status, 6	;RP1=0, select bank1
 10539  077D  1303               	movwf	(_dist+3)^080h
 10540  077E  00EB               	bcf	status, 5	;RP0=0, select bank0
 10541  077F  1283               	bcf	status, 6	;RP1=0, select bank0
 10542  0780  1303               	movf	(2+(?___aldiv)),w
 10543  0781  0826               	bsf	status, 5	;RP0=1, select bank1
 10544  0782  1683               	bcf	status, 6	;RP1=0, select bank1
 10545  0783  1303               	movwf	(_dist+2)^080h
 10546  0784  00EA               	bcf	status, 5	;RP0=0, select bank0
 10547  0785  1283               	bcf	status, 6	;RP1=0, select bank0
 10548  0786  1303               	movf	(1+(?___aldiv)),w
 10549  0787  0825               	bsf	status, 5	;RP0=1, select bank1
 10550  0788  1683               	bcf	status, 6	;RP1=0, select bank1
 10551  0789  1303               	movwf	(_dist+1)^080h
 10552  078A  00E9               	bcf	status, 5	;RP0=0, select bank0
 10553  078B  1283               	bcf	status, 6	;RP1=0, select bank0
 10554  078C  1303               	movf	(0+(?___aldiv)),w
 10555  078D  0824               	bsf	status, 5	;RP0=1, select bank1
 10556  078E  1683               	bcf	status, 6	;RP1=0, select bank1
 10557  078F  1303               	movwf	(_dist)^080h
 10558  0790  00E8               
 10559                           	goto	i1l4818
 10560  0791  2F92               	line	34
 10561                           ;interrupt.c: 34:         }
 10562                           	
 10563                           i1l164:	
 10564  0792                     	line	36
 10565                           	
 10566                           i1l4818:	
 10567  0792                     ;interrupt.c: 36:         INTCONbits.RBIF = 0;
 10568                           	bcf	(11),0	;volatile
 10569  0792  100B               	goto	i1l4820
 10570  0793  2F94               	line	37
 10571                           ;interrupt.c: 37:     }
 10572                           	
 10573                           i1l162:	
 10574  0794                     	line	39
 10575                           	
 10576                           i1l4820:	
 10577  0794                     ;interrupt.c: 39:     if( PIR1bits.TMR1IF )
 10578                           	bcf	status, 5	;RP0=0, select bank0
 10579  0794  1283               	btfss	(12),0	;volatile
 10580  0795  1C0C               	goto	u434_21
 10581  0796  2F98               	goto	u434_20
 10582  0797  2F99               u434_21:
 10583  0798                     	goto	i1l166
 10584  0798  2FA0               u434_20:
 10585  0799                     	line	42
 10586                           	
 10587                           i1l4822:	
 10588  0799                     ;interrupt.c: 40:     {;interrupt.c: 42:         PIR1bits.TMR1IF = 0;
 10589                           	bcf	(12),0	;volatile
 10590  0799  100C               	line	43
 10591                           	
 10592                           i1l4824:	
 10593  079A                     ;interrupt.c: 43:         tmr_tick_int();
 10594                           	fcall	_tmr_tick_int
 10595  079A  120A  158A  235F  120A  118A  	goto	i1l166
 10596  079F  2FA0               	line	45
 10597                           ;interrupt.c: 45:     }
 10598                           	
 10599                           i1l165:	
 10600  07A0                     	line	46
 10601                           	
 10602                           i1l166:	
 10603  07A0                     	bcf	status, 5	;RP0=0, select bank0
 10604  07A0  1283               	bcf	status, 6	;RP1=0, select bank0
 10605  07A1  1303               	movf	(??_isr+6),w
 10606  07A2  0838               	movwf	pclath
 10607  07A3  008A               	movf	(??_isr+5),w
 10608  07A4  0837               	movwf	fsr0
 10609  07A5  0084               	swapf	(??_isr+4)^00h,w
 10610  07A6  0E36               	movwf	status
 10611  07A7  0083               	swapf	saved_w,f
 10612  07A8  0EFE               	swapf	saved_w,w
 10613  07A9  0E7E               	retfie
 10614  07AA  0009               	opt stack 0
 10615                           GLOBAL	__end_of_isr
 10616                           	__end_of_isr:
 10617  07AB                     	signat	_isr,89
 10618                           	global	_tmr_tick_int
 10619                           
 10620 ;; *************** function _tmr_tick_int *****************
 10621 ;; Defined at:
 10622 ;;		line 22 in file "tmr_tick.c"
 10623 ;; Parameters:    Size  Location     Type
 10624 ;;		None
 10625 ;; Auto vars:     Size  Location     Type
 10626 ;;  i               1    3[COMMON] unsigned char 
 10627 ;; Return value:  Size  Location     Type
 10628 ;;                  1    wreg      void 
 10629 ;; Registers used:
 10630 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10631 ;; Tracked objects:
 10632 ;;		On entry : 0/0
 10633 ;;		On exit  : 0/0
 10634 ;;		Unchanged: 0/0
 10635 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10636 ;;      Params:         0       0       0       0       0
 10637 ;;      Locals:         1       0       0       0       0
 10638 ;;      Temps:          3       0       0       0       0
 10639 ;;      Totals:         4       0       0       0       0
 10640 ;;Total ram usage:        4 bytes
 10641 ;; Hardware stack levels used:    1
 10642 ;; This function calls:
 10643 ;;		Nothing
 10644 ;; This function is called by:
 10645 ;;		_isr
 10646 ;; This function uses a non-reentrant model
 10647 ;;
 10648                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 10649                           	file	"tmr_tick.c"
 10650                           	line	22
 10651                           global __ptext34
 10652                           __ptext34:	;psect for function _tmr_tick_int
 10653  0B5F                     psect	text34
 10654                           	file	"tmr_tick.c"
 10655                           	line	22
 10656                           	global	__size_of_tmr_tick_int
 10657                           	__size_of_tmr_tick_int	equ	__end_of_tmr_tick_int-_tmr_tick_int
 10658  003A                     	
 10659                           _tmr_tick_int:	
 10660  0B5F                     ;incstack = 0
 10661                           	opt	stack 0
 10662                           ; Regs used in _tmr_tick_int: [wreg-fsr0h+status,2+status,0]
 10663                           	line	24
 10664                           	
 10665                           i1l2806:	
 10666  0B5F                     ;tmr_tick.c: 24:     TMR1H = ((0xFFFF-5000+1) >> 8) & 0x00FF;
 10667                           	movlw	low(0ECh)
 10668  0B5F  30EC               	bcf	status, 5	;RP0=0, select bank0
 10669  0B60  1283               	bcf	status, 6	;RP1=0, select bank0
 10670  0B61  1303               	movwf	(15)	;volatile
 10671  0B62  008F               	line	25
 10672                           ;tmr_tick.c: 25:     TMR1L = ((0xFFFF-5000+1) >> 0) & 0x00FF;
 10673                           	movlw	low(078h)
 10674  0B63  3078               	movwf	(14)	;volatile
 10675  0B64  008E               	line	26
 10676                           	
 10677                           i1l2808:	
 10678  0B65                     ;tmr_tick.c: 26:     for( char i=0; i<4; i++ )
 10679                           	clrf	(tmr_tick_int@i)
 10680  0B65  01F3               	
 10681                           i1l2810:	
 10682  0B66                     	movlw	low(04h)
 10683  0B66  3004               	subwf	(tmr_tick_int@i),w
 10684  0B67  0273               	skipc
 10685  0B68  1C03               	goto	u192_21
 10686  0B69  2B6B               	goto	u192_20
 10687  0B6A  2B6C               u192_21:
 10688  0B6B                     	goto	i1l2814
 10689  0B6B  2B6E               u192_20:
 10690  0B6C                     	goto	i1l189
 10691  0B6C  2B98               	
 10692                           i1l2812:	
 10693  0B6D                     	goto	i1l189
 10694  0B6D  2B98               	
 10695                           i1l186:	
 10696  0B6E                     	line	28
 10697                           	
 10698                           i1l2814:	
 10699  0B6E                     ;tmr_tick.c: 27:     {;tmr_tick.c: 28:         if( timer[i] )
 10700                           	movf	(tmr_tick_int@i),w
 10701  0B6E  0873               	movwf	(??_tmr_tick_int+0)+0
 10702  0B6F  00F0               	addwf	(??_tmr_tick_int+0)+0,w
 10703  0B70  0770               	addlw	low(_timer|((0x0)<<8))&0ffh
 10704  0B71  3E41               	movwf	fsr0
 10705  0B72  0084               	bcf	status, 7	;select IRP bank0
 10706  0B73  1383               	movf	indf,w
 10707  0B74  0800               	movwf	(??_tmr_tick_int+1)+0+0
 10708  0B75  00F1               	incf	fsr0,f
 10709  0B76  0A84               	movf	indf,w
 10710  0B77  0800               	movwf	(??_tmr_tick_int+1)+0+1
 10711  0B78  00F2               	movf	((??_tmr_tick_int+1)+0),w
 10712  0B79  0871               iorwf	((??_tmr_tick_int+1)+1),w
 10713  0B7A  0472               	btfsc	status,2
 10714  0B7B  1903               	goto	u193_21
 10715  0B7C  2B7E               	goto	u193_20
 10716  0B7D  2B7F               u193_21:
 10717  0B7E                     	goto	i1l2818
 10718  0B7E  2B8D               u193_20:
 10719  0B7F                     	line	29
 10720                           	
 10721                           i1l2816:	
 10722  0B7F                     ;tmr_tick.c: 29:             --timer[i];
 10723                           	movf	(tmr_tick_int@i),w
 10724  0B7F  0873               	movwf	(??_tmr_tick_int+0)+0
 10725  0B80  00F0               	addwf	(??_tmr_tick_int+0)+0,w
 10726  0B81  0770               	addlw	low(_timer|((0x0)<<8))&0ffh
 10727  0B82  3E41               	movwf	fsr0
 10728  0B83  0084               	movlw	low(01h)
 10729  0B84  3001               	subwf	indf,f
 10730  0B85  0280               	incfsz	fsr0,f
 10731  0B86  0F84               	movlw	high(01h)
 10732  0B87  3000               	skipc
 10733  0B88  1C03               	decf	indf,f
 10734  0B89  0380               	subwf	indf,f
 10735  0B8A  0280               	decf	fsr0,f
 10736  0B8B  0384               	goto	i1l2818
 10737  0B8C  2B8D               	
 10738                           i1l188:	
 10739  0B8D                     	line	30
 10740                           	
 10741                           i1l2818:	
 10742  0B8D                     ;tmr_tick.c: 30:     }
 10743                           	movlw	low(01h)
 10744  0B8D  3001               	movwf	(??_tmr_tick_int+0)+0
 10745  0B8E  00F0               	movf	(??_tmr_tick_int+0)+0,w
 10746  0B8F  0870               	addwf	(tmr_tick_int@i),f
 10747  0B90  07F3               	
 10748                           i1l2820:	
 10749  0B91                     	movlw	low(04h)
 10750  0B91  3004               	subwf	(tmr_tick_int@i),w
 10751  0B92  0273               	skipc
 10752  0B93  1C03               	goto	u194_21
 10753  0B94  2B96               	goto	u194_20
 10754  0B95  2B97               u194_21:
 10755  0B96                     	goto	i1l2814
 10756  0B96  2B6E               u194_20:
 10757  0B97                     	goto	i1l189
 10758  0B97  2B98               	
 10759                           i1l187:	
 10760  0B98                     	line	31
 10761                           	
 10762                           i1l189:	
 10763  0B98                     	return
 10764  0B98  0008               	opt stack 0
 10765                           GLOBAL	__end_of_tmr_tick_int
 10766                           	__end_of_tmr_tick_int:
 10767  0B99                     	signat	_tmr_tick_int,89
 10768                           	global	___lmul
 10769                           
 10770 ;; *************** function ___lmul *****************
 10771 ;; Defined at:
 10772 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 10773 ;; Parameters:    Size  Location     Type
 10774 ;;  multiplier      4    0[COMMON] unsigned long 
 10775 ;;  multiplicand    4    4[COMMON] unsigned long 
 10776 ;; Auto vars:     Size  Location     Type
 10777 ;;  product         4    0[BANK0 ] unsigned long 
 10778 ;; Return value:  Size  Location     Type
 10779 ;;                  4    0[COMMON] unsigned long 
 10780 ;; Registers used:
 10781 ;;		wreg, status,2, status,0
 10782 ;; Tracked objects:
 10783 ;;		On entry : 0/0
 10784 ;;		On exit  : 0/0
 10785 ;;		Unchanged: 0/0
 10786 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10787 ;;      Params:         8       0       0       0       0
 10788 ;;      Locals:         0       4       0       0       0
 10789 ;;      Temps:          1       0       0       0       0
 10790 ;;      Totals:         9       4       0       0       0
 10791 ;;Total ram usage:       13 bytes
 10792 ;; Hardware stack levels used:    1
 10793 ;; This function calls:
 10794 ;;		Nothing
 10795 ;; This function is called by:
 10796 ;;		_isr
 10797 ;; This function uses a non-reentrant model
 10798 ;;
 10799                           psect	text35,local,class=CODE,delta=2,merge=1,group=1
 10800                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 10801                           	line	15
 10802                           global __ptext35
 10803                           __ptext35:	;psect for function ___lmul
 10804  0CC1                     psect	text35
 10805                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 10806                           	line	15
 10807                           	global	__size_of___lmul
 10808                           	__size_of___lmul	equ	__end_of___lmul-___lmul
 10809  0050                     	
 10810                           ___lmul:	
 10811  0CC1                     ;incstack = 0
 10812                           	opt	stack 0
 10813                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 10814                           	line	119
 10815                           	
 10816                           i1l4644:	
 10817  0CC1                     	movlw	high highword(0)
 10818  0CC1  3000               	bcf	status, 5	;RP0=0, select bank0
 10819  0CC2  1283               	bcf	status, 6	;RP1=0, select bank0
 10820  0CC3  1303               	movwf	(___lmul@product+3)
 10821  0CC4  00A3               	movlw	low highword(0)
 10822  0CC5  3000               	movwf	(___lmul@product+2)
 10823  0CC6  00A2               	movlw	high(0)
 10824  0CC7  3000               	movwf	(___lmul@product+1)
 10825  0CC8  00A1               	movlw	low(0)
 10826  0CC9  3000               	movwf	(___lmul@product)
 10827  0CCA  00A0               
 10828                           	goto	i1l4646
 10829  0CCB  2CCC               	line	120
 10830                           	
 10831                           i1l598:	
 10832  0CCC                     	line	121
 10833                           	
 10834                           i1l4646:	
 10835  0CCC                     	btfss	(___lmul@multiplier),(0)&7
 10836  0CCC  1C70               	goto	u417_21
 10837  0CCD  2CCF               	goto	u417_20
 10838  0CCE  2CD0               u417_21:
 10839  0CCF                     	goto	i1l4650
 10840  0CCF  2CEA               u417_20:
 10841  0CD0                     	line	122
 10842                           	
 10843                           i1l4648:	
 10844  0CD0                     	movf	(___lmul@multiplicand),w
 10845  0CD0  0874               	bcf	status, 5	;RP0=0, select bank0
 10846  0CD1  1283               	bcf	status, 6	;RP1=0, select bank0
 10847  0CD2  1303               	addwf	(___lmul@product),f
 10848  0CD3  07A0               	movf	(___lmul@multiplicand+1),w
 10849  0CD4  0875               	clrz
 10850  0CD5  1103               	skipnc
 10851  0CD6  1803               	addlw	1
 10852  0CD7  3E01               	skipnz
 10853  0CD8  1903               	goto	u418_21
 10854  0CD9  2CDB               	addwf	(___lmul@product+1),f
 10855  0CDA  07A1               u418_21:
 10856  0CDB                     	movf	(___lmul@multiplicand+2),w
 10857  0CDB  0876               	clrz
 10858  0CDC  1103               	skipnc
 10859  0CDD  1803               	addlw	1
 10860  0CDE  3E01               	skipnz
 10861  0CDF  1903               	goto	u418_22
 10862  0CE0  2CE2               	addwf	(___lmul@product+2),f
 10863  0CE1  07A2               u418_22:
 10864  0CE2                     	movf	(___lmul@multiplicand+3),w
 10865  0CE2  0877               	clrz
 10866  0CE3  1103               	skipnc
 10867  0CE4  1803               	addlw	1
 10868  0CE5  3E01               	skipnz
 10869  0CE6  1903               	goto	u418_23
 10870  0CE7  2CE9               	addwf	(___lmul@product+3),f
 10871  0CE8  07A3               u418_23:
 10872  0CE9                     
 10873                           	goto	i1l4650
 10874  0CE9  2CEA               	
 10875                           i1l599:	
 10876  0CEA                     	line	123
 10877                           	
 10878                           i1l4650:	
 10879  0CEA                     	movlw	01h
 10880  0CEA  3001               	movwf	(??___lmul+0)+0
 10881  0CEB  00F8               u419_25:
 10882  0CEC                     	clrc
 10883  0CEC  1003               	rlf	(___lmul@multiplicand),f
 10884  0CED  0DF4               	rlf	(___lmul@multiplicand+1),f
 10885  0CEE  0DF5               	rlf	(___lmul@multiplicand+2),f
 10886  0CEF  0DF6               	rlf	(___lmul@multiplicand+3),f
 10887  0CF0  0DF7               	decfsz	(??___lmul+0)+0
 10888  0CF1  0BF8               	goto	u419_25
 10889  0CF2  2CEC               	line	124
 10890                           	
 10891                           i1l4652:	
 10892  0CF3                     	movlw	01h
 10893  0CF3  3001               u420_25:
 10894  0CF4                     	clrc
 10895  0CF4  1003               	rrf	(___lmul@multiplier+3),f
 10896  0CF5  0CF3               	rrf	(___lmul@multiplier+2),f
 10897  0CF6  0CF2               	rrf	(___lmul@multiplier+1),f
 10898  0CF7  0CF1               	rrf	(___lmul@multiplier),f
 10899  0CF8  0CF0               	addlw	-1
 10900  0CF9  3EFF               	skipz
 10901  0CFA  1D03               	goto	u420_25
 10902  0CFB  2CF4               
 10903                           	line	125
 10904                           	movf	(___lmul@multiplier+3),w
 10905  0CFC  0873               	iorwf	(___lmul@multiplier+2),w
 10906  0CFD  0472               	iorwf	(___lmul@multiplier+1),w
 10907  0CFE  0471               	iorwf	(___lmul@multiplier),w
 10908  0CFF  0470               	skipz
 10909  0D00  1D03               	goto	u421_21
 10910  0D01  2D03               	goto	u421_20
 10911  0D02  2D04               u421_21:
 10912  0D03                     	goto	i1l4646
 10913  0D03  2CCC               u421_20:
 10914  0D04                     	goto	i1l4654
 10915  0D04  2D05               	
 10916                           i1l600:	
 10917  0D05                     	line	128
 10918                           	
 10919                           i1l4654:	
 10920  0D05                     	bcf	status, 5	;RP0=0, select bank0
 10921  0D05  1283               	bcf	status, 6	;RP1=0, select bank0
 10922  0D06  1303               	movf	(___lmul@product+3),w
 10923  0D07  0823               	movwf	(?___lmul+3)
 10924  0D08  00F3               	movf	(___lmul@product+2),w
 10925  0D09  0822               	movwf	(?___lmul+2)
 10926  0D0A  00F2               	movf	(___lmul@product+1),w
 10927  0D0B  0821               	movwf	(?___lmul+1)
 10928  0D0C  00F1               	movf	(___lmul@product),w
 10929  0D0D  0820               	movwf	(?___lmul)
 10930  0D0E  00F0               
 10931                           	goto	i1l601
 10932  0D0F  2D10               	
 10933                           i1l4656:	
 10934  0D10                     	line	129
 10935                           	
 10936                           i1l601:	
 10937  0D10                     	return
 10938  0D10  0008               	opt stack 0
 10939                           GLOBAL	__end_of___lmul
 10940                           	__end_of___lmul:
 10941  0D11                     	signat	___lmul,8316
 10942                           	global	___aldiv
 10943                           
 10944 ;; *************** function ___aldiv *****************
 10945 ;; Defined at:
 10946 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;  divisor         4    4[BANK0 ] long 
 10949 ;;  dividend        4    8[BANK0 ] long 
 10950 ;; Auto vars:     Size  Location     Type
 10951 ;;  quotient        4   14[BANK0 ] long 
 10952 ;;  sign            1   13[BANK0 ] unsigned char 
 10953 ;;  counter         1   12[BANK0 ] unsigned char 
 10954 ;; Return value:  Size  Location     Type
 10955 ;;                  4    4[BANK0 ] long 
 10956 ;; Registers used:
 10957 ;;		wreg, status,2, status,0
 10958 ;; Tracked objects:
 10959 ;;		On entry : 0/0
 10960 ;;		On exit  : 0/0
 10961 ;;		Unchanged: 0/0
 10962 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10963 ;;      Params:         0       8       0       0       0
 10964 ;;      Locals:         0       6       0       0       0
 10965 ;;      Temps:          1       0       0       0       0
 10966 ;;      Totals:         1      14       0       0       0
 10967 ;;Total ram usage:       15 bytes
 10968 ;; Hardware stack levels used:    1
 10969 ;; This function calls:
 10970 ;;		Nothing
 10971 ;; This function is called by:
 10972 ;;		_isr
 10973 ;; This function uses a non-reentrant model
 10974 ;;
 10975                           psect	text36,local,class=CODE,delta=2,merge=1,group=1
 10976                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 10977                           	line	5
 10978                           global __ptext36
 10979                           __ptext36:	;psect for function ___aldiv
 10980  0EB0                     psect	text36
 10981                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 10982                           	line	5
 10983                           	global	__size_of___aldiv
 10984                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
 10985  00A6                     	
 10986                           ___aldiv:	
 10987  0EB0                     ;incstack = 0
 10988                           	opt	stack 0
 10989                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10990                           	line	13
 10991                           	
 10992                           i1l3958:	
 10993  0EB0                     	bcf	status, 5	;RP0=0, select bank0
 10994  0EB0  1283               	bcf	status, 6	;RP1=0, select bank0
 10995  0EB1  1303               	clrf	(___aldiv@sign)
 10996  0EB2  01AD               	line	14
 10997                           	
 10998                           i1l3960:	
 10999  0EB3                     	btfss	(___aldiv@divisor+3),7
 11000  0EB3  1FA7               	goto	u330_21
 11001  0EB4  2EB6               	goto	u330_20
 11002  0EB5  2EB7               u330_21:
 11003  0EB6                     	goto	i1l652
 11004  0EB6  2EC4               u330_20:
 11005  0EB7                     	line	15
 11006                           	
 11007                           i1l3962:	
 11008  0EB7                     	comf	(___aldiv@divisor),f
 11009  0EB7  09A4               	comf	(___aldiv@divisor+1),f
 11010  0EB8  09A5               	comf	(___aldiv@divisor+2),f
 11011  0EB9  09A6               	comf	(___aldiv@divisor+3),f
 11012  0EBA  09A7               	incf	(___aldiv@divisor),f
 11013  0EBB  0AA4               	skipnz
 11014  0EBC  1903               	incf	(___aldiv@divisor+1),f
 11015  0EBD  0AA5               	skipnz
 11016  0EBE  1903               	incf	(___aldiv@divisor+2),f
 11017  0EBF  0AA6               	skipnz
 11018  0EC0  1903               	incf	(___aldiv@divisor+3),f
 11019  0EC1  0AA7               	line	16
 11020                           	clrf	(___aldiv@sign)
 11021  0EC2  01AD               	incf	(___aldiv@sign),f
 11022  0EC3  0AAD               	line	17
 11023                           	
 11024                           i1l652:	
 11025  0EC4                     	line	18
 11026                           	btfss	(___aldiv@dividend+3),7
 11027  0EC4  1FAB               	goto	u331_21
 11028  0EC5  2EC7               	goto	u331_20
 11029  0EC6  2EC8               u331_21:
 11030  0EC7                     	goto	i1l3968
 11031  0EC7  2ED8               u331_20:
 11032  0EC8                     	line	19
 11033                           	
 11034                           i1l3964:	
 11035  0EC8                     	comf	(___aldiv@dividend),f
 11036  0EC8  09A8               	comf	(___aldiv@dividend+1),f
 11037  0EC9  09A9               	comf	(___aldiv@dividend+2),f
 11038  0ECA  09AA               	comf	(___aldiv@dividend+3),f
 11039  0ECB  09AB               	incf	(___aldiv@dividend),f
 11040  0ECC  0AA8               	skipnz
 11041  0ECD  1903               	incf	(___aldiv@dividend+1),f
 11042  0ECE  0AA9               	skipnz
 11043  0ECF  1903               	incf	(___aldiv@dividend+2),f
 11044  0ED0  0AAA               	skipnz
 11045  0ED1  1903               	incf	(___aldiv@dividend+3),f
 11046  0ED2  0AAB               	line	20
 11047                           	
 11048                           i1l3966:	
 11049  0ED3                     	movlw	low(01h)
 11050  0ED3  3001               	movwf	(??___aldiv+0)+0
 11051  0ED4  00F9               	movf	(??___aldiv+0)+0,w
 11052  0ED5  0879               	xorwf	(___aldiv@sign),f
 11053  0ED6  06AD               	goto	i1l3968
 11054  0ED7  2ED8               	line	21
 11055                           	
 11056                           i1l653:	
 11057  0ED8                     	line	22
 11058                           	
 11059                           i1l3968:	
 11060  0ED8                     	movlw	high highword(0)
 11061  0ED8  3000               	movwf	(___aldiv@quotient+3)
 11062  0ED9  00B1               	movlw	low highword(0)
 11063  0EDA  3000               	movwf	(___aldiv@quotient+2)
 11064  0EDB  00B0               	movlw	high(0)
 11065  0EDC  3000               	movwf	(___aldiv@quotient+1)
 11066  0EDD  00AF               	movlw	low(0)
 11067  0EDE  3000               	movwf	(___aldiv@quotient)
 11068  0EDF  00AE               
 11069                           	line	23
 11070                           	
 11071                           i1l3970:	
 11072  0EE0                     	movf	(___aldiv@divisor+3),w
 11073  0EE0  0827               	iorwf	(___aldiv@divisor+2),w
 11074  0EE1  0426               	iorwf	(___aldiv@divisor+1),w
 11075  0EE2  0425               	iorwf	(___aldiv@divisor),w
 11076  0EE3  0424               	skipnz
 11077  0EE4  1903               	goto	u332_21
 11078  0EE5  2EE7               	goto	u332_20
 11079  0EE6  2EE8               u332_21:
 11080  0EE7                     	goto	i1l3990
 11081  0EE7  2F3B               u332_20:
 11082  0EE8                     	line	24
 11083                           	
 11084                           i1l3972:	
 11085  0EE8                     	clrf	(___aldiv@counter)
 11086  0EE8  01AC               	incf	(___aldiv@counter),f
 11087  0EE9  0AAC               	line	25
 11088                           	goto	i1l3976
 11089  0EEA  2EF9               	
 11090                           i1l656:	
 11091  0EEB                     	line	26
 11092                           	
 11093                           i1l3974:	
 11094  0EEB                     	movlw	01h
 11095  0EEB  3001               	movwf	(??___aldiv+0)+0
 11096  0EEC  00F9               u333_25:
 11097  0EED                     	clrc
 11098  0EED  1003               	rlf	(___aldiv@divisor),f
 11099  0EEE  0DA4               	rlf	(___aldiv@divisor+1),f
 11100  0EEF  0DA5               	rlf	(___aldiv@divisor+2),f
 11101  0EF0  0DA6               	rlf	(___aldiv@divisor+3),f
 11102  0EF1  0DA7               	decfsz	(??___aldiv+0)+0
 11103  0EF2  0BF9               	goto	u333_25
 11104  0EF3  2EED               	line	27
 11105                           	movlw	low(01h)
 11106  0EF4  3001               	movwf	(??___aldiv+0)+0
 11107  0EF5  00F9               	movf	(??___aldiv+0)+0,w
 11108  0EF6  0879               	addwf	(___aldiv@counter),f
 11109  0EF7  07AC               	goto	i1l3976
 11110  0EF8  2EF9               	line	28
 11111                           	
 11112                           i1l655:	
 11113  0EF9                     	line	25
 11114                           	
 11115                           i1l3976:	
 11116  0EF9                     	btfss	(___aldiv@divisor+3),(31)&7
 11117  0EF9  1FA7               	goto	u334_21
 11118  0EFA  2EFC               	goto	u334_20
 11119  0EFB  2EFD               u334_21:
 11120  0EFC                     	goto	i1l3974
 11121  0EFC  2EEB               u334_20:
 11122  0EFD                     	goto	i1l3978
 11123  0EFD  2EFF               	
 11124                           i1l657:	
 11125  0EFE                     	goto	i1l3978
 11126  0EFE  2EFF               	line	29
 11127                           	
 11128                           i1l658:	
 11129  0EFF                     	line	30
 11130                           	
 11131                           i1l3978:	
 11132  0EFF                     	movlw	01h
 11133  0EFF  3001               	movwf	(??___aldiv+0)+0
 11134  0F00  00F9               u335_25:
 11135  0F01                     	clrc
 11136  0F01  1003               	rlf	(___aldiv@quotient),f
 11137  0F02  0DAE               	rlf	(___aldiv@quotient+1),f
 11138  0F03  0DAF               	rlf	(___aldiv@quotient+2),f
 11139  0F04  0DB0               	rlf	(___aldiv@quotient+3),f
 11140  0F05  0DB1               	decfsz	(??___aldiv+0)+0
 11141  0F06  0BF9               	goto	u335_25
 11142  0F07  2F01               	line	31
 11143                           	
 11144                           i1l3980:	
 11145  0F08                     	movf	(___aldiv@divisor+3),w
 11146  0F08  0827               	subwf	(___aldiv@dividend+3),w
 11147  0F09  022B               	skipz
 11148  0F0A  1D03               	goto	u336_25
 11149  0F0B  2F16               	movf	(___aldiv@divisor+2),w
 11150  0F0C  0826               	subwf	(___aldiv@dividend+2),w
 11151  0F0D  022A               	skipz
 11152  0F0E  1D03               	goto	u336_25
 11153  0F0F  2F16               	movf	(___aldiv@divisor+1),w
 11154  0F10  0825               	subwf	(___aldiv@dividend+1),w
 11155  0F11  0229               	skipz
 11156  0F12  1D03               	goto	u336_25
 11157  0F13  2F16               	movf	(___aldiv@divisor),w
 11158  0F14  0824               	subwf	(___aldiv@dividend),w
 11159  0F15  0228               u336_25:
 11160  0F16                     	skipc
 11161  0F16  1C03               	goto	u336_21
 11162  0F17  2F19               	goto	u336_20
 11163  0F18  2F1A               u336_21:
 11164  0F19                     	goto	i1l3986
 11165  0F19  2F2A               u336_20:
 11166  0F1A                     	line	32
 11167                           	
 11168                           i1l3982:	
 11169  0F1A                     	movf	(___aldiv@divisor),w
 11170  0F1A  0824               	subwf	(___aldiv@dividend),f
 11171  0F1B  02A8               	movf	(___aldiv@divisor+1),w
 11172  0F1C  0825               	skipc
 11173  0F1D  1C03               	incfsz	(___aldiv@divisor+1),w
 11174  0F1E  0F25               	subwf	(___aldiv@dividend+1),f
 11175  0F1F  02A9               	movf	(___aldiv@divisor+2),w
 11176  0F20  0826               	skipc
 11177  0F21  1C03               	incfsz	(___aldiv@divisor+2),w
 11178  0F22  0F26               	subwf	(___aldiv@dividend+2),f
 11179  0F23  02AA               	movf	(___aldiv@divisor+3),w
 11180  0F24  0827               	skipc
 11181  0F25  1C03               	incfsz	(___aldiv@divisor+3),w
 11182  0F26  0F27               	subwf	(___aldiv@dividend+3),f
 11183  0F27  02AB               	line	33
 11184                           	
 11185                           i1l3984:	
 11186  0F28                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
 11187  0F28  142E               	goto	i1l3986
 11188  0F29  2F2A               	line	34
 11189                           	
 11190                           i1l659:	
 11191  0F2A                     	line	35
 11192                           	
 11193                           i1l3986:	
 11194  0F2A                     	movlw	01h
 11195  0F2A  3001               u337_25:
 11196  0F2B                     	clrc
 11197  0F2B  1003               	rrf	(___aldiv@divisor+3),f
 11198  0F2C  0CA7               	rrf	(___aldiv@divisor+2),f
 11199  0F2D  0CA6               	rrf	(___aldiv@divisor+1),f
 11200  0F2E  0CA5               	rrf	(___aldiv@divisor),f
 11201  0F2F  0CA4               	addlw	-1
 11202  0F30  3EFF               	skipz
 11203  0F31  1D03               	goto	u337_25
 11204  0F32  2F2B               
 11205                           	line	36
 11206                           	
 11207                           i1l3988:	
 11208  0F33                     	movlw	01h
 11209  0F33  3001               	subwf	(___aldiv@counter),f
 11210  0F34  02AC               	btfss	status,2
 11211  0F35  1D03               	goto	u338_21
 11212  0F36  2F38               	goto	u338_20
 11213  0F37  2F39               u338_21:
 11214  0F38                     	goto	i1l3978
 11215  0F38  2EFF               u338_20:
 11216  0F39                     	goto	i1l3990
 11217  0F39  2F3B               	
 11218                           i1l660:	
 11219  0F3A                     	goto	i1l3990
 11220  0F3A  2F3B               	line	37
 11221                           	
 11222                           i1l654:	
 11223  0F3B                     	line	38
 11224                           	
 11225                           i1l3990:	
 11226  0F3B                     	movf	((___aldiv@sign)),w
 11227  0F3B  082D               	btfsc	status,2
 11228  0F3C  1903               	goto	u339_21
 11229  0F3D  2F3F               	goto	u339_20
 11230  0F3E  2F40               u339_21:
 11231  0F3F                     	goto	i1l3994
 11232  0F3F  2F4C               u339_20:
 11233  0F40                     	line	39
 11234                           	
 11235                           i1l3992:	
 11236  0F40                     	comf	(___aldiv@quotient),f
 11237  0F40  09AE               	comf	(___aldiv@quotient+1),f
 11238  0F41  09AF               	comf	(___aldiv@quotient+2),f
 11239  0F42  09B0               	comf	(___aldiv@quotient+3),f
 11240  0F43  09B1               	incf	(___aldiv@quotient),f
 11241  0F44  0AAE               	skipnz
 11242  0F45  1903               	incf	(___aldiv@quotient+1),f
 11243  0F46  0AAF               	skipnz
 11244  0F47  1903               	incf	(___aldiv@quotient+2),f
 11245  0F48  0AB0               	skipnz
 11246  0F49  1903               	incf	(___aldiv@quotient+3),f
 11247  0F4A  0AB1               	goto	i1l3994
 11248  0F4B  2F4C               	
 11249                           i1l661:	
 11250  0F4C                     	line	40
 11251                           	
 11252                           i1l3994:	
 11253  0F4C                     	movf	(___aldiv@quotient+3),w
 11254  0F4C  0831               	movwf	(?___aldiv+3)
 11255  0F4D  00A7               	movf	(___aldiv@quotient+2),w
 11256  0F4E  0830               	movwf	(?___aldiv+2)
 11257  0F4F  00A6               	movf	(___aldiv@quotient+1),w
 11258  0F50  082F               	movwf	(?___aldiv+1)
 11259  0F51  00A5               	movf	(___aldiv@quotient),w
 11260  0F52  082E               	movwf	(?___aldiv)
 11261  0F53  00A4               
 11262                           	goto	i1l662
 11263  0F54  2F55               	
 11264                           i1l3996:	
 11265  0F55                     	line	41
 11266                           	
 11267                           i1l662:	
 11268  0F55                     	return
 11269  0F55  0008               	opt stack 0
 11270                           GLOBAL	__end_of___aldiv
 11271                           	__end_of___aldiv:
 11272  0F56                     	signat	___aldiv,8316
 11273                           global	___latbits
 11274                           ___latbits	equ	2
 11275  0002                     	global	btemp
 11276                           	btemp set 07Eh
 11277  007E                     
 11278                           	DABS	1,126,2	;btemp
 11279                           	global	wtemp0
 11280                           	wtemp0 set btemp+0
 11281  007E                     	end


Data Sizes:
    Strings     116
    Constant    2
    Data        128
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     33      54
    BANK1            80     47      76
    BANK3            96     35      78
    BANK2            96      0      55

Pointer List with Targets:

    sp__rfid_display_wait	PTR void  size(1) Largest target is 2
		 -> rfid_display_wait(), rfid_read(), 

    sp__rfid_display	PTR void  size(1) Largest target is 2
		 -> rfid_display(), rfid_read(), 

    sp__rfid_read_wait	PTR void  size(1) Largest target is 2
		 -> rfid_read_wait(), rfid_display(), 

    sp__rfid_read	PTR void  size(1) Largest target is 2
		 -> rfid_display(), rfid_read(), 

    hex2Ascii@strOut	PTR unsigned char  size(1) Largest target is 13
		 -> uidAsci(BANK3[13]), main@uidAsci(BANK3[13]), 

    hex2Ascii@strIn	PTR unsigned char  size(2) Largest target is 7
		 -> UID(BANK1[7]), main@UID(BANK3[7]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 7
		 -> UID(BANK1[7]), main@UID(BANK3[7]), 

    tag_false@p2	PTR unsigned char  size(1) Largest target is 6
		 -> main@senha(BANK3[6]), 

    tag_false@p1	PTR unsigned char  size(1) Largest target is 7
		 -> main@UID(BANK3[7]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 7
		 -> UID(BANK1[7]), main@UID(BANK3[7]), 

    MFRC522_ToCard@backLen	PTR unsigned char  size(1) Largest target is 1
		 -> MFRC522_AntiColl@unLen(BANK1[1]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 7
		 -> UID(BANK1[7]), main@UID(BANK3[7]), 

    procura_tag@data	PTR unsigned char  size(2) Largest target is 5
		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 

    tagTxCmd@result	PTR unsigned char  size(2) Largest target is 5
		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 

    tagTxCmd@rlen	PTR unsigned char  size(1) Largest target is 1
		 -> procura_tag@len(BANK1[1]), 

    tagTxCmd@data	PTR unsigned char  size(2) Largest target is 5
		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 

    lcd_print@str	PTR const unsigned char  size(2) Largest target is 16
		 -> uidAsci(BANK3[13]), STR_16(CODE[2]), STR_15(CODE[2]), STR_14(CODE[6]), 
		 -> STR_13(CODE[9]), STR_12(CODE[8]), STR_11(CODE[7]), STR_10(CODE[7]), 
		 -> STR_9(CODE[16]), STR_8(CODE[9]), STR_7(CODE[7]), STR_6(CODE[16]), 
		 -> STR_5(CODE[6]), STR_4(CODE[7]), STR_3(CODE[10]), STR_2(CODE[7]), 
		 -> STR_1(CODE[11]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK1

    _main->_MFRC522_AntiColl
    _prs_detect->_delay_ms
    _procura_tag->_tagTxCmd
    _tagTxCmd->_mfrc522ClrBit
    _tagTxCmd->_mfrc522SetBit
    _mfrc522ClrBit->_spiSoftTxCmd
    _mfrc522Iniciar->_mfrc522AntOn
    _mfrc522Rst->_spiSoftTxCmd
    _mfrc522AntOn->_mfrc522SetBit
    _mfrc522SetBit->_spiSoftTxCmd
    _lcd_print->_lcd_lincol
    _lcd_lincol->_lcd_inst
    _lcd_init->_lcd_inst
    _lcd_clr->_lcd_inst
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_Set_Bit->_MFRC522_Wr
    _MFRC522_Clear_Bit->_MFRC522_Wr
    _MFRC522_Wr->_MFRC522_Rd
    _MFRC522_Rd->_spiSoftTxDat

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   36449
                                             43 BANK1      4     4      0
                                              0 BANK3     35    35      0
                   _MFRC522_AntiColl
                           _delay_ms
                          _hex2Ascii
                            _lcd_clr
                           _lcd_init
                          _lcd_print
                     _mfrc522Iniciar
                        _procura_tag
                         _prs_detect
                       _sensors_init
                     _spiSoftIniciar
               _spi_hardware_disable
                          _tag_false
                      _tmr_tick_init
                        _uts_trigger
 ---------------------------------------------------------------------------------
 (1) _uts_trigger                                          1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _tmr_tick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tag_false                                            7     6      1     355
                                              0 BANK1      7     6      1
 ---------------------------------------------------------------------------------
 (1) _spi_hardware_disable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiSoftIniciar                                       2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _sensors_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _prs_detect                                           0     0      0     574
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             4     2      2     574
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _procura_tag                                          7     5      2   13018
                                             27 BANK1      7     5      2
                       _spiSoftTxCmd
                       _spiSoftTxDat
                           _tagTxCmd
 ---------------------------------------------------------------------------------
 (2) _tagTxCmd                                            17    11      6   10145
                                             10 BANK1     17    11      6
                      _mfrc522ClrBit
                      _mfrc522SetBit
                       _spiSoftRxDat
                       _spiSoftTxCmd
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (3) _mfrc522ClrBit                                        4     3      1    2800
                                              6 BANK1      4     3      1
                       _spiSoftRxDat
                       _spiSoftTxCmd
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (1) _mfrc522Iniciar                                       0     0      0    7536
                       _mfrc522AntOn
                         _mfrc522Rst
                       _spiSoftTxCmd
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (2) _mfrc522Rst                                           0     0      0    2323
                       _spiSoftTxCmd
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (2) _mfrc522AntOn                                         1     1      0    2890
                                             10 BANK1      1     1      0
                      _mfrc522SetBit
 ---------------------------------------------------------------------------------
 (3) _mfrc522SetBit                                        4     3      1    2890
                                              6 BANK1      4     3      1
                       _spiSoftRxDat
                       _spiSoftTxCmd
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (3) _spiSoftTxCmd                                         6     5      1    2156
                                              0 BANK1      6     5      1
                         _spiSoftClk
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            6     3      3    3776
                                              6 BANK1      6     3      3
                           _lcd_data
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     490
                                              3 BANK1      3     2      1
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      62
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     248
                                              3 BANK1      3     3      0
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (1) _lcd_clr                                              0     0      0     248
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (3) _lcd_inst                                             3     3      0     248
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _hex2Ascii                                           12     8      4    1362
                                              0 BANK1     12     8      4
 ---------------------------------------------------------------------------------
 (1) _MFRC522_AntiColl                                    11     9      2    8098
                                             32 BANK1     11     9      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_ToCard                                      17    11      6    5407
                                             15 BANK1     17    11      6
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Set_Bit                                      3     2      1    1230
                                             11 BANK1      3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Clear_Bit                                    4     3      1    1320
                                             11 BANK1      4     3      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Wr                                           3     2      1     679
                                              8 BANK1      3     2      1
                         _MFRC522_Rd (ARG)
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Rd                                           3     3      0     368
                                              5 BANK1      3     3      0
                       _spiSoftRxDat
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (3) _spiSoftTxDat                                         5     5      0     167
                                              0 BANK1      5     5      0
                         _spiSoftClk
 ---------------------------------------------------------------------------------
 (3) _spiSoftRxDat                                         4     4      0     136
                                              0 BANK1      4     4      0
                         _spiSoftClk
 ---------------------------------------------------------------------------------
 (4) _spiSoftClk                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 15    15      0    1207
                                             18 BANK0     15    15      0
                            ___aldiv
                             ___lmul
                       _tmr_tick_int
 ---------------------------------------------------------------------------------
 (8) _tmr_tick_int                                         4     4      0      90
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              13     5      8      36
                                              0 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             15     7      8     985
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MFRC522_AntiColl
     _MFRC522_Clear_Bit
       _MFRC522_Rd
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
       _MFRC522_Wr
         _MFRC522_Rd (ARG)
           _spiSoftRxDat
             _spiSoftClk
           _spiSoftTxDat
             _spiSoftClk
         _spiSoftTxDat (ARG)
           _spiSoftClk
     _MFRC522_ToCard
       _MFRC522_Clear_Bit
         _MFRC522_Rd
           _spiSoftRxDat
             _spiSoftClk
           _spiSoftTxDat
             _spiSoftClk
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _spiSoftRxDat
               _spiSoftClk
             _spiSoftTxDat
               _spiSoftClk
           _spiSoftTxDat (ARG)
             _spiSoftClk
       _MFRC522_Rd
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
       _MFRC522_Set_Bit
         _MFRC522_Rd
           _spiSoftRxDat
             _spiSoftClk
           _spiSoftTxDat
             _spiSoftClk
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _spiSoftRxDat
               _spiSoftClk
             _spiSoftTxDat
               _spiSoftClk
           _spiSoftTxDat (ARG)
             _spiSoftClk
       _MFRC522_Wr
         _MFRC522_Rd (ARG)
           _spiSoftRxDat
             _spiSoftClk
           _spiSoftTxDat
             _spiSoftClk
         _spiSoftTxDat (ARG)
           _spiSoftClk
     _MFRC522_Wr
       _MFRC522_Rd (ARG)
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
       _spiSoftTxDat (ARG)
         _spiSoftClk
   _delay_ms
   _hex2Ascii
   _lcd_clr
     _lcd_inst
   _lcd_init
     _lcd_inst
   _lcd_print
     _lcd_data
     _lcd_lincol
       _lcd_inst
   _mfrc522Iniciar
     _mfrc522AntOn
       _mfrc522SetBit
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxCmd
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
     _mfrc522Rst
       _spiSoftTxCmd
         _spiSoftClk
       _spiSoftTxDat
         _spiSoftClk
     _spiSoftTxCmd
       _spiSoftClk
     _spiSoftTxDat
       _spiSoftClk
   _procura_tag
     _spiSoftTxCmd
       _spiSoftClk
     _spiSoftTxDat
       _spiSoftClk
     _tagTxCmd
       _mfrc522ClrBit
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxCmd
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
       _mfrc522SetBit
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxCmd
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
       _spiSoftRxDat
         _spiSoftClk
       _spiSoftTxCmd
         _spiSoftClk
       _spiSoftTxDat
         _spiSoftClk
   _prs_detect
     _delay_ms
   _sensors_init
   _spiSoftIniciar
   _spi_hardware_disable
   _tag_false
   _tmr_tick_init
   _uts_trigger

 _isr (ROOT)
   ___aldiv
     ___lmul (ARG)
   ___lmul
   _tmr_tick_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     23      4E       9       81.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      37      11       57.3%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2F      4C       7       95.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      36       5       67.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     115      12        0.0%
ABS                  0      0     115       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Fri Nov 11 09:38:44 2022

               ?_mfrc522ClrBit 00A6                              _b 007D                              _c 007B  
                            pc 0002                 ?_mfrc522SetBit 00A6                    __CFG_CP$OFF 0000  
                           l60 0165                             l61 0168                             l70 02BE  
                           l62 0169                             l71 02BF                             l63 01C1  
                           l55 00DF                             l56 0334                             l72 02E0  
                           l64 01CA                             l81 09A1                             l73 0301  
                           l65 01CB                             l57 00E0                             l82 098D  
                           l74 035E                             l58 035D                             l66 0216  
                           l83 09AA                             l75 035F                             l67 0250  
                           l59 0115                             l84 09AA                             l76 035F  
                           l68 0272                             l69 027B                             l95 0F8D  
                           l97 0F82                             l98 0F95                             l99 0FC9  
                           fsr 0004                ?_mfrc522Iniciar 0070  __size_of_spi_hardware_disable 000E  
                          l100 0FF4                            l102 0FE9                            l110 08C3  
                          l103 0FFC                            l104 0FFF                            l120 0C39  
                          l113 07FA                            l121 0C71                            l122 0C71  
                          l107 0BDC                            l116 17D2                            l302 17F1  
                          l119 0C5A                            l311 0380                            l400 0DC7  
                          l320 0429                            l312 036C                            l232 0A06  
                          l401 0DD8                            l305 089B                            l313 0390  
                          l233 0A22                            l402 0DE3                            l330 0502  
                          l322 045B                            l314 0375                            l234 0A21  
                          l403 0DF4                            l331 050D                            l323 045C  
                          l315 037E                            l235 0A28                            l404 0E14  
                          l308 0D87                            l332 0537                            l324 0552  
                          l316 03F6                            l405 0E14                            l325 054D  
                          l333 050F                            l317 03D1                            l341 0C20  
                          l229 0950                            l334 053E                            l326 0499  
                          l318 03FD                            l342 0C26                            l238 08ED  
                          l351 091B                            l335 0552                            l327 054C  
                          l319 0422                            l431 17FF                            l183 08D8  
                          l360 0568                            l440 0CC0                            l336 0554  
                          l328 04E9                            l345 096D                            l361 0571  
                          l441 0CA2                            l329 04FA                            l450 0B27  
                          l354 0903                            l370 06C1                            l362 05A5  
                          l442 0CA6                            l434 098B                            l371 06BA  
                          l363 0586                            l443 0CC0                            l339 0C25  
                          l428 17E4                            l348 09CE                            l380 06AB  
                          l372 0624                            l364 05B3                            l453 0AC9  
                          l381 06C1                            l373 06B9                            l365 05D0  
                          l357 0573                            l437 0C8B                            l454 0AEE  
                          l446 0B01                            l382 06C3                            l374 0658  
                          l366 05D7                            l358 055F                            l438 0C91  
                          l455 0ADC                            l447 0B27                            l375 0669  
                          l359 0583                            l391 0EAD                            l439 0C9A  
                          l456 0AF0                            l448 0B09                            l376 0671  
                          l368 05F9                            l392 0E75                            l296 0ABD  
                          l449 0B0D                            l377 067C                            l369 05FA  
                          l393 0E90                            l385 0A36                            l378 069D  
                          l394 0EAD                            l386 0A57                            l379 067F  
                          l395 0EAF                            l299 0A8B                            l387 0A4C  
                          l388 0A59                            l398 0E0D                            l399 0D8C  
                          _TAG 0051                   __CFG_CPD$OFF 0000                            _UID 00E1  
                          _isr 06C4                            _ret 0050                            _uid 004F  
                          fsr0 0004                            indf 0000               ??_spiSoftIniciar 00A0  
                 __CFG_FOSC$HS 0000                 _rfid_read_wait 0000                   _tmr_tick_int 0B5F  
                 __CFG_LVP$OFF 0000                           l3300 0B05                           l3302 0B0D  
                         l3310 0C75                           l3304 0B15                           l3320 0C99  
                         l3312 0C78                           l3400 0ABA                           l3306 0B1A  
                         l3330 0CB9                           l3322 0C9E                           l3314 0C85  
                         l3410 0A80                           l3402 0A5D                           l3308 0B20  
                         l3340 09B1                           l3332 0954                           l3324 0CA6  
                         l3316 0C8B                           l3412 0A88                           l3404 0A6F  
                         l3420 098D                           _C2ON 0847                           l3270 0ABE  
                         l3342 09C7                           l3334 0957                           l3414 0907  
                         l3350 0F5C                           l3430 0BB7                           l3326 0CAE  
                         l3318 0C91                           l3406 0A72                           l3422 09A1  
                         l3280 0AD5                           l3272 0AC1                           l3344 09CA  
                         l3336 096A                           l3416 08F1                           l3360 0F95  
                         l3352 0F73                           l3440 0BD9                           l3432 0BBE  
                         l3424 0B9C                           l3328 0CB3                           l3408 0A79  
                         l4400 0429                           l3290 0AF0                           l3282 0ADC  
                         l3274 0AC8                           l3346 09CE                           l3338 09AE  
                         l3370 0FBE                           l3362 0F98                           l3354 0F7B  
                         l3434 0BC1                           l3426 0B9F                           l3442 08B2  
                         l4410 0454                           l4402 0444                           l3418 098C  
                         l3268 17DB                           l3284 0AE1                           l3276 0AC9  
                         l3292 0AF4                           l4500 05BD                           l3380 0FDB  
                         l3372 0FC5                           l3364 0FA3                           l3356 0F82  
                         l3348 0F59                           l3700 07D4                           l3436 0BC2  
                         l3428 0BB6                           l3444 17E5                           l4420 0482  
                         l4412 045C                           l4404 0447                           l3286 0AE7  
                         l3278 0ACF                           l3294 0AF8                           l4510 05EE  
                         l4502 05C5                           l3382 0FE2                           l3366 0FA6  
                         l3374 0FC9                           l3358 0F8D                           l3702 07DA  
                         l3438 0BD1                           l3446 0889                           l3390 0A8F  
                         l4430 0499                           l4422 0489                           l4414 0466  
                         l4406 044B                           l3710 0939                           l3288 0AEE  
                         l3296 0AF9                           l4520 0617                           l4512 05F2  
                         l4504 05D0                           l4600 0E85                           l3384 0FE9  
                         l3376 0FCB                           l3368 0FBD                           l3704 07E0  
                         l3448 0898                           l3392 0AA1                           l4440 04D2  
                         l4432 049F                           l4424 048E                           l4416 046D  
                         l4408 0450                           l4360 0369                           l3720 0942  
                         l3712 093C                           l3298 0B00                           l4530 0641  
                         l4522 061A                           l4514 05FA                           l4506 05D7  
                         l4602 0E89                           l4610 0D88                           l3386 0FF4  
                         l3378 0FDA                           l3706 07E6                           l3394 0AA4  
                         l4450 0502                           l4442 04D7                           l4434 04B1  
                         l4426 048F                           l4418 047F                           l4370 0380  
                         l4362 036A                           l3730 094C                           l3722 0945  
                         l3714 093D                           l4540 0671                           l4532 0646  
                         l4524 0621                           l4516 0604                           l4508 05E8  
                         l4604 0E90                           l4620 0DC2                           l4612 0D8C  
                         l3388 0FFC                           l3396 0AAB                           l4460 052D  
                         l4452 0508                           l4444 04E9                           l4436 04C8  
                         l4428 0496                           l4380 03D1                           l4372 0390  
                         l4364 036C                           l3732 094D                           l3724 0946  
                         l3716 0940                           l3708 0935                           l3660 17FC  
                         l3740 08CA                           l4700 0156                           l4550 069D  
                         l4542 0677                           l4534 0658                           l4526 0624  
                         l4518 060C                           l4606 0EA8                           l4630 0DDE  
                         l4622 0DC7                           l4614 0D92                           l3670 0D37  
                         l3398 0AB2                           l4470 0554                           l4462 0530  
                         l4454 050D                           l4446 04FA                           l4438 04CB  
                         l4390 03FD                           l4382 03D8                           l4374 03A0  
                         l4366 0375                           l4358 0365                           l3734 094E  
                         l3726 0948                           l3718 0941                           l3662 096E  
                         l3654 17F2                           l3750 08D4                           l3742 08CC  
                         l4710 017B                           l4702 015B                           l4552 06AB  
                         l4544 067C                           l4536 0669                           l4528 062A  
                         l4480 055D                           l4608 0EAF                           l4640 0DFE  
                         l4632 0DE3                           l4624 0DCD                           l4616 0DA3  
                         l3680 07AB                           l3760 0C4F                           l3672 0D49  
                         l4456 050F                           l4464 0537                           l4448 04FF  
                         l4392 040C                           l4384 03EC                           l4376 03CA  
                         l4368 037F                           l3736 094F                           l3728 0949  
                         l3664 0979                           l3656 17F5                           l3752 08D5  
                         l3744 08CE                           l4720 01C1                           l4712 018E  
                         l4704 0164                           l4546 067F                           l4538 066E  
                         l4554 06BA                           l4490 0583                           l4482 055F  
                         l4634 0DE9                           l4626 0DD3                           l4618 0DBC  
                         l4642 0E0D                           l3690 07BF                           l3682 07B9  
                         l3762 0C55                           l3754 0C2A                           l3674 0D5B  
                         l3666 0D11                           l4466 053E                           l4458 0517  
                         l4394 040F                           l4386 03EF                           l4378 03CD  
                         l4570 0C14                           l4562 0BE0                           l3658 17F9  
                         l3850 0A2C                           l3746 08D0                           l3738 08C4  
                         l4730 020D                           l4722 01CB                           l4714 019B  
                         l4706 0169                           l4556 06C3                           l4548 0696  
                         l4492 0586                           l4484 0568                           l4476 0558  
                         l4580 0E18                           l4636 0DEF                           l4628 0DD8  
                         l3692 07C0                           l3684 07BC                           l3764 0C5A  
                         l3756 0C2E                           l3676 0D6D                           l3668 0D25  
                         l4468 054D                           l4396 0417                           l4388 03F6  
                         l4572 0C19                           l4564 0BED                           l3860 0A4C  
                         l3852 0A2E                           l3748 08D1                           l4740 0250  
                         l4732 0216                           l4724 01D0                           l4716 01B7  
                         l4708 016E                           l4660 0065                           l4494 059C  
                         l4486 0572                           l4478 055C                           l4590 0E67  
                         l4582 0E1F                           l4638 0DF4                           l3766 17CC  
                         l3694 07C1                           l3686 07BD                           l3758 0C39  
                         l3678 0D7F                           l4398 0422                           l4574 0C20  
                         l4566 0BF0                           l3862 0A50                           l3854 0A35  
                         l3870 08DC                           l4750 027B                           l4742 0255  
                         l4734 021B                           l4726 01E0                           l4718 01C0  
                         l4670 00A4                           l4662 0066                           l4496 05A5  
                         l4488 0573                           l4592 0E6C                           l4584 0E2A  
                         l3696 07C2                           l3688 07BE                           l4576 0C26  
                         l4568 0BFB                           l3880 0A06                           l3864 0A57  
                         l3856 0A36                           l3872 08E3                           l4760 02C7  
                         l4752 0290                           l4744 025F                           l4736 022B  
                         l4728 0200                           l4680 00BD                           l4672 00B7  
                         l4664 0067                           l4498 05B3                           l4594 0E6D  
                         l4586 0E40                           l4578 0E15                           l3698 07D1  
                         l3890 0A26                           l3882 0A0C                           l3874 09FA  
                         l3866 0A59                           l3858 0A49                           l4770 02F8  
                         l4762 02D7                           l4754 02B7                           l4746 0269  
                         l4738 024B                           l4690 010F                           l4682 00DB  
                         l4674 00B8                           l4666 007F                           l4658 005F  
                         l4596 0E74                           l4588 0E4A                           l3892 0A28  
                         l3884 0A17                           l3876 0A00                           l3868 08D9  
                         l4924 0340                           l4780 0329                           l4772 0301  
                         l4764 02E0                           l4756 02BF                           l4748 0272  
                         l4692 0115                           l4684 00E0                           l4676 00B9  
                         l4668 008F                           l4598 0E75                           l4926 0388  
                         l3886 0A1F                           l3878 0A04                           l4782 032E  
                         l4774 0306                           l4766 02E5                           l4758 02C4  
                         l4694 0135                           l4686 0100                           l4678 00BC  
                         l4928 057B                           l3888 0A22                           l4784 0333  
                         l4776 030E                           l4768 02E8                           l4696 0138  
                         l4688 010B                           l4778 031E                           l4698 0144  
                         l4786 0334                           ?_isr 0070                           STR_1 0832  
                         STR_2 086F                           STR_3 083D                           STR_4 0868  
                         STR_5 0876                           STR_6 0822                           STR_7 0868  
                         STR_8 0850                           STR_9 0812                           u3100 0A49  
                         u3101 0A48                           u3110 0A56                           u3111 0A55  
                         u4000 066E                           u3120 0A00                           u4001 066D  
                         u3121 09FF                           u4010 0677                           u3130 0A1F  
                         u4011 0676                           u3131 0A1E                           u4020 06AA  
                         u4100 0DC2                           u2500 0C85                           u4021 06A9  
                         u4101 0DC1                           u2501 0C84                           u4110 0DCD  
                         u2510 0C98                           u4030 0C19                           u4111 0DCC  
                         u2511 0C97                           u4031 0C18                           u2440 0AC7  
                         u4120 0DD3                           u2600 0FE8                           u2520 0C9E  
                         u4040 0C1F                           u2441 0AC6                           u4025 06A6  
                         u4121 0DD2                           u2601 0FE7                           u2521 0C9D  
                         u4041 0C1E                           u2450 0AD5                           u4050 0E6C  
                         u4130 0DDE                           u2530 0CBF                           u2610 09A9  
                         u3090 0A34                           u2451 0AD4                           u4051 0E6B  
                         u4131 0DDD                           u2531 0CBE                           u2611 09A8  
                         u3091 0A33                           u2460 0AED                           u4060 0E73  
                         u4140 0DE9                           u4220 0071                           u2461 0AEC  
                         u4061 0E72                           u4141 0DE8                           u2470 0AFF  
                         u4070 0E8F                           u4150 0DEF                           u2550 0F7B  
                         u4230 0097                           u2471 0AFE                           u4071 0E8E  
                         u4151 0DEE                           u2551 0F7A                           u2480 0B05  
                         u4080 0EA8                           u4160 0E13                           u2560 0F81  
                         u4240 015B                           u2481 0B04                           u4081 0EA7  
                         u4161 0E12                           u2561 0F80                           u2545 0F61  
                         u2625 0BA4                           u4241 015A                           u2490 0B26  
                         u2570 0FA3                           u4250 01B7                           u2491 0B25  
                         u2571 0FA2                           u2635 08B5                           u4251 01B6  
                         u4260 0269                           u4261 0268                           u2590 0FE2  
                         u4270 0290                           u4095 0DB2                           u2591 0FE1  
                         u4407 0993                           u4271 028F                           u3800 0496  
                         u4280 02B7                           u2585 0FAB                           u3801 0495  
                         u4417 042D                           u4281 02B6                           u4273 028C  
                         u3810 049F                           u3730 03FC                           u4507 0FEF  
                         u4427 0BBB                           u3811 049E                           u3731 03FB  
                         u4283 02B3                           u3900 05EE                           u2940 0C70  
                         u3820 04D7                           u3740 0417                           u3901 05ED  
                         u4517 0FF8                           u4437 0BD6                           u2941 0C6F  
                         u3821 04D6                           u3741 0416                           u3910 05F2  
                         u3750 0450                           u3911 05F1                           u4447 07B3  
                         u3751 044F                           u4367 08E0                           u3920 05F8  
                         u3760 0454                           u3921 05F7                           u4457 07CB  
                         u3761 0453                           u4377 08EA                           u3930 060C  
                         u3850 04FF                           u3770 045A                           u3931 060B  
                         u4467 07F4                           u3851 04FE                           u3835 04DA  
                         u3771 0459                           u4387 097D                           u3940 0617  
                         u3860 0508                           u3780 046D                           u3941 0616  
                         u4477 0F88                           u3861 0507                           u3845 04EC  
                         u3781 046C                           u4397 0986                           u3950 0621  
                         u3870 053D                           u3790 048E                           u3951 0620  
                         u4487 0F91                           u3871 053C                           u3791 048D  
                         u3960 062A                           u3880 05B2                           u3961 0629  
                         u3881 05B1                           u4497 0FC2                           u3970 0646  
                         u3890 05C5                           u3971 0645                           u3891 05C4  
                         u3885 05AE                           u3985 0649                           u3995 065B  
                 __CFG_WRT$OFF 0000                    main@uidAsci 01BB                           _f_mp 007A  
                         _find 007C                           _dist 00E8                           _main 005F  
        MFRC522_AntiColl@unLen 00C8                           _time 0049                           btemp 007E  
                         start 0010                  __CFG_IESO$OFF 0000               _MFRC522_AntiColl 0E15  
               ??_mfrc522AntOn 00AA              _rfid_display_wait 0000                 MFRC522_Rd@addr 00A6  
                _tmr_tick_init 08C4                          ??_isr 0032           mfrc522ClrBit@mascara 00A6  
               MFRC522_Wr@addr 00AA                __end_of___aldiv 0F56                          ?_main 0070  
                        _EEADR 010D                          STR_10 0868                          STR_11 0861  
                        STR_12 0859                          STR_13 0847                          STR_14 087C  
                        STR_15 0882                          STR_16 0884                  __CFG_WDTE$OFF 0000  
                        _ANSEL 0188                          i1l162 0794                          i1l163 06DC  
                        i1l164 0792                          i1l165 07A0                          i1l166 07A0  
                        i1l600 0D05                          i1l601 0D10                          i1l186 0B6E  
                        i1l187 0B98                          i1l188 0B8D                          i1l189 0B98  
                        i1l660 0F3A                          i1l652 0EC4                          i1l661 0F4C  
                        i1l653 0ED8                          i1l662 0F55                          i1l654 0F3B  
                        i1l655 0EF9                          i1l656 0EEB                          i1l657 0EFE  
                        i1l658 0EFF                          i1l659 0F2A                          i1l598 0CCC  
                        i1l599 0CEA                          _TMR1H 000F                          _TMR1L 000E  
                        _PORTD 0008                          _SSPIE 0463                          _SSPEN 00A5  
          ___lmul@multiplicand 0074            __size_of_MFRC522_Rd 0024                   lcd_print@col 00A6  
          __size_of_MFRC522_Wr 001D                   lcd_print@lin 00AB                 __CFG_FCMEN$OFF 0000  
                 lcd_print@pos 00AA                   lcd_print@str 00A7                __end_of_lcd_clr 17D3  
                  _uts_trigger 08D9                          _timer 0041         MFRC522_AntiColl@serNum 00C0  
               __CFG_BOREN$OFF 0000                          pclath 000A              _MFRC522_Clear_Bit 0904  
                        status 0003                          wtemp0 007E             ?_MFRC522_Clear_Bit 00AB  
                lcd_lincol@col 00A3                  lcd_lincol@lin 00A5                ??_mfrc522ClrBit 00A7  
               __CFG_MCLRE$OFF 0000                __initialization 0013                 ?_tmr_tick_init 0070  
              ??_mfrc522SetBit 00A7                   __end_of_main 0362            ??_MFRC522_Clear_Bit 00AC  
              MFRC522_Rd@value 00A7               ??_MFRC522_ToCard 00B5       __size_of_MFRC522_Set_Bit 0016  
                       ??_main 00CB                hex2Ascii@cntDig 00A3                MFRC522_ToCard@i 00BD  
              MFRC522_ToCard@n 00BF          MFRC522_ToCard@backLen 00B4                hex2Ascii@strOut 00A2  
              MFRC522_Wr@value 00A8      __end_of_MFRC522_Clear_Bit 091C          MFRC522_ToCard@_status 00BA  
        MFRC522_ToCard@command 00BC                         _EEDATA 010C                         _EECON2 018D  
                       _ANSELH 0189                         i1l2810 0B66                         i1l2820 0B91  
                       i1l2812 0B6D                         i1l2814 0B6E                         i1l2806 0B5F  
                       i1l2816 0B7F                         i1l2808 0B65                         i1l2818 0B8D  
                       i1l4800 06D0                         i1l4650 0CEA                         i1l4810 06F3  
                       i1l4802 06D2                         i1l4652 0CF3                         i1l4644 0CC1  
                       i1l4812 070F                         i1l4804 06DA                         i1l4820 0794  
                       i1l4654 0D05                         i1l4646 0CCC                         i1l4822 0799  
                       i1l4814 0745                         i1l4806 06DD                         i1l3960 0EB3  
                       i1l4656 0D10                         i1l4648 0CD0                         i1l4824 079A  
                       i1l4816 0764                         i1l4808 06EA                         i1l3970 0EE0  
                       i1l3962 0EB7                         i1l4818 0792                         i1l3980 0F08  
                       i1l3972 0EE8                         i1l3964 0EC8                         i1l3982 0F1A  
                       i1l3974 0EEB                         i1l3990 0F3B                         i1l3966 0ED3  
                       i1l3958 0EB0                         i1l3992 0F40                         i1l3984 0F28  
                       i1l3976 0EF9                         i1l3968 0ED8                         i1l3994 0F4C  
                       i1l3986 0F2A                         i1l3978 0EFF                         i1l4794 06C4  
                       i1l3996 0F55                         i1l3988 0F33                         i1l4796 06C8  
                       i1l4798 06CC                         u330_20 0EB7                         u330_21 0EB6  
                       u331_20 0EC8                         u331_21 0EC7                         u332_20 0EE8  
                       u332_21 0EE7                         u420_25 0CF4                         u421_20 0D04  
                       u421_21 0D03                         u333_25 0EED                         u334_20 0EFD  
                       u430_20 06CC                         u334_21 0EFC                         u430_21 06CB  
                       u431_20 06D0                         u431_21 06CF                         u335_25 0F01  
                       u336_20 0F1A                         u192_20 0B6C                         u336_21 0F19  
                       u192_21 0B6B                         u336_25 0F16                         u432_25 06EC  
                       u417_20 0CD0                         u193_20 0B7F                         u417_21 0CCF  
                       u193_21 0B7E                         u433_21 0701                         u433_22 0708  
                       u433_23 070F                         u337_25 0F2B                         u338_20 0F39  
                       u194_20 0B97                         u434_20 0799                         u338_21 0F38  
                       u418_21 0CDB                         u194_21 0B96                         u434_21 0798  
                       u418_22 0CE2                         u418_23 0CE9                         u339_20 0F40  
                       u339_21 0F3F                         u419_25 0CEC                         u429_20 06C8  
                       u429_21 06C7          MFRC522_ToCard@sendLen 00B1          MFRC522_ToCard@waitIRq 00B9  
             mfrc522ClrBit@end 00A8               __end_of_delay_ms 09AB                 __CFG_PWRTE$OFF 0000  
             __end_of_lcd_data 0BDD               __end_of_lcd_init 07FB               __end_of_lcd_inst 1000  
                       ___lmul 0CC1                      ??___aldiv 0079        MFRC522_AntiColl@_status 00C9  
             __end_of_tagTxCmd 0555                      ??_lcd_clr 00A3                    tagTxCmd@cmd 00B8  
                       saved_w 007E           __end_of_mfrc522AntOn 17F2        __end_of__initialization 005B  
                 ?_procura_tag 00BB                   ??_MFRC522_Rd 00A5                   ??_MFRC522_Wr 00A9  
              ??_tmr_tick_init 00A0               ??_mfrc522Iniciar 00AB                 __pcstackCOMMON 0070  
                 __pidataBANK0 07FB                   __pidataBANK1 091C                   __pidataBANK2 0B28  
                 __pidataBANK3 09CF                    tag_false@p1 00A4                    tag_false@p2 00A0  
           __size_of_hex2Ascii 008D                _tmr_tick_reload 0810               tagTxCmd@lastBits 00B7  
     __end_of_MFRC522_AntiColl 0EB0              ??_MFRC522_Set_Bit 00AC             __end_of_MFRC522_Rd 09CF  
           __end_of_MFRC522_Wr 096E               mfrc522SetBit@end 00A8             __size_of_lcd_print 004B  
   __size_of_MFRC522_Clear_Bit 0018   __end_of_spi_hardware_disable 1800                     __pbssBANK0 0041  
                   __pbssBANK1 00E8         MFRC522_ToCard@backData 00B2             __size_of_tag_false 0031  
                   __pmaintext 005F                        ?___lmul 0070                     __pintentry 0004  
               ___lmul@product 0020         MFRC522_ToCard@lastBits 00BB         MFRC522_ToCard@sendData 00AF  
                    ?_delay_ms 00A0                     _lcd_lincol 08AF                     _mfrc522Rst 0889  
            procura_tag@status 00C0                   ?_uts_trigger 0070                      ?_lcd_data 0070  
                    ?_lcd_init 0070                      ?_lcd_inst 0070                     __stringtab 0800  
            __end_of_hex2Ascii 0E15              mfrc522ClrBit@lido 00A9                      ?_tagTxCmd 00AA  
      __end_of_tmr_tick_reload 0812                        ___aldiv 0EB0              __end_of_lcd_print 0C72  
              __size_of___lmul 0050                     hex2Ascii@a 00A9                     hex2Ascii@b 00A8  
                tmr_tick_int@i 0073                        __ptext1 08D9                        __ptext2 08C4  
                      __ptext3 0A29                        __ptext4 17F2                        __ptext5 096E  
                      __ptext6 0935                        __ptext7 09FA                        __ptext8 098C  
                      __ptext9 0BDD                 procura_tag@len 00C1                        _lcd_clr 17CC  
        __size_of_mfrc522AntOn 000D                      _T1CONbits 0010                   __size_of_isr 00E7  
                      _uidAsci 01AE               ___aldiv@dividend 0028                     ??_delay_ms 00A2  
            __end_of_tag_false 0A5A               spiSoftTxDat@dado 00A2                        main@TAG 01CE  
                      main@UID 01D3                     ??_lcd_data 00A0                        clrloop0 17D4  
                      main@uid 01DC               spiSoftTxCmd@oper 00A0                     ??_lcd_init 00A3  
                   ??_lcd_inst 00A0           end_of_initialization 005B                  ?_spiSoftRxDat 0070  
                ?_spiSoftTxDat 0070                  ?_spiSoftTxCmd 00A0                     ??_tagTxCmd 00B0  
                 tagTxCmd@data 00AA                  ?_sensors_init 0070                   tagTxCmd@dlen 00AC  
      __size_of_spiSoftIniciar 001E                   tagTxCmd@rlen 00AF           __size_of_procura_tag 004A  
        __end_of_mfrc522ClrBit 0ABE                   _mfrc522AntOn 17E5               ___aldiv@quotient 002E  
        __end_of_mfrc522SetBit 0A8C                     _spiSoftClk 17DB           _spi_hardware_disable 17F2  
                    _PORTAbits 0005                      _PORTBbits 0006                      _PORTCbits 0007  
                    _PORTDbits 0008                     _prs_detect 09FA                      _TRISAbits 0085  
                    _TRISBbits 0086                      _TRISCbits 0087                    ?_lcd_lincol 00A3  
                    _TRISDbits 0088                    ?_mfrc522Rst 0070                 ??_spiSoftRxDat 00A0  
               ??_spiSoftTxDat 00A0                 ??_spiSoftTxCmd 00A1                 ??_sensors_init 00A0  
                   main@perigo 01DA                _MFRC522_Set_Bit 08EE            MFRC522_ToCard@irqEn 00B8  
               __end_of___lmul 0D11          ?_spi_hardware_disable 0070                   tag_false@ret 00A5  
          start_initialization 0013              ?_MFRC522_AntiColl 00C0              MFRC522_AntiColl@i 00CA  
                ?_tmr_tick_int 0070                    __end_of_isr 07AB        __size_of_MFRC522_ToCard 016F  
           ??_MFRC522_AntiColl 00C2           __size_of_uts_trigger 0015                 hex2Ascii@strIn 00A0  
        __end_of_tmr_tick_init 08D9            __size_of_lcd_lincol 0015                       ??___lmul 0078  
            mfrc522SetBit@lido 00A9            __size_of_mfrc522Rst 0013                     init_fetch0 089C  
                  ?_spiSoftClk 0070                    __pdataBANK0 0051                    __pdataBANK1 00CF  
                  __pdataBANK2 0110                    __pdataBANK3 0190                    ?_prs_detect 0070  
                  __pbssCOMMON 007A                 ??_tmr_tick_int 0070                      ___latbits 0002  
                __pcstackBANK0 0020                  __pcstackBANK1 00A0                  __pcstackBANK3 01BB  
                   tag_false@i 00A6              __size_of_delay_ms 001F                   hex2Ascii@dez 00AB  
                 hex2Ascii@uni 00AA              __size_of_lcd_data 0044              __size_of_lcd_init 0050  
            __size_of_lcd_inst 00AA                tagTxCmd@waitIRq 00B3                 _spiSoftIniciar 096E  
                    _dados_tag 0190                      _hex2Ascii 0D88        __end_of_MFRC522_Set_Bit 0904  
            __size_of_tagTxCmd 01F3            MFRC522_Set_Bit@addr 00AD            MFRC522_Set_Bit@mask 00AB  
                     ?___aldiv 0024         ??_spi_hardware_disable 00A0           __end_of_spiSoftRxDat 0AF1  
         __end_of_spiSoftTxDat 0B28           __end_of_spiSoftTxCmd 0CC1                      __pstrings 0800  
                    _lcd_print 0C27                      _matEeprom 0110                       ?_lcd_clr 0070  
         __end_of_sensors_init 0951        __size_of_mfrc522Iniciar 0077         __end_of_spiSoftIniciar 098C  
                    _tag_false 0A29            __size_of_spiSoftClk 000A                ___aldiv@divisor 0024  
            interrupt_function 0004                ___aldiv@counter 002C                spiSoftTxDat@reg 00A3  
              spiSoftTxCmd@end 00A3                      _rfid_read 0000                spiSoftTxCmd@reg 00A5  
                     _IOCBbits 0096                      delay_ms@t 00A0                     ?_hex2Ascii 00A0  
                    clear_ram0 17D3                       _PIE1bits 008C            __size_of_prs_detect 002F  
                     _PIR1bits 000C                      main@F1412 00CF                      main@F1414 00DC  
                    main@F1416 01A1                      main@F1418 00D6                      lcd_data@d 00A2  
                   ?_lcd_print 00A6                   _rfid_display 0000                    __stringbase 080F  
                    lcd_inst@i 00A2                      main@senha 01C8                      main@state 01DD  
                 ??_lcd_lincol 00A4                   ??_mfrc522Rst 00A6                 _MFRC522_ToCard 0555  
            ___lmul@multiplier 0070                ?_spiSoftIniciar 0070                     ?_tag_false 00A0  
                ??_procura_tag 00BD                     _EECON1bits 018C               ?_MFRC522_Set_Bit 00AB  
        MFRC522_Clear_Bit@addr 00AE          MFRC522_Clear_Bit@mask 00AB           __end_of_tmr_tick_int 0B99  
                    tagTxCmd@a 00B5                      tagTxCmd@i 00B9                      tagTxCmd@n 00BA  
           __end_of_lcd_lincol 08C4               __size_of___aldiv 00A6             __end_of_mfrc522Rst 089C  
           __end_of__stringtab 0810               __size_of_lcd_clr 0007                 tagTxCmd@result 00AD  
       __end_of_MFRC522_ToCard 06C4                 tagTxCmd@status 00B4                       _isr$1615 0039  
                     _isr$1616 003D                       _delay_ms 098C                       __ptext10 0362  
                     __ptext11 0A8C                       __ptext20 07AB                       __ptext12 0D11  
                     __ptext21 17CC                       __ptext13 0889                       __ptext30 0AF1  
                     __ptext22 0F56                       __ptext14 17E5                       __ptext31 0ABE  
                     __ptext23 0D88                       __ptext15 0A5A                       __ptext32 17DB  
                     __ptext24 0E15                       __ptext16 0C72                       __ptext33 06C4  
                     __ptext25 0555                       __ptext17 0C27                       __ptext34 0B5F  
                     __ptext26 08EE                       __ptext18 08AF                       __ptext35 0CC1  
                     __ptext27 0904                       __ptext19 0B99                       __ptext36 0EB0  
                     __ptext28 0951                       __ptext29 09AB              __CFG_BOR4V$BOR40V 0000  
              procura_tag@data 00BB                       _lcd_data 0B99         __size_of_mfrc522ClrBit 0032  
              procura_tag@modo 00BF           mfrc522SetBit@mascara 00A6                       _lcd_init 07AB  
                     _lcd_inst 0F56    MFRC522_AntiColl@serNumCheck 00C7         __size_of_mfrc522SetBit 0032  
                __size_of_main 0303                       _tagTxCmd 0362                 spiSoftRxDat@rc 00A2  
                  ??_hex2Ascii 00A4                     _MFRC522_Rd 09AB                     _MFRC522_Wr 0951  
    __size_of_MFRC522_AntiColl 009B                       _t_sensor 004D          __size_of_spiSoftRxDat 0033  
        __size_of_spiSoftTxDat 0037          __size_of_spiSoftTxCmd 004F          __size_of_sensors_init 001C  
          __end_of_procura_tag 0C27                   ??_spiSoftClk 00A0                    ??_lcd_print 00A9  
               _mfrc522Iniciar 0D11                   ??_prs_detect 00A4                     _INTCONbits 000B  
              ?_MFRC522_ToCard 00AF                  ??_uts_trigger 00A0                       init_ram0 08A0  
                tagTxCmd@irqEn 00B6                       intlevel1 0000                    ??_tag_false 00A1  
                 _spiSoftRxDat 0ABE                   _spiSoftTxDat 0AF1                   _spiSoftTxCmd 0C72  
           __end_of_spiSoftClk 17E5                   _sensors_init 0935                  spiSoftRxDat@a 00A3  
                    stringcode 080A                  spiSoftTxDat@a 00A4                  spiSoftTxCmd@a 00A4  
           __end_of_prs_detect 0A29                  _mfrc522ClrBit 0A8C                  _mfrc522SetBit 0A5A  
       __end_of_mfrc522Iniciar 0D88                       stringdir 080A                       stringtab 0800  
                 ___aldiv@sign 002D         __size_of_tmr_tick_init 0015          __size_of_tmr_tick_int 003A  
          __end_of_uts_trigger 08EE                    _procura_tag 0BDD                    ?_MFRC522_Rd 0070  
                  ?_MFRC522_Wr 00A8                  ?_mfrc522AntOn 0070  
