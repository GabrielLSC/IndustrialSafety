

Microchip Technology PIC LITE Macro Assembler V2.00 build -1524193055 
                                                                                               Wed Nov 09 08:47:02 2022

Microchip Technology Omniscient Code Generator v2.00 (Free mode) build 20180527130849
     1  0000                     
      + 0000                     
     2                           ; Version 2.00
     3                           ; Generated 27/05/2018 GMT
     4                           
     5                           ; 
     6                           ; Copyright Â© 2018, Microchip Technology Inc. and its subsidiaries ("Microchip")
     7                           ; All rights reserved.
     8                           ; 
     9                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
                                 ip").
    10                           ; 
    11                           ; Redistribution and use in source and binary forms, with or without modification, are
    12                           ; permitted provided that the following conditions are met:
    13                           ; 
    14                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
                                 t of
    15                           ;        conditions and the following disclaimer.
    16                           ; 
    17                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
                                 list
    18                           ;        of conditions and the following disclaimer in the documentation and/or other
    19                           ;        materials provided with the distribution.
    20                           ; 
    21                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
                                 is
    22                           ;        software without specific prior written permission.
    23                           ; 
    24                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,

    25                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
                                 OR
    26                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
                                 T,
    27                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
                                 
    28                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
                                 
    29                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
                                 RICT
    30                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
                                 SE OF
    31                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    32                           ; 
    33                           
    34                           
    35                           ; 
    36                           ; Code-generator required, PIC16F887 Definitions
    37                           ; 
    38  0004                     fsr0 equ 04h
    39  0004                     indf equ 00h
    40  0000                     indf0 equ 00h
    41  0000                     pc equ 02h
    42  0002                     pcl equ 02h
    43  0002                     pclath equ 0Ah
    44  000A                     status equ 03h
    45  0003                     
     2                           opt pagewidth 120
     3  0000                     byte0	macro	val
     4                           	(getbyte(val,0))
     5                           endm
     6  0000                     byte1	macro	val
     7                           	(getbyte(val,1))
     8                           endm
     9  0000                     byte2	macro	val
    10                           	(getbyte(val,2))
    11                           endm
    12  0000                     byte3	macro	val
    13                           	(getbyte(val,3))
    14                           endm
    15  0000                     byte4	macro	val
    16                           	(getbyte(val,4))
    17                           endm
    18  0000                     byte5	macro	val
    19                           	(getbyte(val,5))
    20                           endm
    21  0000                     byte6	macro	val
    22                           	(getbyte(val,6))
    23                           endm
    24  0000                     byte7	macro	val
    25                           	(getbyte(val,7))
    26                           endm
    27  0000                     getword	macro	val,pos
    28                           	(((val) >> (8 * pos)) and 0xffff)
    29                           endm
    30  0000                     word0	macro	val
    31                           	(getword(val,0))
    32                           endm
    33  0000                     word1	macro	val
    34                           	(getword(val,2))
    35                           endm
    36  0000                     word2	macro	val
    37                           	(getword(val,4))
    38                           endm
    39  0000                     word3	macro	val
    40                           	(getword(val,6))
    41                           endm
    42  0000                     gettword	macro	val,pos
    43                           	(((val) >> (8 * pos)) and 0xffffff)
    44                           endm
    45  0000                     tword0	macro	val
    46                           	(gettword(val,0))
    47                           endm
    48  0000                     tword1	macro	val
    49                           	(gettword(val,3))
    50                           endm
    51  0000                     tword2	macro	val
    52                           	(gettword(val,6))
    53                           endm
    54  0000                     getdword	macro	val,pos
    55                           	(((val) >> (8 * pos)) and 0xffffffff)
    56                           endm
    57  0000                     dword0	macro	val
    58                           	(getdword(val,0))
    59                           endm
    60  0000                     dword1	macro	val
    61                           	(getdword(val,4))
    62                           endm
    63  0000                     clrc	macro
    64                           	bcf	3,0
    65                           	endm
    66  0000                     clrz	macro
    67                           	bcf	3,2
    68                           	endm
    69  0000                     setc	macro
    70                           	bsf	3,0
    71                           	endm
    72  0000                     setz	macro
    73                           	bsf	3,2
    74                           	endm
    75  0000                     skipc	macro
    76                           	btfss	3,0
    77                           	endm
    78  0000                     skipz	macro
    79                           	btfss	3,2
    80                           	endm
    81  0000                     skipnc	macro
    82                           	btfsc	3,0
    83                           	endm
    84  0000                     skipnz	macro
    85                           	btfsc	3,2
    86                           	endm
    87  0000                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    88                           INDF equ 00h ;# 
    89  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    90                           TMR0 equ 01h ;# 
    91  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    92                           PCL equ 02h ;# 
    93  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    94                           STATUS equ 03h ;# 
    95  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    96                           FSR equ 04h ;# 
    97  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
    98                           PORTA equ 05h ;# 
    99  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   100                           PORTB equ 06h ;# 
   101  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   102                           PORTC equ 07h ;# 
   103  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   104                           PORTD equ 08h ;# 
   105  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   106                           PORTE equ 09h ;# 
   107  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   108                           PCLATH equ 0Ah ;# 
   109  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   110                           INTCON equ 0Bh ;# 
   111  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   112                           PIR1 equ 0Ch ;# 
   113  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   114                           PIR2 equ 0Dh ;# 
   115  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   116                           TMR1 equ 0Eh ;# 
   117  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   118                           TMR1L equ 0Eh ;# 
   119  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   120                           TMR1H equ 0Fh ;# 
   121  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   122                           T1CON equ 010h ;# 
   123  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   124                           TMR2 equ 011h ;# 
   125  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   126                           T2CON equ 012h ;# 
   127  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   128                           SSPBUF equ 013h ;# 
   129  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   130                           SSPCON equ 014h ;# 
   131  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   132                           CCPR1 equ 015h ;# 
   133  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   134                           CCPR1L equ 015h ;# 
   135  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   136                           CCPR1H equ 016h ;# 
   137  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   138                           CCP1CON equ 017h ;# 
   139  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   140                           RCSTA equ 018h ;# 
   141  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   142                           TXREG equ 019h ;# 
   143  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   144                           RCREG equ 01Ah ;# 
   145  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   146                           CCPR2 equ 01Bh ;# 
   147  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   148                           CCPR2L equ 01Bh ;# 
   149  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   150                           CCPR2H equ 01Ch ;# 
   151  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   152                           CCP2CON equ 01Dh ;# 
   153  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   154                           ADRESH equ 01Eh ;# 
   155  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   156                           ADCON0 equ 01Fh ;# 
   157  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   158                           OPTION_REG equ 081h ;# 
   159  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   160                           TRISA equ 085h ;# 
   161  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   162                           TRISB equ 086h ;# 
   163  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   164                           TRISC equ 087h ;# 
   165  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   166                           TRISD equ 088h ;# 
   167  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   168                           TRISE equ 089h ;# 
   169  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   170                           PIE1 equ 08Ch ;# 
   171  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   172                           PIE2 equ 08Dh ;# 
   173  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   174                           PCON equ 08Eh ;# 
   175  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   176                           OSCCON equ 08Fh ;# 
   177  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   178                           OSCTUNE equ 090h ;# 
   179  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   180                           SSPCON2 equ 091h ;# 
   181  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   182                           PR2 equ 092h ;# 
   183  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   184                           SSPADD equ 093h ;# 
   185  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   186                           SSPMSK equ 093h ;# 
   187  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   188                           MSK equ 093h ;# 
   189  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   190                           SSPSTAT equ 094h ;# 
   191  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   192                           WPUB equ 095h ;# 
   193  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   194                           IOCB equ 096h ;# 
   195  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   196                           VRCON equ 097h ;# 
   197  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   198                           TXSTA equ 098h ;# 
   199  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   200                           SPBRG equ 099h ;# 
   201  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   202                           SPBRGH equ 09Ah ;# 
   203  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   204                           PWM1CON equ 09Bh ;# 
   205  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   206                           ECCPAS equ 09Ch ;# 
   207  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   208                           PSTRCON equ 09Dh ;# 
   209  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   210                           ADRESL equ 09Eh ;# 
   211  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   212                           ADCON1 equ 09Fh ;# 
   213  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   214                           WDTCON equ 0105h ;# 
   215  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   216                           CM1CON0 equ 0107h ;# 
   217  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   218                           CM2CON0 equ 0108h ;# 
   219  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   220                           CM2CON1 equ 0109h ;# 
   221  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   222                           EEDATA equ 010Ch ;# 
   223  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   224                           EEDAT equ 010Ch ;# 
   225  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   226                           EEADR equ 010Dh ;# 
   227  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   228                           EEDATH equ 010Eh ;# 
   229  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   230                           EEADRH equ 010Fh ;# 
   231  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   232                           SRCON equ 0185h ;# 
   233  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   234                           BAUDCTL equ 0187h ;# 
   235  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   236                           ANSEL equ 0188h ;# 
   237  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   238                           ANSELH equ 0189h ;# 
   239  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   240                           EECON1 equ 018Ch ;# 
   241  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   242                           EECON2 equ 018Dh ;# 
   243  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   244                           INDF equ 00h ;# 
   245  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   246                           TMR0 equ 01h ;# 
   247  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   248                           PCL equ 02h ;# 
   249  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   250                           STATUS equ 03h ;# 
   251  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   252                           FSR equ 04h ;# 
   253  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   254                           PORTA equ 05h ;# 
   255  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   256                           PORTB equ 06h ;# 
   257  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   258                           PORTC equ 07h ;# 
   259  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   260                           PORTD equ 08h ;# 
   261  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   262                           PORTE equ 09h ;# 
   263  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   264                           PCLATH equ 0Ah ;# 
   265  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   266                           INTCON equ 0Bh ;# 
   267  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   268                           PIR1 equ 0Ch ;# 
   269  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   270                           PIR2 equ 0Dh ;# 
   271  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   272                           TMR1 equ 0Eh ;# 
   273  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   274                           TMR1L equ 0Eh ;# 
   275  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   276                           TMR1H equ 0Fh ;# 
   277  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   278                           T1CON equ 010h ;# 
   279  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   280                           TMR2 equ 011h ;# 
   281  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   282                           T2CON equ 012h ;# 
   283  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   284                           SSPBUF equ 013h ;# 
   285  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   286                           SSPCON equ 014h ;# 
   287  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   288                           CCPR1 equ 015h ;# 
   289  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   290                           CCPR1L equ 015h ;# 
   291  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   292                           CCPR1H equ 016h ;# 
   293  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   294                           CCP1CON equ 017h ;# 
   295  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   296                           RCSTA equ 018h ;# 
   297  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   298                           TXREG equ 019h ;# 
   299  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   300                           RCREG equ 01Ah ;# 
   301  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   302                           CCPR2 equ 01Bh ;# 
   303  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   304                           CCPR2L equ 01Bh ;# 
   305  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   306                           CCPR2H equ 01Ch ;# 
   307  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   308                           CCP2CON equ 01Dh ;# 
   309  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   310                           ADRESH equ 01Eh ;# 
   311  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   312                           ADCON0 equ 01Fh ;# 
   313  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   314                           OPTION_REG equ 081h ;# 
   315  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   316                           TRISA equ 085h ;# 
   317  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   318                           TRISB equ 086h ;# 
   319  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   320                           TRISC equ 087h ;# 
   321  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   322                           TRISD equ 088h ;# 
   323  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   324                           TRISE equ 089h ;# 
   325  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   326                           PIE1 equ 08Ch ;# 
   327  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   328                           PIE2 equ 08Dh ;# 
   329  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   330                           PCON equ 08Eh ;# 
   331  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   332                           OSCCON equ 08Fh ;# 
   333  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   334                           OSCTUNE equ 090h ;# 
   335  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   336                           SSPCON2 equ 091h ;# 
   337  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   338                           PR2 equ 092h ;# 
   339  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   340                           SSPADD equ 093h ;# 
   341  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   342                           SSPMSK equ 093h ;# 
   343  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   344                           MSK equ 093h ;# 
   345  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   346                           SSPSTAT equ 094h ;# 
   347  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   348                           WPUB equ 095h ;# 
   349  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   350                           IOCB equ 096h ;# 
   351  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   352                           VRCON equ 097h ;# 
   353  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   354                           TXSTA equ 098h ;# 
   355  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   356                           SPBRG equ 099h ;# 
   357  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   358                           SPBRGH equ 09Ah ;# 
   359  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   360                           PWM1CON equ 09Bh ;# 
   361  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   362                           ECCPAS equ 09Ch ;# 
   363  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   364                           PSTRCON equ 09Dh ;# 
   365  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   366                           ADRESL equ 09Eh ;# 
   367  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   368                           ADCON1 equ 09Fh ;# 
   369  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   370                           WDTCON equ 0105h ;# 
   371  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   372                           CM1CON0 equ 0107h ;# 
   373  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   374                           CM2CON0 equ 0108h ;# 
   375  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   376                           CM2CON1 equ 0109h ;# 
   377  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   378                           EEDATA equ 010Ch ;# 
   379  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   380                           EEDAT equ 010Ch ;# 
   381  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   382                           EEADR equ 010Dh ;# 
   383  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   384                           EEDATH equ 010Eh ;# 
   385  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   386                           EEADRH equ 010Fh ;# 
   387  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   388                           SRCON equ 0185h ;# 
   389  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   390                           BAUDCTL equ 0187h ;# 
   391  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   392                           ANSEL equ 0188h ;# 
   393  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   394                           ANSELH equ 0189h ;# 
   395  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   396                           EECON1 equ 018Ch ;# 
   397  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   398                           EECON2 equ 018Dh ;# 
   399  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   400                           INDF equ 00h ;# 
   401  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   402                           TMR0 equ 01h ;# 
   403  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   404                           PCL equ 02h ;# 
   405  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   406                           STATUS equ 03h ;# 
   407  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   408                           FSR equ 04h ;# 
   409  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   410                           PORTA equ 05h ;# 
   411  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   412                           PORTB equ 06h ;# 
   413  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   414                           PORTC equ 07h ;# 
   415  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   416                           PORTD equ 08h ;# 
   417  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   418                           PORTE equ 09h ;# 
   419  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   420                           PCLATH equ 0Ah ;# 
   421  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   422                           INTCON equ 0Bh ;# 
   423  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   424                           PIR1 equ 0Ch ;# 
   425  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   426                           PIR2 equ 0Dh ;# 
   427  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   428                           TMR1 equ 0Eh ;# 
   429  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   430                           TMR1L equ 0Eh ;# 
   431  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   432                           TMR1H equ 0Fh ;# 
   433  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   434                           T1CON equ 010h ;# 
   435  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   436                           TMR2 equ 011h ;# 
   437  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   438                           T2CON equ 012h ;# 
   439  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   440                           SSPBUF equ 013h ;# 
   441  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   442                           SSPCON equ 014h ;# 
   443  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   444                           CCPR1 equ 015h ;# 
   445  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   446                           CCPR1L equ 015h ;# 
   447  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   448                           CCPR1H equ 016h ;# 
   449  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   450                           CCP1CON equ 017h ;# 
   451  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   452                           RCSTA equ 018h ;# 
   453  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   454                           TXREG equ 019h ;# 
   455  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   456                           RCREG equ 01Ah ;# 
   457  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   458                           CCPR2 equ 01Bh ;# 
   459  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   460                           CCPR2L equ 01Bh ;# 
   461  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   462                           CCPR2H equ 01Ch ;# 
   463  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   464                           CCP2CON equ 01Dh ;# 
   465  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   466                           ADRESH equ 01Eh ;# 
   467  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   468                           ADCON0 equ 01Fh ;# 
   469  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   470                           OPTION_REG equ 081h ;# 
   471  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   472                           TRISA equ 085h ;# 
   473  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   474                           TRISB equ 086h ;# 
   475  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   476                           TRISC equ 087h ;# 
   477  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   478                           TRISD equ 088h ;# 
   479  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   480                           TRISE equ 089h ;# 
   481  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   482                           PIE1 equ 08Ch ;# 
   483  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   484                           PIE2 equ 08Dh ;# 
   485  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   486                           PCON equ 08Eh ;# 
   487  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   488                           OSCCON equ 08Fh ;# 
   489  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   490                           OSCTUNE equ 090h ;# 
   491  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   492                           SSPCON2 equ 091h ;# 
   493  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   494                           PR2 equ 092h ;# 
   495  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   496                           SSPADD equ 093h ;# 
   497  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   498                           SSPMSK equ 093h ;# 
   499  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   500                           MSK equ 093h ;# 
   501  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   502                           SSPSTAT equ 094h ;# 
   503  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   504                           WPUB equ 095h ;# 
   505  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   506                           IOCB equ 096h ;# 
   507  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   508                           VRCON equ 097h ;# 
   509  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   510                           TXSTA equ 098h ;# 
   511  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   512                           SPBRG equ 099h ;# 
   513  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   514                           SPBRGH equ 09Ah ;# 
   515  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   516                           PWM1CON equ 09Bh ;# 
   517  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   518                           ECCPAS equ 09Ch ;# 
   519  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   520                           PSTRCON equ 09Dh ;# 
   521  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   522                           ADRESL equ 09Eh ;# 
   523  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   524                           ADCON1 equ 09Fh ;# 
   525  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   526                           WDTCON equ 0105h ;# 
   527  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   528                           CM1CON0 equ 0107h ;# 
   529  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   530                           CM2CON0 equ 0108h ;# 
   531  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   532                           CM2CON1 equ 0109h ;# 
   533  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   534                           EEDATA equ 010Ch ;# 
   535  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   536                           EEDAT equ 010Ch ;# 
   537  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   538                           EEADR equ 010Dh ;# 
   539  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   540                           EEDATH equ 010Eh ;# 
   541  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   542                           EEADRH equ 010Fh ;# 
   543  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   544                           SRCON equ 0185h ;# 
   545  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   546                           BAUDCTL equ 0187h ;# 
   547  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   548                           ANSEL equ 0188h ;# 
   549  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   550                           ANSELH equ 0189h ;# 
   551  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   552                           EECON1 equ 018Ch ;# 
   553  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   554                           EECON2 equ 018Dh ;# 
   555  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   556                           INDF equ 00h ;# 
   557  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   558                           TMR0 equ 01h ;# 
   559  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   560                           PCL equ 02h ;# 
   561  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   562                           STATUS equ 03h ;# 
   563  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   564                           FSR equ 04h ;# 
   565  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   566                           PORTA equ 05h ;# 
   567  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   568                           PORTB equ 06h ;# 
   569  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   570                           PORTC equ 07h ;# 
   571  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   572                           PORTD equ 08h ;# 
   573  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   574                           PORTE equ 09h ;# 
   575  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   576                           PCLATH equ 0Ah ;# 
   577  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   578                           INTCON equ 0Bh ;# 
   579  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   580                           PIR1 equ 0Ch ;# 
   581  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   582                           PIR2 equ 0Dh ;# 
   583  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   584                           TMR1 equ 0Eh ;# 
   585  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   586                           TMR1L equ 0Eh ;# 
   587  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   588                           TMR1H equ 0Fh ;# 
   589  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   590                           T1CON equ 010h ;# 
   591  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   592                           TMR2 equ 011h ;# 
   593  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   594                           T2CON equ 012h ;# 
   595  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   596                           SSPBUF equ 013h ;# 
   597  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   598                           SSPCON equ 014h ;# 
   599  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   600                           CCPR1 equ 015h ;# 
   601  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   602                           CCPR1L equ 015h ;# 
   603  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   604                           CCPR1H equ 016h ;# 
   605  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   606                           CCP1CON equ 017h ;# 
   607  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   608                           RCSTA equ 018h ;# 
   609  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   610                           TXREG equ 019h ;# 
   611  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   612                           RCREG equ 01Ah ;# 
   613  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   614                           CCPR2 equ 01Bh ;# 
   615  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   616                           CCPR2L equ 01Bh ;# 
   617  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   618                           CCPR2H equ 01Ch ;# 
   619  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   620                           CCP2CON equ 01Dh ;# 
   621  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   622                           ADRESH equ 01Eh ;# 
   623  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   624                           ADCON0 equ 01Fh ;# 
   625  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   626                           OPTION_REG equ 081h ;# 
   627  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   628                           TRISA equ 085h ;# 
   629  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   630                           TRISB equ 086h ;# 
   631  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   632                           TRISC equ 087h ;# 
   633  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   634                           TRISD equ 088h ;# 
   635  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   636                           TRISE equ 089h ;# 
   637  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   638                           PIE1 equ 08Ch ;# 
   639  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   640                           PIE2 equ 08Dh ;# 
   641  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   642                           PCON equ 08Eh ;# 
   643  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   644                           OSCCON equ 08Fh ;# 
   645  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   646                           OSCTUNE equ 090h ;# 
   647  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   648                           SSPCON2 equ 091h ;# 
   649  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   650                           PR2 equ 092h ;# 
   651  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   652                           SSPADD equ 093h ;# 
   653  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   654                           SSPMSK equ 093h ;# 
   655  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   656                           MSK equ 093h ;# 
   657  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   658                           SSPSTAT equ 094h ;# 
   659  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   660                           WPUB equ 095h ;# 
   661  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   662                           IOCB equ 096h ;# 
   663  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   664                           VRCON equ 097h ;# 
   665  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   666                           TXSTA equ 098h ;# 
   667  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   668                           SPBRG equ 099h ;# 
   669  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   670                           SPBRGH equ 09Ah ;# 
   671  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   672                           PWM1CON equ 09Bh ;# 
   673  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   674                           ECCPAS equ 09Ch ;# 
   675  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   676                           PSTRCON equ 09Dh ;# 
   677  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   678                           ADRESL equ 09Eh ;# 
   679  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   680                           ADCON1 equ 09Fh ;# 
   681  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   682                           WDTCON equ 0105h ;# 
   683  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   684                           CM1CON0 equ 0107h ;# 
   685  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   686                           CM2CON0 equ 0108h ;# 
   687  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   688                           CM2CON1 equ 0109h ;# 
   689  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   690                           EEDATA equ 010Ch ;# 
   691  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   692                           EEDAT equ 010Ch ;# 
   693  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   694                           EEADR equ 010Dh ;# 
   695  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   696                           EEDATH equ 010Eh ;# 
   697  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   698                           EEADRH equ 010Fh ;# 
   699  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   700                           SRCON equ 0185h ;# 
   701  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   702                           BAUDCTL equ 0187h ;# 
   703  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   704                           ANSEL equ 0188h ;# 
   705  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   706                           ANSELH equ 0189h ;# 
   707  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   708                           EECON1 equ 018Ch ;# 
   709  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   710                           EECON2 equ 018Dh ;# 
   711  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   712                           INDF equ 00h ;# 
   713  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   714                           TMR0 equ 01h ;# 
   715  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   716                           PCL equ 02h ;# 
   717  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   718                           STATUS equ 03h ;# 
   719  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   720                           FSR equ 04h ;# 
   721  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   722                           PORTA equ 05h ;# 
   723  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   724                           PORTB equ 06h ;# 
   725  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   726                           PORTC equ 07h ;# 
   727  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   728                           PORTD equ 08h ;# 
   729  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   730                           PORTE equ 09h ;# 
   731  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   732                           PCLATH equ 0Ah ;# 
   733  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   734                           INTCON equ 0Bh ;# 
   735  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   736                           PIR1 equ 0Ch ;# 
   737  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   738                           PIR2 equ 0Dh ;# 
   739  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   740                           TMR1 equ 0Eh ;# 
   741  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   742                           TMR1L equ 0Eh ;# 
   743  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   744                           TMR1H equ 0Fh ;# 
   745  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   746                           T1CON equ 010h ;# 
   747  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   748                           TMR2 equ 011h ;# 
   749  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   750                           T2CON equ 012h ;# 
   751  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   752                           SSPBUF equ 013h ;# 
   753  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   754                           SSPCON equ 014h ;# 
   755  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   756                           CCPR1 equ 015h ;# 
   757  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   758                           CCPR1L equ 015h ;# 
   759  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   760                           CCPR1H equ 016h ;# 
   761  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   762                           CCP1CON equ 017h ;# 
   763  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   764                           RCSTA equ 018h ;# 
   765  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   766                           TXREG equ 019h ;# 
   767  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   768                           RCREG equ 01Ah ;# 
   769  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   770                           CCPR2 equ 01Bh ;# 
   771  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   772                           CCPR2L equ 01Bh ;# 
   773  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   774                           CCPR2H equ 01Ch ;# 
   775  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   776                           CCP2CON equ 01Dh ;# 
   777  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   778                           ADRESH equ 01Eh ;# 
   779  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   780                           ADCON0 equ 01Fh ;# 
   781  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   782                           OPTION_REG equ 081h ;# 
   783  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   784                           TRISA equ 085h ;# 
   785  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   786                           TRISB equ 086h ;# 
   787  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   788                           TRISC equ 087h ;# 
   789  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   790                           TRISD equ 088h ;# 
   791  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   792                           TRISE equ 089h ;# 
   793  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   794                           PIE1 equ 08Ch ;# 
   795  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   796                           PIE2 equ 08Dh ;# 
   797  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   798                           PCON equ 08Eh ;# 
   799  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   800                           OSCCON equ 08Fh ;# 
   801  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   802                           OSCTUNE equ 090h ;# 
   803  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   804                           SSPCON2 equ 091h ;# 
   805  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   806                           PR2 equ 092h ;# 
   807  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   808                           SSPADD equ 093h ;# 
   809  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   810                           SSPMSK equ 093h ;# 
   811  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   812                           MSK equ 093h ;# 
   813  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   814                           SSPSTAT equ 094h ;# 
   815  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   816                           WPUB equ 095h ;# 
   817  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   818                           IOCB equ 096h ;# 
   819  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   820                           VRCON equ 097h ;# 
   821  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   822                           TXSTA equ 098h ;# 
   823  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   824                           SPBRG equ 099h ;# 
   825  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   826                           SPBRGH equ 09Ah ;# 
   827  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   828                           PWM1CON equ 09Bh ;# 
   829  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   830                           ECCPAS equ 09Ch ;# 
   831  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   832                           PSTRCON equ 09Dh ;# 
   833  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   834                           ADRESL equ 09Eh ;# 
   835  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   836                           ADCON1 equ 09Fh ;# 
   837  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   838                           WDTCON equ 0105h ;# 
   839  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   840                           CM1CON0 equ 0107h ;# 
   841  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   842                           CM2CON0 equ 0108h ;# 
   843  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   844                           CM2CON1 equ 0109h ;# 
   845  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   846                           EEDATA equ 010Ch ;# 
   847  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   848                           EEDAT equ 010Ch ;# 
   849  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   850                           EEADR equ 010Dh ;# 
   851  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   852                           EEDATH equ 010Eh ;# 
   853  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   854                           EEADRH equ 010Fh ;# 
   855  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   856                           SRCON equ 0185h ;# 
   857  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   858                           BAUDCTL equ 0187h ;# 
   859  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   860                           ANSEL equ 0188h ;# 
   861  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   862                           ANSELH equ 0189h ;# 
   863  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   864                           EECON1 equ 018Ch ;# 
   865  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   866                           EECON2 equ 018Dh ;# 
   867  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   868                           INDF equ 00h ;# 
   869  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   870                           TMR0 equ 01h ;# 
   871  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   872                           PCL equ 02h ;# 
   873  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   874                           STATUS equ 03h ;# 
   875  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   876                           FSR equ 04h ;# 
   877  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   878                           PORTA equ 05h ;# 
   879  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   880                           PORTB equ 06h ;# 
   881  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   882                           PORTC equ 07h ;# 
   883  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   884                           PORTD equ 08h ;# 
   885  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   886                           PORTE equ 09h ;# 
   887  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   888                           PCLATH equ 0Ah ;# 
   889  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   890                           INTCON equ 0Bh ;# 
   891  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   892                           PIR1 equ 0Ch ;# 
   893  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   894                           PIR2 equ 0Dh ;# 
   895  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   896                           TMR1 equ 0Eh ;# 
   897  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   898                           TMR1L equ 0Eh ;# 
   899  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   900                           TMR1H equ 0Fh ;# 
   901  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   902                           T1CON equ 010h ;# 
   903  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   904                           TMR2 equ 011h ;# 
   905  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   906                           T2CON equ 012h ;# 
   907  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   908                           SSPBUF equ 013h ;# 
   909  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   910                           SSPCON equ 014h ;# 
   911  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   912                           CCPR1 equ 015h ;# 
   913  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   914                           CCPR1L equ 015h ;# 
   915  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   916                           CCPR1H equ 016h ;# 
   917  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   918                           CCP1CON equ 017h ;# 
   919  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   920                           RCSTA equ 018h ;# 
   921  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   922                           TXREG equ 019h ;# 
   923  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   924                           RCREG equ 01Ah ;# 
   925  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   926                           CCPR2 equ 01Bh ;# 
   927  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   928                           CCPR2L equ 01Bh ;# 
   929  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   930                           CCPR2H equ 01Ch ;# 
   931  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   932                           CCP2CON equ 01Dh ;# 
   933  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   934                           ADRESH equ 01Eh ;# 
   935  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   936                           ADCON0 equ 01Fh ;# 
   937  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   938                           OPTION_REG equ 081h ;# 
   939  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   940                           TRISA equ 085h ;# 
   941  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   942                           TRISB equ 086h ;# 
   943  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   944                           TRISC equ 087h ;# 
   945  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   946                           TRISD equ 088h ;# 
   947  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   948                           TRISE equ 089h ;# 
   949  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   950                           PIE1 equ 08Ch ;# 
   951  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   952                           PIE2 equ 08Dh ;# 
   953  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   954                           PCON equ 08Eh ;# 
   955  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   956                           OSCCON equ 08Fh ;# 
   957  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   958                           OSCTUNE equ 090h ;# 
   959  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   960                           SSPCON2 equ 091h ;# 
   961  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   962                           PR2 equ 092h ;# 
   963  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   964                           SSPADD equ 093h ;# 
   965  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   966                           SSPMSK equ 093h ;# 
   967  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   968                           MSK equ 093h ;# 
   969  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   970                           SSPSTAT equ 094h ;# 
   971  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   972                           WPUB equ 095h ;# 
   973  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   974                           IOCB equ 096h ;# 
   975  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   976                           VRCON equ 097h ;# 
   977  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   978                           TXSTA equ 098h ;# 
   979  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   980                           SPBRG equ 099h ;# 
   981  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   982                           SPBRGH equ 09Ah ;# 
   983  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   984                           PWM1CON equ 09Bh ;# 
   985  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   986                           ECCPAS equ 09Ch ;# 
   987  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   988                           PSTRCON equ 09Dh ;# 
   989  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   990                           ADRESL equ 09Eh ;# 
   991  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   992                           ADCON1 equ 09Fh ;# 
   993  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   994                           WDTCON equ 0105h ;# 
   995  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   996                           CM1CON0 equ 0107h ;# 
   997  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
   998                           CM2CON0 equ 0108h ;# 
   999  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1000                           CM2CON1 equ 0109h ;# 
  1001  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1002                           EEDATA equ 010Ch ;# 
  1003  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1004                           EEDAT equ 010Ch ;# 
  1005  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1006                           EEADR equ 010Dh ;# 
  1007  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1008                           EEDATH equ 010Eh ;# 
  1009  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1010                           EEADRH equ 010Fh ;# 
  1011  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1012                           SRCON equ 0185h ;# 
  1013  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1014                           BAUDCTL equ 0187h ;# 
  1015  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1016                           ANSEL equ 0188h ;# 
  1017  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1018                           ANSELH equ 0189h ;# 
  1019  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1020                           EECON1 equ 018Ch ;# 
  1021  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1022                           EECON2 equ 018Dh ;# 
  1023  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1024                           INDF equ 00h ;# 
  1025  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1026                           TMR0 equ 01h ;# 
  1027  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1028                           PCL equ 02h ;# 
  1029  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1030                           STATUS equ 03h ;# 
  1031  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1032                           FSR equ 04h ;# 
  1033  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1034                           PORTA equ 05h ;# 
  1035  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1036                           PORTB equ 06h ;# 
  1037  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1038                           PORTC equ 07h ;# 
  1039  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1040                           PORTD equ 08h ;# 
  1041  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1042                           PORTE equ 09h ;# 
  1043  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1044                           PCLATH equ 0Ah ;# 
  1045  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1046                           INTCON equ 0Bh ;# 
  1047  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1048                           PIR1 equ 0Ch ;# 
  1049  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1050                           PIR2 equ 0Dh ;# 
  1051  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1052                           TMR1 equ 0Eh ;# 
  1053  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1054                           TMR1L equ 0Eh ;# 
  1055  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1056                           TMR1H equ 0Fh ;# 
  1057  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1058                           T1CON equ 010h ;# 
  1059  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1060                           TMR2 equ 011h ;# 
  1061  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1062                           T2CON equ 012h ;# 
  1063  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1064                           SSPBUF equ 013h ;# 
  1065  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1066                           SSPCON equ 014h ;# 
  1067  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1068                           CCPR1 equ 015h ;# 
  1069  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1070                           CCPR1L equ 015h ;# 
  1071  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1072                           CCPR1H equ 016h ;# 
  1073  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1074                           CCP1CON equ 017h ;# 
  1075  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1076                           RCSTA equ 018h ;# 
  1077  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1078                           TXREG equ 019h ;# 
  1079  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1080                           RCREG equ 01Ah ;# 
  1081  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1082                           CCPR2 equ 01Bh ;# 
  1083  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1084                           CCPR2L equ 01Bh ;# 
  1085  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1086                           CCPR2H equ 01Ch ;# 
  1087  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1088                           CCP2CON equ 01Dh ;# 
  1089  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1090                           ADRESH equ 01Eh ;# 
  1091  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1092                           ADCON0 equ 01Fh ;# 
  1093  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1094                           OPTION_REG equ 081h ;# 
  1095  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1096                           TRISA equ 085h ;# 
  1097  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1098                           TRISB equ 086h ;# 
  1099  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1100                           TRISC equ 087h ;# 
  1101  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1102                           TRISD equ 088h ;# 
  1103  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1104                           TRISE equ 089h ;# 
  1105  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1106                           PIE1 equ 08Ch ;# 
  1107  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1108                           PIE2 equ 08Dh ;# 
  1109  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1110                           PCON equ 08Eh ;# 
  1111  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1112                           OSCCON equ 08Fh ;# 
  1113  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1114                           OSCTUNE equ 090h ;# 
  1115  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1116                           SSPCON2 equ 091h ;# 
  1117  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1118                           PR2 equ 092h ;# 
  1119  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1120                           SSPADD equ 093h ;# 
  1121  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1122                           SSPMSK equ 093h ;# 
  1123  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1124                           MSK equ 093h ;# 
  1125  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1126                           SSPSTAT equ 094h ;# 
  1127  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1128                           WPUB equ 095h ;# 
  1129  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1130                           IOCB equ 096h ;# 
  1131  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1132                           VRCON equ 097h ;# 
  1133  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1134                           TXSTA equ 098h ;# 
  1135  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1136                           SPBRG equ 099h ;# 
  1137  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1138                           SPBRGH equ 09Ah ;# 
  1139  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1140                           PWM1CON equ 09Bh ;# 
  1141  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1142                           ECCPAS equ 09Ch ;# 
  1143  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1144                           PSTRCON equ 09Dh ;# 
  1145  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1146                           ADRESL equ 09Eh ;# 
  1147  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1148                           ADCON1 equ 09Fh ;# 
  1149  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1150                           WDTCON equ 0105h ;# 
  1151  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1152                           CM1CON0 equ 0107h ;# 
  1153  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1154                           CM2CON0 equ 0108h ;# 
  1155  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1156                           CM2CON1 equ 0109h ;# 
  1157  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1158                           EEDATA equ 010Ch ;# 
  1159  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1160                           EEDAT equ 010Ch ;# 
  1161  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1162                           EEADR equ 010Dh ;# 
  1163  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1164                           EEDATH equ 010Eh ;# 
  1165  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1166                           EEADRH equ 010Fh ;# 
  1167  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1168                           SRCON equ 0185h ;# 
  1169  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1170                           BAUDCTL equ 0187h ;# 
  1171  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1172                           ANSEL equ 0188h ;# 
  1173  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1174                           ANSELH equ 0189h ;# 
  1175  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1176                           EECON1 equ 018Ch ;# 
  1177  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1178                           EECON2 equ 018Dh ;# 
  1179  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1180                           INDF equ 00h ;# 
  1181  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1182                           TMR0 equ 01h ;# 
  1183  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1184                           PCL equ 02h ;# 
  1185  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1186                           STATUS equ 03h ;# 
  1187  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1188                           FSR equ 04h ;# 
  1189  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1190                           PORTA equ 05h ;# 
  1191  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1192                           PORTB equ 06h ;# 
  1193  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1194                           PORTC equ 07h ;# 
  1195  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1196                           PORTD equ 08h ;# 
  1197  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1198                           PORTE equ 09h ;# 
  1199  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1200                           PCLATH equ 0Ah ;# 
  1201  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1202                           INTCON equ 0Bh ;# 
  1203  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1204                           PIR1 equ 0Ch ;# 
  1205  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1206                           PIR2 equ 0Dh ;# 
  1207  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1208                           TMR1 equ 0Eh ;# 
  1209  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1210                           TMR1L equ 0Eh ;# 
  1211  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1212                           TMR1H equ 0Fh ;# 
  1213  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1214                           T1CON equ 010h ;# 
  1215  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1216                           TMR2 equ 011h ;# 
  1217  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1218                           T2CON equ 012h ;# 
  1219  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1220                           SSPBUF equ 013h ;# 
  1221  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1222                           SSPCON equ 014h ;# 
  1223  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1224                           CCPR1 equ 015h ;# 
  1225  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1226                           CCPR1L equ 015h ;# 
  1227  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1228                           CCPR1H equ 016h ;# 
  1229  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1230                           CCP1CON equ 017h ;# 
  1231  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1232                           RCSTA equ 018h ;# 
  1233  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1234                           TXREG equ 019h ;# 
  1235  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1236                           RCREG equ 01Ah ;# 
  1237  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1238                           CCPR2 equ 01Bh ;# 
  1239  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1240                           CCPR2L equ 01Bh ;# 
  1241  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1242                           CCPR2H equ 01Ch ;# 
  1243  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1244                           CCP2CON equ 01Dh ;# 
  1245  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1246                           ADRESH equ 01Eh ;# 
  1247  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1248                           ADCON0 equ 01Fh ;# 
  1249  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1250                           OPTION_REG equ 081h ;# 
  1251  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1252                           TRISA equ 085h ;# 
  1253  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1254                           TRISB equ 086h ;# 
  1255  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1256                           TRISC equ 087h ;# 
  1257  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1258                           TRISD equ 088h ;# 
  1259  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1260                           TRISE equ 089h ;# 
  1261  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1262                           PIE1 equ 08Ch ;# 
  1263  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1264                           PIE2 equ 08Dh ;# 
  1265  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1266                           PCON equ 08Eh ;# 
  1267  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1268                           OSCCON equ 08Fh ;# 
  1269  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1270                           OSCTUNE equ 090h ;# 
  1271  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1272                           SSPCON2 equ 091h ;# 
  1273  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1274                           PR2 equ 092h ;# 
  1275  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1276                           SSPADD equ 093h ;# 
  1277  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1278                           SSPMSK equ 093h ;# 
  1279  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1280                           MSK equ 093h ;# 
  1281  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1282                           SSPSTAT equ 094h ;# 
  1283  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1284                           WPUB equ 095h ;# 
  1285  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1286                           IOCB equ 096h ;# 
  1287  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1288                           VRCON equ 097h ;# 
  1289  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1290                           TXSTA equ 098h ;# 
  1291  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1292                           SPBRG equ 099h ;# 
  1293  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1294                           SPBRGH equ 09Ah ;# 
  1295  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1296                           PWM1CON equ 09Bh ;# 
  1297  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1298                           ECCPAS equ 09Ch ;# 
  1299  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1300                           PSTRCON equ 09Dh ;# 
  1301  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1302                           ADRESL equ 09Eh ;# 
  1303  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1304                           ADCON1 equ 09Fh ;# 
  1305  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1306                           WDTCON equ 0105h ;# 
  1307  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1308                           CM1CON0 equ 0107h ;# 
  1309  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1310                           CM2CON0 equ 0108h ;# 
  1311  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1312                           CM2CON1 equ 0109h ;# 
  1313  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1314                           EEDATA equ 010Ch ;# 
  1315  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1316                           EEDAT equ 010Ch ;# 
  1317  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1318                           EEADR equ 010Dh ;# 
  1319  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1320                           EEDATH equ 010Eh ;# 
  1321  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1322                           EEADRH equ 010Fh ;# 
  1323  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1324                           SRCON equ 0185h ;# 
  1325  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1326                           BAUDCTL equ 0187h ;# 
  1327  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1328                           ANSEL equ 0188h ;# 
  1329  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1330                           ANSELH equ 0189h ;# 
  1331  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1332                           EECON1 equ 018Ch ;# 
  1333  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1334                           EECON2 equ 018Dh ;# 
  1335  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1336                           INDF equ 00h ;# 
  1337  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1338                           TMR0 equ 01h ;# 
  1339  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1340                           PCL equ 02h ;# 
  1341  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1342                           STATUS equ 03h ;# 
  1343  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1344                           FSR equ 04h ;# 
  1345  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1346                           PORTA equ 05h ;# 
  1347  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1348                           PORTB equ 06h ;# 
  1349  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1350                           PORTC equ 07h ;# 
  1351  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1352                           PORTD equ 08h ;# 
  1353  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1354                           PORTE equ 09h ;# 
  1355  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1356                           PCLATH equ 0Ah ;# 
  1357  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1358                           INTCON equ 0Bh ;# 
  1359  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1360                           PIR1 equ 0Ch ;# 
  1361  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1362                           PIR2 equ 0Dh ;# 
  1363  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1364                           TMR1 equ 0Eh ;# 
  1365  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1366                           TMR1L equ 0Eh ;# 
  1367  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1368                           TMR1H equ 0Fh ;# 
  1369  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1370                           T1CON equ 010h ;# 
  1371  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1372                           TMR2 equ 011h ;# 
  1373  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1374                           T2CON equ 012h ;# 
  1375  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1376                           SSPBUF equ 013h ;# 
  1377  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1378                           SSPCON equ 014h ;# 
  1379  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1380                           CCPR1 equ 015h ;# 
  1381  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1382                           CCPR1L equ 015h ;# 
  1383  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1384                           CCPR1H equ 016h ;# 
  1385  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1386                           CCP1CON equ 017h ;# 
  1387  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1388                           RCSTA equ 018h ;# 
  1389  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1390                           TXREG equ 019h ;# 
  1391  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1392                           RCREG equ 01Ah ;# 
  1393  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1394                           CCPR2 equ 01Bh ;# 
  1395  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1396                           CCPR2L equ 01Bh ;# 
  1397  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1398                           CCPR2H equ 01Ch ;# 
  1399  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1400                           CCP2CON equ 01Dh ;# 
  1401  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1402                           ADRESH equ 01Eh ;# 
  1403  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1404                           ADCON0 equ 01Fh ;# 
  1405  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1406                           OPTION_REG equ 081h ;# 
  1407  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1408                           TRISA equ 085h ;# 
  1409  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1410                           TRISB equ 086h ;# 
  1411  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1412                           TRISC equ 087h ;# 
  1413  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1414                           TRISD equ 088h ;# 
  1415  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1416                           TRISE equ 089h ;# 
  1417  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1418                           PIE1 equ 08Ch ;# 
  1419  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1420                           PIE2 equ 08Dh ;# 
  1421  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1422                           PCON equ 08Eh ;# 
  1423  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1424                           OSCCON equ 08Fh ;# 
  1425  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1426                           OSCTUNE equ 090h ;# 
  1427  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1428                           SSPCON2 equ 091h ;# 
  1429  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1430                           PR2 equ 092h ;# 
  1431  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1432                           SSPADD equ 093h ;# 
  1433  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1434                           SSPMSK equ 093h ;# 
  1435  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1436                           MSK equ 093h ;# 
  1437  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1438                           SSPSTAT equ 094h ;# 
  1439  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1440                           WPUB equ 095h ;# 
  1441  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1442                           IOCB equ 096h ;# 
  1443  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1444                           VRCON equ 097h ;# 
  1445  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1446                           TXSTA equ 098h ;# 
  1447  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1448                           SPBRG equ 099h ;# 
  1449  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1450                           SPBRGH equ 09Ah ;# 
  1451  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1452                           PWM1CON equ 09Bh ;# 
  1453  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1454                           ECCPAS equ 09Ch ;# 
  1455  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1456                           PSTRCON equ 09Dh ;# 
  1457  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1458                           ADRESL equ 09Eh ;# 
  1459  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1460                           ADCON1 equ 09Fh ;# 
  1461  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1462                           WDTCON equ 0105h ;# 
  1463  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1464                           CM1CON0 equ 0107h ;# 
  1465  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1466                           CM2CON0 equ 0108h ;# 
  1467  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1468                           CM2CON1 equ 0109h ;# 
  1469  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1470                           EEDATA equ 010Ch ;# 
  1471  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1472                           EEDAT equ 010Ch ;# 
  1473  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1474                           EEADR equ 010Dh ;# 
  1475  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1476                           EEDATH equ 010Eh ;# 
  1477  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1478                           EEADRH equ 010Fh ;# 
  1479  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1480                           SRCON equ 0185h ;# 
  1481  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1482                           BAUDCTL equ 0187h ;# 
  1483  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1484                           ANSEL equ 0188h ;# 
  1485  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1486                           ANSELH equ 0189h ;# 
  1487  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1488                           EECON1 equ 018Ch ;# 
  1489  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1490                           EECON2 equ 018Dh ;# 
  1491  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1492                           INDF equ 00h ;# 
  1493  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1494                           TMR0 equ 01h ;# 
  1495  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1496                           PCL equ 02h ;# 
  1497  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1498                           STATUS equ 03h ;# 
  1499  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1500                           FSR equ 04h ;# 
  1501  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1502                           PORTA equ 05h ;# 
  1503  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1504                           PORTB equ 06h ;# 
  1505  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1506                           PORTC equ 07h ;# 
  1507  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1508                           PORTD equ 08h ;# 
  1509  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1510                           PORTE equ 09h ;# 
  1511  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1512                           PCLATH equ 0Ah ;# 
  1513  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1514                           INTCON equ 0Bh ;# 
  1515  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1516                           PIR1 equ 0Ch ;# 
  1517  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1518                           PIR2 equ 0Dh ;# 
  1519  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1520                           TMR1 equ 0Eh ;# 
  1521  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1522                           TMR1L equ 0Eh ;# 
  1523  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1524                           TMR1H equ 0Fh ;# 
  1525  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1526                           T1CON equ 010h ;# 
  1527  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1528                           TMR2 equ 011h ;# 
  1529  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1530                           T2CON equ 012h ;# 
  1531  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1532                           SSPBUF equ 013h ;# 
  1533  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1534                           SSPCON equ 014h ;# 
  1535  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1536                           CCPR1 equ 015h ;# 
  1537  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1538                           CCPR1L equ 015h ;# 
  1539  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1540                           CCPR1H equ 016h ;# 
  1541  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1542                           CCP1CON equ 017h ;# 
  1543  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1544                           RCSTA equ 018h ;# 
  1545  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1546                           TXREG equ 019h ;# 
  1547  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1548                           RCREG equ 01Ah ;# 
  1549  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1550                           CCPR2 equ 01Bh ;# 
  1551  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1552                           CCPR2L equ 01Bh ;# 
  1553  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1554                           CCPR2H equ 01Ch ;# 
  1555  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1556                           CCP2CON equ 01Dh ;# 
  1557  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1558                           ADRESH equ 01Eh ;# 
  1559  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1560                           ADCON0 equ 01Fh ;# 
  1561  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1562                           OPTION_REG equ 081h ;# 
  1563  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1564                           TRISA equ 085h ;# 
  1565  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1566                           TRISB equ 086h ;# 
  1567  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1568                           TRISC equ 087h ;# 
  1569  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1570                           TRISD equ 088h ;# 
  1571  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1572                           TRISE equ 089h ;# 
  1573  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1574                           PIE1 equ 08Ch ;# 
  1575  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1576                           PIE2 equ 08Dh ;# 
  1577  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1578                           PCON equ 08Eh ;# 
  1579  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1580                           OSCCON equ 08Fh ;# 
  1581  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1582                           OSCTUNE equ 090h ;# 
  1583  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1584                           SSPCON2 equ 091h ;# 
  1585  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1586                           PR2 equ 092h ;# 
  1587  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1588                           SSPADD equ 093h ;# 
  1589  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1590                           SSPMSK equ 093h ;# 
  1591  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1592                           MSK equ 093h ;# 
  1593  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1594                           SSPSTAT equ 094h ;# 
  1595  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1596                           WPUB equ 095h ;# 
  1597  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1598                           IOCB equ 096h ;# 
  1599  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1600                           VRCON equ 097h ;# 
  1601  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1602                           TXSTA equ 098h ;# 
  1603  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1604                           SPBRG equ 099h ;# 
  1605  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1606                           SPBRGH equ 09Ah ;# 
  1607  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1608                           PWM1CON equ 09Bh ;# 
  1609  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1610                           ECCPAS equ 09Ch ;# 
  1611  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1612                           PSTRCON equ 09Dh ;# 
  1613  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1614                           ADRESL equ 09Eh ;# 
  1615  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1616                           ADCON1 equ 09Fh ;# 
  1617  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1618                           WDTCON equ 0105h ;# 
  1619  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1620                           CM1CON0 equ 0107h ;# 
  1621  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1622                           CM2CON0 equ 0108h ;# 
  1623  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1624                           CM2CON1 equ 0109h ;# 
  1625  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1626                           EEDATA equ 010Ch ;# 
  1627  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1628                           EEDAT equ 010Ch ;# 
  1629  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1630                           EEADR equ 010Dh ;# 
  1631  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1632                           EEDATH equ 010Eh ;# 
  1633  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1634                           EEADRH equ 010Fh ;# 
  1635  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1636                           SRCON equ 0185h ;# 
  1637  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1638                           BAUDCTL equ 0187h ;# 
  1639  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1640                           ANSEL equ 0188h ;# 
  1641  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1642                           ANSELH equ 0189h ;# 
  1643  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1644                           EECON1 equ 018Ch ;# 
  1645  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1646                           EECON2 equ 018Dh ;# 
  1647  018D                     # 54 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1648                           INDF equ 00h ;# 
  1649  0000                     # 61 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1650                           TMR0 equ 01h ;# 
  1651  0001                     # 68 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1652                           PCL equ 02h ;# 
  1653  0002                     # 75 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1654                           STATUS equ 03h ;# 
  1655  0003                     # 161 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1656                           FSR equ 04h ;# 
  1657  0004                     # 168 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1658                           PORTA equ 05h ;# 
  1659  0005                     # 230 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1660                           PORTB equ 06h ;# 
  1661  0006                     # 292 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1662                           PORTC equ 07h ;# 
  1663  0007                     # 354 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1664                           PORTD equ 08h ;# 
  1665  0008                     # 416 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1666                           PORTE equ 09h ;# 
  1667  0009                     # 454 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1668                           PCLATH equ 0Ah ;# 
  1669  000A                     # 461 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1670                           INTCON equ 0Bh ;# 
  1671  000B                     # 539 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1672                           PIR1 equ 0Ch ;# 
  1673  000C                     # 595 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1674                           PIR2 equ 0Dh ;# 
  1675  000D                     # 652 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1676                           TMR1 equ 0Eh ;# 
  1677  000E                     # 659 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1678                           TMR1L equ 0Eh ;# 
  1679  000E                     # 666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1680                           TMR1H equ 0Fh ;# 
  1681  000F                     # 673 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1682                           T1CON equ 010h ;# 
  1683  0010                     # 767 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1684                           TMR2 equ 011h ;# 
  1685  0011                     # 774 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1686                           T2CON equ 012h ;# 
  1687  0012                     # 845 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1688                           SSPBUF equ 013h ;# 
  1689  0013                     # 852 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1690                           SSPCON equ 014h ;# 
  1691  0014                     # 922 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1692                           CCPR1 equ 015h ;# 
  1693  0015                     # 929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1694                           CCPR1L equ 015h ;# 
  1695  0015                     # 936 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1696                           CCPR1H equ 016h ;# 
  1697  0016                     # 943 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1698                           CCP1CON equ 017h ;# 
  1699  0017                     # 1040 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1700                           RCSTA equ 018h ;# 
  1701  0018                     # 1135 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1702                           TXREG equ 019h ;# 
  1703  0019                     # 1142 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1704                           RCREG equ 01Ah ;# 
  1705  001A                     # 1149 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1706                           CCPR2 equ 01Bh ;# 
  1707  001B                     # 1156 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1708                           CCPR2L equ 01Bh ;# 
  1709  001B                     # 1163 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1710                           CCPR2H equ 01Ch ;# 
  1711  001C                     # 1170 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1712                           CCP2CON equ 01Dh ;# 
  1713  001D                     # 1240 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1714                           ADRESH equ 01Eh ;# 
  1715  001E                     # 1247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1716                           ADCON0 equ 01Fh ;# 
  1717  001F                     # 1348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1718                           OPTION_REG equ 081h ;# 
  1719  0081                     # 1418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1720                           TRISA equ 085h ;# 
  1721  0085                     # 1480 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1722                           TRISB equ 086h ;# 
  1723  0086                     # 1542 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1724                           TRISC equ 087h ;# 
  1725  0087                     # 1604 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1726                           TRISD equ 088h ;# 
  1727  0088                     # 1666 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1728                           TRISE equ 089h ;# 
  1729  0089                     # 1704 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1730                           PIE1 equ 08Ch ;# 
  1731  008C                     # 1760 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1732                           PIE2 equ 08Dh ;# 
  1733  008D                     # 1817 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1734                           PCON equ 08Eh ;# 
  1735  008E                     # 1864 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1736                           OSCCON equ 08Fh ;# 
  1737  008F                     # 1929 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1738                           OSCTUNE equ 090h ;# 
  1739  0090                     # 1981 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1740                           SSPCON2 equ 091h ;# 
  1741  0091                     # 2043 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1742                           PR2 equ 092h ;# 
  1743  0092                     # 2050 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1744                           SSPADD equ 093h ;# 
  1745  0093                     # 2057 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1746                           SSPMSK equ 093h ;# 
  1747  0093                     # 2062 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1748                           MSK equ 093h ;# 
  1749  0093                     # 2179 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1750                           SSPSTAT equ 094h ;# 
  1751  0094                     # 2348 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1752                           WPUB equ 095h ;# 
  1753  0095                     # 2418 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1754                           IOCB equ 096h ;# 
  1755  0096                     # 2488 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1756                           VRCON equ 097h ;# 
  1757  0097                     # 2558 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1758                           TXSTA equ 098h ;# 
  1759  0098                     # 2644 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1760                           SPBRG equ 099h ;# 
  1761  0099                     # 2706 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1762                           SPBRGH equ 09Ah ;# 
  1763  009A                     # 2776 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1764                           PWM1CON equ 09Bh ;# 
  1765  009B                     # 2846 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1766                           ECCPAS equ 09Ch ;# 
  1767  009C                     # 2928 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1768                           PSTRCON equ 09Dh ;# 
  1769  009D                     # 2972 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1770                           ADRESL equ 09Eh ;# 
  1771  009E                     # 2979 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1772                           ADCON1 equ 09Fh ;# 
  1773  009F                     # 3013 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1774                           WDTCON equ 0105h ;# 
  1775  0105                     # 3066 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1776                           CM1CON0 equ 0107h ;# 
  1777  0107                     # 3131 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1778                           CM2CON0 equ 0108h ;# 
  1779  0108                     # 3196 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1780                           CM2CON1 equ 0109h ;# 
  1781  0109                     # 3247 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1782                           EEDATA equ 010Ch ;# 
  1783  010C                     # 3252 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1784                           EEDAT equ 010Ch ;# 
  1785  010C                     # 3259 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1786                           EEADR equ 010Dh ;# 
  1787  010D                     # 3266 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1788                           EEDATH equ 010Eh ;# 
  1789  010E                     # 3273 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1790                           EEADRH equ 010Fh ;# 
  1791  010F                     # 3280 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1792                           SRCON equ 0185h ;# 
  1793  0185                     # 3337 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1794                           BAUDCTL equ 0187h ;# 
  1795  0187                     # 3389 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1796                           ANSEL equ 0188h ;# 
  1797  0188                     # 3451 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1798                           ANSELH equ 0189h ;# 
  1799  0189                     # 3501 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1800                           EECON1 equ 018Ch ;# 
  1801  018C                     # 3546 "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\include\pic16f887.h"
  1802                           EECON2 equ 018Dh ;# 
  1803  018D  ;; Function _rfid_read is unused but had its address taken
  1804                           global _rfid_read
  1805                           _rfid_read equ 0
  1806  0000  ;; Function _rfid_read_wait is unused but had its address taken
  1807                           global _rfid_read_wait
  1808                           _rfid_read_wait equ 0
  1809  0000  ;; Function _rfid_display is unused but had its address taken
  1810                           global _rfid_display
  1811                           _rfid_display equ 0
  1812  0000  ;; Function _rfid_display_wait is unused but had its address taken
  1813                           global _rfid_display_wait
  1814                           _rfid_display_wait equ 0
  1815  0000                     	FNCALL	_main,_MFRC522_AntiColl
  1816                           	FNCALL	_main,_delay_ms
  1817                           	FNCALL	_main,_hex2Ascii
  1818                           	FNCALL	_main,_lcd_clr
  1819                           	FNCALL	_main,_lcd_init
  1820                           	FNCALL	_main,_lcd_print
  1821                           	FNCALL	_main,_mfrc522Iniciar
  1822                           	FNCALL	_main,_procura_tag
  1823                           	FNCALL	_main,_prs_detect
  1824                           	FNCALL	_main,_sensors_init
  1825                           	FNCALL	_main,_spiSoftIniciar
  1826                           	FNCALL	_main,_spi_hardware_disable
  1827                           	FNCALL	_main,_tag_false
  1828                           	FNCALL	_main,_tmr_tick_init
  1829                           	FNCALL	_main,_uts_trigger
  1830                           	FNCALL	_prs_detect,_delay_ms
  1831                           	FNCALL	_procura_tag,_spiSoftTxCmd
  1832                           	FNCALL	_procura_tag,_spiSoftTxDat
  1833                           	FNCALL	_procura_tag,_tagTxCmd
  1834                           	FNCALL	_tagTxCmd,_mfrc522ClrBit
  1835                           	FNCALL	_tagTxCmd,_mfrc522SetBit
  1836                           	FNCALL	_tagTxCmd,_spiSoftRxDat
  1837                           	FNCALL	_tagTxCmd,_spiSoftTxCmd
  1838                           	FNCALL	_tagTxCmd,_spiSoftTxDat
  1839                           	FNCALL	_mfrc522ClrBit,_spiSoftRxDat
  1840                           	FNCALL	_mfrc522ClrBit,_spiSoftTxCmd
  1841                           	FNCALL	_mfrc522ClrBit,_spiSoftTxDat
  1842                           	FNCALL	_mfrc522Iniciar,_mfrc522AntOn
  1843                           	FNCALL	_mfrc522Iniciar,_mfrc522Rst
  1844                           	FNCALL	_mfrc522Iniciar,_spiSoftTxCmd
  1845                           	FNCALL	_mfrc522Iniciar,_spiSoftTxDat
  1846                           	FNCALL	_mfrc522Rst,_spiSoftTxCmd
  1847                           	FNCALL	_mfrc522Rst,_spiSoftTxDat
  1848                           	FNCALL	_mfrc522AntOn,_mfrc522SetBit
  1849                           	FNCALL	_mfrc522SetBit,_spiSoftRxDat
  1850                           	FNCALL	_mfrc522SetBit,_spiSoftTxCmd
  1851                           	FNCALL	_mfrc522SetBit,_spiSoftTxDat
  1852                           	FNCALL	_spiSoftTxCmd,_spiSoftClk
  1853                           	FNCALL	_lcd_print,_lcd_data
  1854                           	FNCALL	_lcd_print,_lcd_lincol
  1855                           	FNCALL	_lcd_lincol,_lcd_inst
  1856                           	FNCALL	_lcd_init,_lcd_inst
  1857                           	FNCALL	_lcd_clr,_lcd_inst
  1858                           	FNCALL	_MFRC522_AntiColl,_MFRC522_Clear_Bit
  1859                           	FNCALL	_MFRC522_AntiColl,_MFRC522_ToCard
  1860                           	FNCALL	_MFRC522_AntiColl,_MFRC522_Wr
  1861                           	FNCALL	_MFRC522_ToCard,_MFRC522_Clear_Bit
  1862                           	FNCALL	_MFRC522_ToCard,_MFRC522_Rd
  1863                           	FNCALL	_MFRC522_ToCard,_MFRC522_Set_Bit
  1864                           	FNCALL	_MFRC522_ToCard,_MFRC522_Wr
  1865                           	FNCALL	_MFRC522_Set_Bit,_MFRC522_Rd
  1866                           	FNCALL	_MFRC522_Set_Bit,_MFRC522_Wr
  1867                           	FNCALL	_MFRC522_Clear_Bit,_MFRC522_Rd
  1868                           	FNCALL	_MFRC522_Clear_Bit,_MFRC522_Wr
  1869                           	FNCALL	_MFRC522_Wr,_spiSoftTxDat
  1870                           	FNCALL	_MFRC522_Rd,_spiSoftRxDat
  1871                           	FNCALL	_MFRC522_Rd,_spiSoftTxDat
  1872                           	FNCALL	_spiSoftTxDat,_spiSoftClk
  1873                           	FNCALL	_spiSoftRxDat,_spiSoftClk
  1874                           	FNROOT	_main
  1875                           	FNCALL	_isr,___aldiv
  1876                           	FNCALL	_isr,___lmul
  1877                           	FNCALL	_isr,_tmr_tick_int
  1878                           	FNCALL	intlevel1,_isr
  1879                           	global	intlevel1
  1880                           	FNROOT	intlevel1
  1881                           	global	_TAG
  1882                           	global	main@F1412
  1883                           	global	main@F1418
  1884                           	global	main@F1414
  1885                           	global	_UID
  1886                           	global	_matEeprom
  1887                           	global	main@F1416
  1888                           	global	_uidAsci
  1889                           psect	idataBANK0,class=CODE,space=0,delta=2,noexec
  1890                           global __pidataBANK0
  1891                           __pidataBANK0:
  1892  07FB                     	file	"fsm_rfid.c"
  1893                           	line	17
  1894                           
  1895                           ;initializer for _TAG
  1896                           	retlw	030h
  1897  07FB  3430               	retlw	030h
  1898  07FC  3430               	retlw	030h
  1899  07FD  3430               	retlw	030h
  1900  07FE  3430               	retlw	low(0)
  1901  07FF  3400               psect	idataBANK1,class=CODE,space=0,delta=2,noexec
  1902                           global __pidataBANK1
  1903                           __pidataBANK1:
  1904  091C                     	file	"main.c"
  1905                           	line	33
  1906                           
  1907                           ;initializer for main@F1412
  1908                           	retlw	030h
  1909  091C  3430               	retlw	030h
  1910  091D  3430               	retlw	030h
  1911  091E  3430               	retlw	030h
  1912  091F  3430               	retlw	030h
  1913  0920  3430               	retlw	030h
  1914  0921  3430               	retlw	low(0)
  1915  0922  3400               	line	36
  1916                           
  1917                           ;initializer for main@F1418
  1918                           	retlw	0DAh
  1919  0923  34DA               	retlw	08h
  1920  0924  3408               	retlw	07Eh
  1921  0925  347E               	retlw	080h
  1922  0926  3480               	retlw	02Ch
  1923  0927  342C               	retlw	low(0)
  1924  0928  3400               	line	34
  1925                           
  1926                           ;initializer for main@F1414
  1927                           	retlw	030h
  1928  0929  3430               	retlw	030h
  1929  092A  3430               	retlw	030h
  1930  092B  3430               	retlw	030h
  1931  092C  3430               	retlw	low(0)
  1932  092D  3400               	file	"fsm_rfid.c"
  1933                           	line	16
  1934                           
  1935                           ;initializer for _UID
  1936                           	retlw	030h
  1937  092E  3430               	retlw	030h
  1938  092F  3430               	retlw	030h
  1939  0930  3430               	retlw	030h
  1940  0931  3430               	retlw	030h
  1941  0932  3430               	retlw	030h
  1942  0933  3430               	retlw	low(0)
  1943  0934  3400               psect	idataBANK2,class=CODE,space=0,delta=2,noexec
  1944                           global __pidataBANK2
  1945                           __pidataBANK2:
  1946  0B28                     	file	"eeprom.c"
  1947                           	line	51
  1948                           
  1949                           ;initializer for _matEeprom
  1950                           	retlw	0FFh
  1951  0B28  34FF               	retlw	0FFh
  1952  0B29  34FF               	retlw	0FFh
  1953  0B2A  34FF               	retlw	0FFh
  1954  0B2B  34FF               	retlw	0FFh
  1955  0B2C  34FF               	retlw	0FFh
  1956  0B2D  34FF               	retlw	0FFh
  1957  0B2E  34FF               	retlw	0FFh
  1958  0B2F  34FF               	retlw	0FFh
  1959  0B30  34FF               	retlw	0FFh
  1960  0B31  34FF               	retlw	0FFh
  1961  0B32  34FF               	retlw	0FFh
  1962  0B33  34FF               	retlw	0FFh
  1963  0B34  34FF               	retlw	0FFh
  1964  0B35  34FF               	retlw	0FFh
  1965  0B36  34FF               	retlw	0FFh
  1966  0B37  34FF               	retlw	0FFh
  1967  0B38  34FF               	retlw	0FFh
  1968  0B39  34FF               	retlw	0FFh
  1969  0B3A  34FF               	retlw	0FFh
  1970  0B3B  34FF               	retlw	0FFh
  1971  0B3C  34FF               	retlw	0FFh
  1972  0B3D  34FF               	retlw	0FFh
  1973  0B3E  34FF               	retlw	0FFh
  1974  0B3F  34FF               	retlw	0FFh
  1975  0B40  34FF               	retlw	0FFh
  1976  0B41  34FF               	retlw	0FFh
  1977  0B42  34FF               	retlw	0FFh
  1978  0B43  34FF               	retlw	0FFh
  1979  0B44  34FF               	retlw	0FFh
  1980  0B45  34FF               	retlw	0FFh
  1981  0B46  34FF               	retlw	0FFh
  1982  0B47  34FF               	retlw	0FFh
  1983  0B48  34FF               	retlw	0FFh
  1984  0B49  34FF               	retlw	0FFh
  1985  0B4A  34FF               	retlw	0FFh
  1986  0B4B  34FF               	retlw	0FFh
  1987  0B4C  34FF               	retlw	0FFh
  1988  0B4D  34FF               	retlw	0FFh
  1989  0B4E  34FF               	retlw	0FFh
  1990  0B4F  34FF               	retlw	0FFh
  1991  0B50  34FF               	retlw	0FFh
  1992  0B51  34FF               	retlw	0FFh
  1993  0B52  34FF               	retlw	0FFh
  1994  0B53  34FF               	retlw	0FFh
  1995  0B54  34FF               	retlw	0FFh
  1996  0B55  34FF               	retlw	0FFh
  1997  0B56  34FF               	retlw	0FFh
  1998  0B57  34FF               	retlw	0FFh
  1999  0B58  34FF               	retlw	0FFh
  2000  0B59  34FF               	retlw	0FFh
  2001  0B5A  34FF               	retlw	0FFh
  2002  0B5B  34FF               	retlw	0FFh
  2003  0B5C  34FF               	retlw	0FFh
  2004  0B5D  34FF               	retlw	0FFh
  2005  0B5E  34FF               psect	idataBANK3,class=CODE,space=0,delta=2,noexec
  2006                           global __pidataBANK3
  2007                           __pidataBANK3:
  2008  09CF                     	file	"rfid.c"
  2009                           	line	25
  2010                           
  2011                           ;initializer for _dados_tag
  2012                           	retlw	05Fh
  2013  09CF  345F               	retlw	05Fh
  2014  09D0  345F               	retlw	05Fh
  2015  09D1  345F               	retlw	05Fh
  2016  09D2  345F               	retlw	05Fh
  2017  09D3  345F               	retlw	05Fh
  2018  09D4  345F               	retlw	05Fh
  2019  09D5  345F               	retlw	05Fh
  2020  09D6  345F               	retlw	05Fh
  2021  09D7  345F               	retlw	05Fh
  2022  09D8  345F               	retlw	05Fh
  2023  09D9  345F               	retlw	05Fh
  2024  09DA  345F               	retlw	05Fh
  2025  09DB  345F               	retlw	05Fh
  2026  09DC  345F               	retlw	05Fh
  2027  09DD  345F               	retlw	05Fh
  2028  09DE  345F               	retlw	low(0)
  2029  09DF  3400               	file	"main.c"
  2030                           	line	35
  2031                           
  2032                           ;initializer for main@F1416
  2033                           	retlw	05Fh
  2034  09E0  345F               	retlw	05Fh
  2035  09E1  345F               	retlw	05Fh
  2036  09E2  345F               	retlw	05Fh
  2037  09E3  345F               	retlw	05Fh
  2038  09E4  345F               	retlw	05Fh
  2039  09E5  345F               	retlw	05Fh
  2040  09E6  345F               	retlw	05Fh
  2041  09E7  345F               	retlw	05Fh
  2042  09E8  345F               	retlw	05Fh
  2043  09E9  345F               	retlw	05Fh
  2044  09EA  345F               	retlw	05Fh
  2045  09EB  345F               	retlw	low(0)
  2046  09EC  3400               	file	"fsm_rfid.c"
  2047                           	line	18
  2048                           
  2049                           ;initializer for _uidAsci
  2050                           	retlw	05Fh
  2051  09ED  345F               	retlw	05Fh
  2052  09EE  345F               	retlw	05Fh
  2053  09EF  345F               	retlw	05Fh
  2054  09F0  345F               	retlw	05Fh
  2055  09F1  345F               	retlw	05Fh
  2056  09F2  345F               	retlw	05Fh
  2057  09F3  345F               	retlw	05Fh
  2058  09F4  345F               	retlw	05Fh
  2059  09F5  345F               	retlw	05Fh
  2060  09F6  345F               	retlw	05Fh
  2061  09F7  345F               	retlw	05Fh
  2062  09F8  345F               	retlw	low(0)
  2063  09F9  3400               psect	strings,class=STRING,delta=2,noexec
  2064                           global __pstrings
  2065                           __pstrings:
  2066  0800                     stringtab:
  2067  0800                     	global    __stringtab
  2068                           __stringtab:
  2069  0800                     ;	String table - string pointers are 1 byte each
  2070                           	btfsc	(btemp+1),7
  2071  0800  1BFF               	ljmp	stringcode
  2072  0801  280A               	bcf	status,7
  2073  0802  1383               	btfsc	(btemp+1),0
  2074  0803  187F               	bsf	status,7
  2075  0804  1783               	movf	indf,w
  2076  0805  0800               	incf fsr
  2077  0806  0A84               skipnz
  2078  0807  1903               incf btemp+1
  2079  0808  0AFF               	return
  2080  0809  0008               stringcode:stringdir:
  2081  080A                     movlw high(stringdir)
      + 080A                     stringdir:	
  2082  080A  3008               movwf pclath
  2083  080B  008A               movf fsr,w
  2084  080C  0804               incf fsr
  2085  080D  0A84               	addwf pc
  2086  080E  0782               	global __stringbase
  2087                           __stringbase:
  2088  080F                     	retlw	0
  2089  080F  3400               psect	strings
  2090                           	global    __end_of__stringtab
  2091                           __end_of__stringtab:
  2092  0810                     	file	"tmr_tick.c"
  2093                           	line	4
  2094                           _tmr_tick_reload:
  2095  0810                     	retlw	078h
  2096  0810  3478               	retlw	0ECh
  2097  0811  34EC               
  2098                           	global __end_of_tmr_tick_reload
  2099                           __end_of_tmr_tick_reload:
  2100  0812                     	global	_timer
  2101                           	global	_time
  2102                           	global	_t_sensor
  2103                           	global	_uid
  2104                           	global	_ret
  2105                           	global	_dist
  2106                           	global	_PORTAbits
  2107                           _PORTAbits	set	0x5
  2108  0005                     	global	_PIR1bits
  2109                           _PIR1bits	set	0xC
  2110  000C                     	global	_T1CONbits
  2111                           _T1CONbits	set	0x10
  2112  0010                     	global	_TMR1L
  2113                           _TMR1L	set	0xE
  2114  000E                     	global	_TMR1H
  2115                           _TMR1H	set	0xF
  2116  000F                     	global	_PORTBbits
  2117                           _PORTBbits	set	0x6
  2118  0006                     	global	_INTCONbits
  2119                           _INTCONbits	set	0xB
  2120  000B                     	global	_PORTD
  2121                           _PORTD	set	0x8
  2122  0008                     	global	_PORTDbits
  2123                           _PORTDbits	set	0x8
  2124  0008                     	global	_PORTCbits
  2125                           _PORTCbits	set	0x7
  2126  0007                     	global	_SSPEN
  2127                           _SSPEN	set	0xA5
  2128  00A5                     	global	_IOCBbits
  2129                           _IOCBbits	set	0x96
  2130  0096                     	global	_TRISAbits
  2131                           _TRISAbits	set	0x85
  2132  0085                     	global	_PIE1bits
  2133                           _PIE1bits	set	0x8C
  2134  008C                     	global	_TRISDbits
  2135                           _TRISDbits	set	0x88
  2136  0088                     	global	_TRISBbits
  2137                           _TRISBbits	set	0x86
  2138  0086                     	global	_TRISCbits
  2139                           _TRISCbits	set	0x87
  2140  0087                     	global	_SSPIE
  2141                           _SSPIE	set	0x463
  2142  0463                     	global	_EEDATA
  2143                           _EEDATA	set	0x10C
  2144  010C                     	global	_EEADR
  2145                           _EEADR	set	0x10D
  2146  010D                     	global	_C2ON
  2147                           _C2ON	set	0x847
  2148  0847                     	global	_EECON2
  2149                           _EECON2	set	0x18D
  2150  018D                     	global	_EECON1bits
  2151                           _EECON1bits	set	0x18C
  2152  018C                     	global	_ANSELH
  2153                           _ANSELH	set	0x189
  2154  0189                     	global	_ANSEL
  2155                           _ANSEL	set	0x188
  2156  0188                     	
  2157                           STR_8:	
  2158  0812                     	retlw	77	;'M'
  2159  0812  344D               	retlw	65	;'A'
  2160  0813  3441               	retlw	81	;'Q'
  2161  0814  3451               	retlw	46	;'.'
  2162  0815  342E               	retlw	32	;' '
  2163  0816  3420               	retlw	69	;'E'
  2164  0817  3445               	retlw	78	;'N'
  2165  0818  344E               	retlw	69	;'E'
  2166  0819  3445               	retlw	82	;'R'
  2167  081A  3452               	retlw	71	;'G'
  2168  081B  3447               	retlw	73	;'I'
  2169  081C  3449               	retlw	90	;'Z'
  2170  081D  345A               	retlw	65	;'A'
  2171  081E  3441               	retlw	68	;'D'
  2172  081F  3444               	retlw	65	;'A'
  2173  0820  3441               	retlw	0
  2174  0821  3400               psect	strings
  2175                           	
  2176                           STR_1:	
  2177  0822                     	retlw	73	;'I'
  2178  0822  3449               	retlw	78	;'N'
  2179  0823  344E               	retlw	68	;'D'
  2180  0824  3444               	retlw	85	;'U'
  2181  0825  3455               	retlw	83	;'S'
  2182  0826  3453               	retlw	84	;'T'
  2183  0827  3454               	retlw	82	;'R'
  2184  0828  3452               	retlw	73	;'I'
  2185  0829  3449               	retlw	65	;'A'
  2186  082A  3441               	retlw	76	;'L'
  2187  082B  344C               	retlw	0
  2188  082C  3400               psect	strings
  2189                           	
  2190                           STR_3:	
  2191  082D                     	retlw	69	;'E'
  2192  082D  3445               	retlw	83	;'S'
  2193  082E  3453               	retlw	80	;'P'
  2194  082F  3450               	retlw	69	;'E'
  2195  0830  3445               	retlw	82	;'R'
  2196  0831  3452               	retlw	65	;'A'
  2197  0832  3441               	retlw	78	;'N'
  2198  0833  344E               	retlw	68	;'D'
  2199  0834  3444               	retlw	79	;'O'
  2200  0835  344F               	retlw	0
  2201  0836  3400               psect	strings
  2202                           	
  2203                           STR_12:	
  2204  0837                     	retlw	32	;' '
  2205  0837  3420               	retlw	76	;'L'
  2206  0838  344C               	retlw	73	;'I'
  2207  0839  3449               	retlw	86	;'V'
  2208  083A  3456               	retlw	82	;'R'
  2209  083B  3452               	retlw	69	;'E'
  2210  083C  3445               	retlw	32	;' '
  2211  083D  3420               	retlw	32	;' '
  2212  083E  3420               	retlw	0
  2213  083F  3400               psect	strings
  2214                           	
  2215                           STR_7:	
  2216  0840                     	retlw	76	;'L'
  2217  0840  344C               	retlw	73	;'I'
  2218  0841  3449               	retlw	66	;'B'
  2219  0842  3442               	retlw	69	;'E'
  2220  0843  3445               	retlw	82	;'R'
  2221  0844  3452               	retlw	65	;'A'
  2222  0845  3441               	retlw	68	;'D'
  2223  0846  3444               	retlw	79	;'O'
  2224  0847  344F               	retlw	0
  2225  0848  3400               psect	strings
  2226                           	
  2227                           STR_11:	
  2228  0849                     	retlw	32	;' '
  2229  0849  3420               	retlw	65	;'A'
  2230  084A  3441               	retlw	76	;'L'
  2231  084B  344C               	retlw	69	;'E'
  2232  084C  3445               	retlw	82	;'R'
  2233  084D  3452               	retlw	84	;'T'
  2234  084E  3454               	retlw	65	;'A'
  2235  084F  3441               	retlw	0
  2236  0850  3400               psect	strings
  2237                           	
  2238                           STR_10:	
  2239  0851                     	retlw	78	;'N'
  2240  0851  344E               	retlw	69	;'E'
  2241  0852  3445               	retlw	71	;'G'
  2242  0853  3447               	retlw	65	;'A'
  2243  0854  3441               	retlw	68	;'D'
  2244  0855  3444               	retlw	79	;'O'
  2245  0856  344F               	retlw	0
  2246  0857  3400               psect	strings
  2247                           	
  2248                           STR_4:	
  2249  0858                     	retlw	65	;'A'
  2250  0858  3441               	retlw	67	;'C'
  2251  0859  3443               	retlw	69	;'E'
  2252  085A  3445               	retlw	83	;'S'
  2253  085B  3453               	retlw	83	;'S'
  2254  085C  3453               	retlw	79	;'O'
  2255  085D  344F               	retlw	0
  2256  085E  3400               psect	strings
  2257                           	
  2258                           STR_2:	
  2259  085F                     	retlw	83	;'S'
  2260  085F  3453               	retlw	65	;'A'
  2261  0860  3441               	retlw	70	;'F'
  2262  0861  3446               	retlw	69	;'E'
  2263  0862  3445               	retlw	84	;'T'
  2264  0863  3454               	retlw	89	;'Y'
  2265  0864  3459               	retlw	0
  2266  0865  3400               psect	strings
  2267                           	
  2268                           STR_5:	
  2269  0866                     	retlw	84	;'T'
  2270  0866  3454               	retlw	65	;'A'
  2271  0867  3441               	retlw	71	;'G'
  2272  0868  3447               	retlw	32	;' '
  2273  0869  3420               	retlw	58	;':'
  2274  086A  343A               	retlw	0
  2275  086B  3400               psect	strings
  2276                           	
  2277                           STR_13:	
  2278  086C                     	retlw	80	;'P'
  2279  086C  3450               	retlw	65	;'A'
  2280  086D  3441               	retlw	82	;'R'
  2281  086E  3452               	retlw	65	;'A'
  2282  086F  3441               	retlw	82	;'R'
  2283  0870  3452               	retlw	0
  2284  0871  3400               psect	strings
  2285                           	
  2286                           STR_14:	
  2287  0872                     	retlw	60	;'<'
  2288  0872  343C               	retlw	0
  2289  0873  3400               psect	strings
  2290                           	
  2291                           STR_15:	
  2292  0874                     	retlw	62	;'>'
  2293  0874  343E               	retlw	0
  2294  0875  3400               psect	strings
  2295                           STR_6	equ	STR_4+0
  2296  0858                     STR_9	equ	STR_4+0
  2297  0858                     ; #config settings
  2298                           global __CFG_FOSC$HS
  2299                           __CFG_FOSC$HS equ 0x0
  2300  0000                     global __CFG_WDTE$OFF
  2301                           __CFG_WDTE$OFF equ 0x0
  2302  0000                     global __CFG_PWRTE$OFF
  2303                           __CFG_PWRTE$OFF equ 0x0
  2304  0000                     global __CFG_MCLRE$OFF
  2305                           __CFG_MCLRE$OFF equ 0x0
  2306  0000                     global __CFG_CP$OFF
  2307                           __CFG_CP$OFF equ 0x0
  2308  0000                     global __CFG_CPD$OFF
  2309                           __CFG_CPD$OFF equ 0x0
  2310  0000                     global __CFG_BOREN$OFF
  2311                           __CFG_BOREN$OFF equ 0x0
  2312  0000                     global __CFG_IESO$OFF
  2313                           __CFG_IESO$OFF equ 0x0
  2314  0000                     global __CFG_FCMEN$OFF
  2315                           __CFG_FCMEN$OFF equ 0x0
  2316  0000                     global __CFG_LVP$OFF
  2317                           __CFG_LVP$OFF equ 0x0
  2318  0000                     global __CFG_BOR4V$BOR40V
  2319                           __CFG_BOR4V$BOR40V equ 0x0
  2320  0000                     global __CFG_WRT$OFF
  2321                           __CFG_WRT$OFF equ 0x0
  2322  0000                     	file	"C:\Users\211934~3.000\AppData\Local\Temp\sdfg."
  2323                           	line	#
  2324                           psect cinit,class=CODE,delta=2
  2325                           global start_initialization
  2326                           start_initialization:
  2327  0013                     
  2328                           global __initialization
  2329                           __initialization:
  2330  0013                     psect	bssCOMMON,class=COMMON,space=1,noexec
  2331                           global __pbssCOMMON
  2332                           __pbssCOMMON:
  2333  007A                     _f_mp:
  2334  007A                            ds      1
  2335  007A                     
  2336                           _c:
  2337  007B                            ds      1
  2338  007B                     
  2339                           _find:
  2340  007C                            ds      1
  2341  007C                     
  2342                           _b:
  2343  007D                            ds      1
  2344  007D                     
  2345                           psect	bssBANK0,class=BANK0,space=1,noexec
  2346                           global __pbssBANK0
  2347                           __pbssBANK0:
  2348  0041                     _timer:
  2349  0041                            ds      8
  2350  0041                     
  2351                           _time:
  2352  0049                            ds      4
  2353  0049                     
  2354                           _t_sensor:
  2355  004D                            ds      2
  2356  004D                     
  2357                           _uid:
  2358  004F                            ds      1
  2359  004F                     
  2360                           _ret:
  2361  0050                            ds      1
  2362  0050                     
  2363                           psect	dataBANK0,class=BANK0,space=1,noexec
  2364                           global __pdataBANK0
  2365                           __pdataBANK0:
  2366  0051                     	file	"fsm_rfid.c"
  2367                           	line	17
  2368                           _TAG:
  2369  0051                            ds      5
  2370  0051                     
  2371                           psect	bssBANK1,class=BANK1,space=1,noexec
  2372                           global __pbssBANK1
  2373                           __pbssBANK1:
  2374  00E8                     _dist:
  2375  00E8                            ds      4
  2376  00E8                     
  2377                           psect	dataBANK1,class=BANK1,space=1,noexec
  2378                           global __pdataBANK1
  2379                           __pdataBANK1:
  2380  00CF                     	file	"main.c"
  2381                           	line	33
  2382                           main@F1412:
  2383  00CF                            ds      7
  2384  00CF                     
  2385                           psect	dataBANK1
  2386                           	file	"main.c"
  2387                           	line	36
  2388                           main@F1418:
  2389  00D6                            ds      6
  2390  00D6                     
  2391                           psect	dataBANK1
  2392                           	file	"main.c"
  2393                           	line	34
  2394                           main@F1414:
  2395  00DC                            ds      5
  2396  00DC                     
  2397                           psect	dataBANK1
  2398                           	file	"fsm_rfid.c"
  2399                           	line	16
  2400                           _UID:
  2401  00E1                            ds      7
  2402  00E1                     
  2403                           psect	dataBANK3,class=BANK3,space=1,noexec
  2404                           global __pdataBANK3
  2405                           __pdataBANK3:
  2406  0190                     	file	"rfid.c"
  2407                           	line	25
  2408                           _dados_tag:
  2409  0190                            ds      17
  2410  0190                     
  2411                           psect	dataBANK3
  2412                           	file	"main.c"
  2413                           	line	35
  2414                           main@F1416:
  2415  01A1                            ds      13
  2416  01A1                     
  2417                           psect	dataBANK3
  2418                           	file	"fsm_rfid.c"
  2419                           	line	18
  2420                           _uidAsci:
  2421  01AE                            ds      13
  2422  01AE                     
  2423                           psect	dataBANK2,class=BANK2,space=1,noexec
  2424                           global __pdataBANK2
  2425                           __pdataBANK2:
  2426  0110                     	file	"eeprom.c"
  2427                           	line	51
  2428                           _matEeprom:
  2429  0110                            ds      55
  2430  0110                     
  2431                           	file	"C:\Users\211934~3.000\AppData\Local\Temp\sdfg."
  2432                           	line	#
  2433                           global btemp
  2434                           psect inittext,class=CODE,delta=2
  2435                           global init_fetch0,btemp
  2436                           ;	Called with low address in FSR and high address in W
  2437                           init_fetch0:
  2438  089C                     	movf btemp,w
  2439  089C  087E               	movwf pclath
  2440  089D  008A               	movf btemp+1,w
  2441  089E  087F               	movwf pc
  2442  089F  0082               global init_ram0
  2443                           ;Called with:
  2444                           ;	high address of idata address in btemp 
  2445                           ;	low address of idata address in btemp+1 
  2446                           ;	low address of data in FSR
  2447                           ;	high address + 1 of data in btemp-1
  2448                           init_ram0:
  2449  08A0                     	fcall init_fetch0
  2450  08A0  120A  158A  209C  120A  158A  	movwf indf,f
  2451  08A5  0080               	incf fsr,f
  2452  08A6  0A84               	movf fsr,w
  2453  08A7  0804               	xorwf btemp-1,w
  2454  08A8  067D               	btfsc status,2
  2455  08A9  1903               	retlw 0
  2456  08AA  3400               	incf btemp+1,f
  2457  08AB  0AFF               	btfsc status,2
  2458  08AC  1903               	incf btemp,f
  2459  08AD  0AFE               	goto init_ram0
  2460  08AE  28A0               ; Initialize objects allocated to BANK3
  2461                           psect cinit,class=CODE,delta=2,merge=1
  2462                           global init_ram0, __pidataBANK3
  2463                           	bsf	status, 7	;select IRP bank2
  2464  0013  1783               	movlw low(__pdataBANK3+43)
  2465  0014  30BB               	movwf btemp-1,f
  2466  0015  00FD               	movlw high(__pidataBANK3)
  2467  0016  3009               	movwf btemp,f
  2468  0017  00FE               	movlw low(__pidataBANK3)
  2469  0018  30CF               	movwf btemp+1,f
  2470  0019  00FF               	movlw low(__pdataBANK3)
  2471  001A  3090               	movwf fsr,f
  2472  001B  0084               	fcall init_ram0
  2473  001C  120A  158A  20A0  120A  118A  ; Initialize objects allocated to BANK2
  2474                           psect cinit,class=CODE,delta=2,merge=1
  2475                           global init_ram0, __pidataBANK2
  2476                           	movlw low(__pdataBANK2+55)
  2477  0021  3047               	movwf btemp-1,f
  2478  0022  00FD               	movlw high(__pidataBANK2)
  2479  0023  300B               	movwf btemp,f
  2480  0024  00FE               	movlw low(__pidataBANK2)
  2481  0025  3028               	movwf btemp+1,f
  2482  0026  00FF               	movlw low(__pdataBANK2)
  2483  0027  3010               	movwf fsr,f
  2484  0028  0084               	fcall init_ram0
  2485  0029  120A  158A  20A0  120A  118A  ; Initialize objects allocated to BANK1
  2486                           psect cinit,class=CODE,delta=2,merge=1
  2487                           global init_ram0, __pidataBANK1
  2488                           	bcf	status, 7	;select IRP bank0
  2489  002E  1383               	movlw low(__pdataBANK1+25)
  2490  002F  30E8               	movwf btemp-1,f
  2491  0030  00FD               	movlw high(__pidataBANK1)
  2492  0031  3009               	movwf btemp,f
  2493  0032  00FE               	movlw low(__pidataBANK1)
  2494  0033  301C               	movwf btemp+1,f
  2495  0034  00FF               	movlw low(__pdataBANK1)
  2496  0035  30CF               	movwf fsr,f
  2497  0036  0084               	fcall init_ram0
  2498  0037  120A  158A  20A0  120A  118A  ; Initialize objects allocated to BANK0
  2499                           psect cinit,class=CODE,delta=2,merge=1
  2500                           global init_ram0, __pidataBANK0
  2501                           	movlw low(__pdataBANK0+5)
  2502  003C  3056               	movwf btemp-1,f
  2503  003D  00FD               	movlw high(__pidataBANK0)
  2504  003E  3007               	movwf btemp,f
  2505  003F  00FE               	movlw low(__pidataBANK0)
  2506  0040  30FB               	movwf btemp+1,f
  2507  0041  00FF               	movlw low(__pdataBANK0)
  2508  0042  3051               	movwf fsr,f
  2509  0043  0084               	fcall init_ram0
  2510  0044  120A  158A  20A0  120A  118A  	line	#
  2511                           psect clrtext,class=CODE,delta=2
  2512                           global clear_ram0
  2513                           ;	Called with FSR containing the base address, and
  2514                           ;	W with the last address+1
  2515                           clear_ram0:
  2516  17E1                     	clrwdt			;clear the watchdog before getting into this loop
  2517  17E1  0064               clrloop0:
  2518  17E2                     	clrf	indf		;clear RAM location pointed to by FSR
  2519  17E2  0180               	incf	fsr,f		;increment pointer
  2520  17E3  0A84               	xorwf	fsr,w		;XOR with final address
  2521  17E4  0604               	btfsc	status,2	;have we reached the end yet?
  2522  17E5  1903               	retlw	0		;all done for this memory range, return
  2523  17E6  3400               	xorwf	fsr,w		;XOR again to restore value
  2524  17E7  0604               	goto	clrloop0		;do the next byte
  2525  17E8  2FE2               
  2526                           ; Clear objects allocated to BANK1
  2527                           psect cinit,class=CODE,delta=2,merge=1
  2528                           	bsf	status, 5	;RP0=1, select bank1
  2529  0049  1683               	bcf	status, 6	;RP1=0, select bank1
  2530  004A  1303               	clrf	((__pbssBANK1)+0)&07Fh
  2531  004B  01E8               	clrf	((__pbssBANK1)+1)&07Fh
  2532  004C  01E9               	clrf	((__pbssBANK1)+2)&07Fh
  2533  004D  01EA               	clrf	((__pbssBANK1)+3)&07Fh
  2534  004E  01EB               ; Clear objects allocated to BANK0
  2535                           psect cinit,class=CODE,delta=2,merge=1
  2536                           	movlw	low(__pbssBANK0)
  2537  004F  3041               	movwf	fsr
  2538  0050  0084               	movlw	low((__pbssBANK0)+010h)
  2539  0051  3051               	fcall	clear_ram0
  2540  0052  160A  118A  27E1  120A  118A  ; Clear objects allocated to COMMON
  2541                           psect cinit,class=CODE,delta=2,merge=1
  2542                           	clrf	((__pbssCOMMON)+0)&07Fh
  2543  0057  01FA               	clrf	((__pbssCOMMON)+1)&07Fh
  2544  0058  01FB               	clrf	((__pbssCOMMON)+2)&07Fh
  2545  0059  01FC               	clrf	((__pbssCOMMON)+3)&07Fh
  2546  005A  01FD               psect cinit,class=CODE,delta=2,merge=1
  2547                           global end_of_initialization,__end_of__initialization
  2548                           
  2549                           ;End of C runtime variable initialization code
  2550                           
  2551                           end_of_initialization:
  2552  005B                     __end_of__initialization:
  2553  005B                     clrf status
  2554  005B  0183               ljmp _main	;jump to C main() function
  2555  005C  120A  118A  285F   psect	cstackBANK3,class=BANK3,space=1,noexec
  2556                           global __pcstackBANK3
  2557                           __pcstackBANK3:
  2558  01BB                     	global	main@senha
  2559                           main@senha:	; 6 bytes @ 0x0
  2560  01BB                     	ds	6
  2561  01BB                     	global	main@uidAsci
  2562                           main@uidAsci:	; 13 bytes @ 0x6
  2563  01C1                     	ds	13
  2564  01C1                     	global	main@TAG
  2565                           main@TAG:	; 5 bytes @ 0x13
  2566  01CE                     	ds	5
  2567  01CE                     	global	main@UID
  2568                           main@UID:	; 7 bytes @ 0x18
  2569  01D3                     	ds	7
  2570  01D3                     	global	main@perigo
  2571                           main@perigo:	; 2 bytes @ 0x1F
  2572  01DA                     	ds	2
  2573  01DA                     	global	main@uid
  2574                           main@uid:	; 1 bytes @ 0x21
  2575  01DC                     	ds	1
  2576  01DC                     	global	main@state
  2577                           main@state:	; 1 bytes @ 0x22
  2578  01DD                     	ds	1
  2579  01DD                     psect	cstackBANK1,class=BANK1,space=1,noexec
  2580                           global __pcstackBANK1
  2581                           __pcstackBANK1:
  2582  00A0                     ??_spi_hardware_disable:	; 1 bytes @ 0x0
  2583  00A0                     ??_spiSoftIniciar:	; 1 bytes @ 0x0
  2584  00A0                     ??_sensors_init:	; 1 bytes @ 0x0
  2585  00A0                     ??_tmr_tick_init:	; 1 bytes @ 0x0
  2586  00A0                     ?_delay_ms:	; 1 bytes @ 0x0
  2587  00A0                     ?_hex2Ascii:	; 1 bytes @ 0x0
  2588  00A0                     ?_tag_false:	; 1 bytes @ 0x0
  2589  00A0                     ??_uts_trigger:	; 1 bytes @ 0x0
  2590  00A0                     ?_spiSoftTxCmd:	; 1 bytes @ 0x0
  2591  00A0                     ??_spiSoftRxDat:	; 1 bytes @ 0x0
  2592  00A0                     ??_spiSoftTxDat:	; 1 bytes @ 0x0
  2593  00A0                     ??_lcd_inst:	; 1 bytes @ 0x0
  2594  00A0                     ??_lcd_data:	; 1 bytes @ 0x0
  2595  00A0                     ??_spiSoftClk:	; 1 bytes @ 0x0
  2596  00A0                     	global	tag_false@p2
  2597                           tag_false@p2:	; 1 bytes @ 0x0
  2598  00A0                     	global	spiSoftTxCmd@oper
  2599                           spiSoftTxCmd@oper:	; 1 bytes @ 0x0
  2600  00A0                     	global	delay_ms@t
  2601                           delay_ms@t:	; 2 bytes @ 0x0
  2602  00A0                     	global	hex2Ascii@strIn
  2603                           hex2Ascii@strIn:	; 2 bytes @ 0x0
  2604  00A0                     	ds	1
  2605  00A0                     ??_tag_false:	; 1 bytes @ 0x1
  2606  00A1                     ??_spiSoftTxCmd:	; 1 bytes @ 0x1
  2607  00A1                     	ds	1
  2608  00A1                     ??_delay_ms:	; 1 bytes @ 0x2
  2609  00A2                     	global	lcd_inst@i
  2610                           lcd_inst@i:	; 1 bytes @ 0x2
  2611  00A2                     	global	lcd_data@d
  2612                           lcd_data@d:	; 1 bytes @ 0x2
  2613  00A2                     	global	hex2Ascii@strOut
  2614                           hex2Ascii@strOut:	; 1 bytes @ 0x2
  2615  00A2                     	global	spiSoftTxDat@dado
  2616                           spiSoftTxDat@dado:	; 1 bytes @ 0x2
  2617  00A2                     	global	spiSoftRxDat@rc
  2618                           spiSoftRxDat@rc:	; 1 bytes @ 0x2
  2619  00A2                     	ds	1
  2620  00A2                     ??_lcd_init:	; 1 bytes @ 0x3
  2621  00A3                     ??_lcd_clr:	; 1 bytes @ 0x3
  2622  00A3                     ?_lcd_lincol:	; 1 bytes @ 0x3
  2623  00A3                     	global	lcd_lincol@col
  2624                           lcd_lincol@col:	; 1 bytes @ 0x3
  2625  00A3                     	global	hex2Ascii@cntDig
  2626                           hex2Ascii@cntDig:	; 1 bytes @ 0x3
  2627  00A3                     	global	spiSoftTxCmd@end
  2628                           spiSoftTxCmd@end:	; 1 bytes @ 0x3
  2629  00A3                     	global	spiSoftTxDat@reg
  2630                           spiSoftTxDat@reg:	; 1 bytes @ 0x3
  2631  00A3                     	global	spiSoftRxDat@a
  2632                           spiSoftRxDat@a:	; 1 bytes @ 0x3
  2633  00A3                     	ds	1
  2634  00A3                     ??_hex2Ascii:	; 1 bytes @ 0x4
  2635  00A4                     ??_prs_detect:	; 1 bytes @ 0x4
  2636  00A4                     ??_lcd_lincol:	; 1 bytes @ 0x4
  2637  00A4                     	global	tag_false@p1
  2638                           tag_false@p1:	; 1 bytes @ 0x4
  2639  00A4                     	global	spiSoftTxCmd@a
  2640                           spiSoftTxCmd@a:	; 1 bytes @ 0x4
  2641  00A4                     	global	spiSoftTxDat@a
  2642                           spiSoftTxDat@a:	; 1 bytes @ 0x4
  2643  00A4                     	ds	1
  2644  00A4                     ??_MFRC522_Rd:	; 1 bytes @ 0x5
  2645  00A5                     	global	lcd_lincol@lin
  2646                           lcd_lincol@lin:	; 1 bytes @ 0x5
  2647  00A5                     	global	tag_false@ret
  2648                           tag_false@ret:	; 1 bytes @ 0x5
  2649  00A5                     	global	spiSoftTxCmd@reg
  2650                           spiSoftTxCmd@reg:	; 1 bytes @ 0x5
  2651  00A5                     	ds	1
  2652  00A5                     ?_lcd_print:	; 1 bytes @ 0x6
  2653  00A6                     ?_mfrc522ClrBit:	; 1 bytes @ 0x6
  2654  00A6                     ?_mfrc522SetBit:	; 1 bytes @ 0x6
  2655  00A6                     ??_mfrc522Rst:	; 1 bytes @ 0x6
  2656  00A6                     	global	lcd_print@col
  2657                           lcd_print@col:	; 1 bytes @ 0x6
  2658  00A6                     	global	mfrc522ClrBit@mascara
  2659                           mfrc522ClrBit@mascara:	; 1 bytes @ 0x6
  2660  00A6                     	global	mfrc522SetBit@mascara
  2661                           mfrc522SetBit@mascara:	; 1 bytes @ 0x6
  2662  00A6                     	global	MFRC522_Rd@addr
  2663                           MFRC522_Rd@addr:	; 1 bytes @ 0x6
  2664  00A6                     	global	tag_false@i
  2665                           tag_false@i:	; 1 bytes @ 0x6
  2666  00A6                     	ds	1
  2667  00A6                     ??_mfrc522ClrBit:	; 1 bytes @ 0x7
  2668  00A7                     ??_mfrc522SetBit:	; 1 bytes @ 0x7
  2669  00A7                     	global	MFRC522_Rd@value
  2670                           MFRC522_Rd@value:	; 1 bytes @ 0x7
  2671  00A7                     	global	lcd_print@str
  2672                           lcd_print@str:	; 2 bytes @ 0x7
  2673  00A7                     	ds	1
  2674  00A7                     ?_MFRC522_Wr:	; 1 bytes @ 0x8
  2675  00A8                     	global	mfrc522ClrBit@end
  2676                           mfrc522ClrBit@end:	; 1 bytes @ 0x8
  2677  00A8                     	global	mfrc522SetBit@end
  2678                           mfrc522SetBit@end:	; 1 bytes @ 0x8
  2679  00A8                     	global	MFRC522_Wr@value
  2680                           MFRC522_Wr@value:	; 1 bytes @ 0x8
  2681  00A8                     	global	hex2Ascii@b
  2682                           hex2Ascii@b:	; 1 bytes @ 0x8
  2683  00A8                     	ds	1
  2684  00A8                     ??_lcd_print:	; 1 bytes @ 0x9
  2685  00A9                     ??_MFRC522_Wr:	; 1 bytes @ 0x9
  2686  00A9                     	global	mfrc522ClrBit@lido
  2687                           mfrc522ClrBit@lido:	; 1 bytes @ 0x9
  2688  00A9                     	global	mfrc522SetBit@lido
  2689                           mfrc522SetBit@lido:	; 1 bytes @ 0x9
  2690  00A9                     	global	hex2Ascii@a
  2691                           hex2Ascii@a:	; 1 bytes @ 0x9
  2692  00A9                     	ds	1
  2693  00A9                     ??_mfrc522AntOn:	; 1 bytes @ 0xA
  2694  00AA                     ?_tagTxCmd:	; 1 bytes @ 0xA
  2695  00AA                     	global	lcd_print@pos
  2696                           lcd_print@pos:	; 1 bytes @ 0xA
  2697  00AA                     	global	MFRC522_Wr@addr
  2698                           MFRC522_Wr@addr:	; 1 bytes @ 0xA
  2699  00AA                     	global	hex2Ascii@uni
  2700                           hex2Ascii@uni:	; 1 bytes @ 0xA
  2701  00AA                     	global	tagTxCmd@data
  2702                           tagTxCmd@data:	; 2 bytes @ 0xA
  2703  00AA                     	ds	1
  2704  00AA                     ??_mfrc522Iniciar:	; 1 bytes @ 0xB
  2705  00AB                     ?_MFRC522_Clear_Bit:	; 1 bytes @ 0xB
  2706  00AB                     ?_MFRC522_Set_Bit:	; 1 bytes @ 0xB
  2707  00AB                     	global	lcd_print@lin
  2708                           lcd_print@lin:	; 1 bytes @ 0xB
  2709  00AB                     	global	MFRC522_Clear_Bit@mask
  2710                           MFRC522_Clear_Bit@mask:	; 1 bytes @ 0xB
  2711  00AB                     	global	MFRC522_Set_Bit@mask
  2712                           MFRC522_Set_Bit@mask:	; 1 bytes @ 0xB
  2713  00AB                     	global	hex2Ascii@dez
  2714                           hex2Ascii@dez:	; 1 bytes @ 0xB
  2715  00AB                     	ds	1
  2716  00AB                     ??_MFRC522_Clear_Bit:	; 1 bytes @ 0xC
  2717  00AC                     ??_MFRC522_Set_Bit:	; 1 bytes @ 0xC
  2718  00AC                     	global	tagTxCmd@dlen
  2719                           tagTxCmd@dlen:	; 1 bytes @ 0xC
  2720  00AC                     	ds	1
  2721  00AC                     	global	MFRC522_Set_Bit@addr
  2722                           MFRC522_Set_Bit@addr:	; 1 bytes @ 0xD
  2723  00AD                     	global	tagTxCmd@result
  2724                           tagTxCmd@result:	; 2 bytes @ 0xD
  2725  00AD                     	ds	1
  2726  00AD                     	global	MFRC522_Clear_Bit@addr
  2727                           MFRC522_Clear_Bit@addr:	; 1 bytes @ 0xE
  2728  00AE                     	ds	1
  2729  00AE                     ?_MFRC522_ToCard:	; 1 bytes @ 0xF
  2730  00AF                     	global	tagTxCmd@rlen
  2731                           tagTxCmd@rlen:	; 1 bytes @ 0xF
  2732  00AF                     	global	MFRC522_ToCard@sendData
  2733                           MFRC522_ToCard@sendData:	; 2 bytes @ 0xF
  2734  00AF                     	ds	1
  2735  00AF                     ??_tagTxCmd:	; 1 bytes @ 0x10
  2736  00B0                     	ds	1
  2737  00B0                     	global	MFRC522_ToCard@sendLen
  2738                           MFRC522_ToCard@sendLen:	; 1 bytes @ 0x11
  2739  00B1                     	ds	1
  2740  00B1                     	global	MFRC522_ToCard@backData
  2741                           MFRC522_ToCard@backData:	; 2 bytes @ 0x12
  2742  00B2                     	ds	1
  2743  00B2                     	global	tagTxCmd@waitIRq
  2744                           tagTxCmd@waitIRq:	; 1 bytes @ 0x13
  2745  00B3                     	ds	1
  2746  00B3                     	global	tagTxCmd@status
  2747                           tagTxCmd@status:	; 1 bytes @ 0x14
  2748  00B4                     	global	MFRC522_ToCard@backLen
  2749                           MFRC522_ToCard@backLen:	; 1 bytes @ 0x14
  2750  00B4                     	ds	1
  2751  00B4                     ??_MFRC522_ToCard:	; 1 bytes @ 0x15
  2752  00B5                     	global	tagTxCmd@a
  2753                           tagTxCmd@a:	; 1 bytes @ 0x15
  2754  00B5                     	ds	1
  2755  00B5                     	global	tagTxCmd@irqEn
  2756                           tagTxCmd@irqEn:	; 1 bytes @ 0x16
  2757  00B6                     	ds	1
  2758  00B6                     	global	tagTxCmd@lastBits
  2759                           tagTxCmd@lastBits:	; 1 bytes @ 0x17
  2760  00B7                     	ds	1
  2761  00B7                     	global	tagTxCmd@cmd
  2762                           tagTxCmd@cmd:	; 1 bytes @ 0x18
  2763  00B8                     	global	MFRC522_ToCard@irqEn
  2764                           MFRC522_ToCard@irqEn:	; 1 bytes @ 0x18
  2765  00B8                     	ds	1
  2766  00B8                     	global	tagTxCmd@i
  2767                           tagTxCmd@i:	; 1 bytes @ 0x19
  2768  00B9                     	global	MFRC522_ToCard@waitIRq
  2769                           MFRC522_ToCard@waitIRq:	; 1 bytes @ 0x19
  2770  00B9                     	ds	1
  2771  00B9                     	global	tagTxCmd@n
  2772                           tagTxCmd@n:	; 1 bytes @ 0x1A
  2773  00BA                     	global	MFRC522_ToCard@_status
  2774                           MFRC522_ToCard@_status:	; 1 bytes @ 0x1A
  2775  00BA                     	ds	1
  2776  00BA                     ?_procura_tag:	; 1 bytes @ 0x1B
  2777  00BB                     	global	MFRC522_ToCard@lastBits
  2778                           MFRC522_ToCard@lastBits:	; 1 bytes @ 0x1B
  2779  00BB                     	global	procura_tag@data
  2780                           procura_tag@data:	; 2 bytes @ 0x1B
  2781  00BB                     	ds	1
  2782  00BB                     	global	MFRC522_ToCard@command
  2783                           MFRC522_ToCard@command:	; 1 bytes @ 0x1C
  2784  00BC                     	ds	1
  2785  00BC                     ??_procura_tag:	; 1 bytes @ 0x1D
  2786  00BD                     	global	MFRC522_ToCard@i
  2787                           MFRC522_ToCard@i:	; 2 bytes @ 0x1D
  2788  00BD                     	ds	2
  2789  00BD                     	global	procura_tag@modo
  2790                           procura_tag@modo:	; 1 bytes @ 0x1F
  2791  00BF                     	global	MFRC522_ToCard@n
  2792                           MFRC522_ToCard@n:	; 1 bytes @ 0x1F
  2793  00BF                     	ds	1
  2794  00BF                     ?_MFRC522_AntiColl:	; 1 bytes @ 0x20
  2795  00C0                     	global	procura_tag@status
  2796                           procura_tag@status:	; 1 bytes @ 0x20
  2797  00C0                     	global	MFRC522_AntiColl@serNum
  2798                           MFRC522_AntiColl@serNum:	; 2 bytes @ 0x20
  2799  00C0                     	ds	1
  2800  00C0                     	global	procura_tag@len
  2801                           procura_tag@len:	; 1 bytes @ 0x21
  2802  00C1                     	ds	1
  2803  00C1                     ??_MFRC522_AntiColl:	; 1 bytes @ 0x22
  2804  00C2                     	ds	5
  2805  00C2                     	global	MFRC522_AntiColl@serNumCheck
  2806                           MFRC522_AntiColl@serNumCheck:	; 1 bytes @ 0x27
  2807  00C7                     	ds	1
  2808  00C7                     	global	MFRC522_AntiColl@unLen
  2809                           MFRC522_AntiColl@unLen:	; 1 bytes @ 0x28
  2810  00C8                     	ds	1
  2811  00C8                     	global	MFRC522_AntiColl@_status
  2812                           MFRC522_AntiColl@_status:	; 1 bytes @ 0x29
  2813  00C9                     	ds	1
  2814  00C9                     	global	MFRC522_AntiColl@i
  2815                           MFRC522_AntiColl@i:	; 1 bytes @ 0x2A
  2816  00CA                     	ds	1
  2817  00CA                     ??_main:	; 1 bytes @ 0x2B
  2818  00CB                     	ds	4
  2819  00CB                     psect	cstackCOMMON,class=COMMON,space=1,noexec
  2820                           global __pcstackCOMMON
  2821                           __pcstackCOMMON:
  2822  0070                     ?_spi_hardware_disable:	; 1 bytes @ 0x0
  2823  0070                     ?_spiSoftIniciar:	; 1 bytes @ 0x0
  2824  0070                     ?_mfrc522Iniciar:	; 1 bytes @ 0x0
  2825  0070                     ?_lcd_init:	; 1 bytes @ 0x0
  2826  0070                     ?_sensors_init:	; 1 bytes @ 0x0
  2827  0070                     ?_tmr_tick_init:	; 1 bytes @ 0x0
  2828  0070                     ?_lcd_clr:	; 1 bytes @ 0x0
  2829  0070                     ?_uts_trigger:	; 1 bytes @ 0x0
  2830  0070                     ?_prs_detect:	; 1 bytes @ 0x0
  2831  0070                     ?_tmr_tick_int:	; 1 bytes @ 0x0
  2832  0070                     ??_tmr_tick_int:	; 1 bytes @ 0x0
  2833  0070                     ?_spiSoftRxDat:	; 1 bytes @ 0x0
  2834  0070                     ?_spiSoftTxDat:	; 1 bytes @ 0x0
  2835  0070                     ?_main:	; 1 bytes @ 0x0
  2836  0070                     ?_lcd_inst:	; 1 bytes @ 0x0
  2837  0070                     ?_lcd_data:	; 1 bytes @ 0x0
  2838  0070                     ?_isr:	; 1 bytes @ 0x0
  2839  0070                     ?_mfrc522AntOn:	; 1 bytes @ 0x0
  2840  0070                     ?_mfrc522Rst:	; 1 bytes @ 0x0
  2841  0070                     ?_MFRC522_Rd:	; 1 bytes @ 0x0
  2842  0070                     ?_spiSoftClk:	; 1 bytes @ 0x0
  2843  0070                     	global	?___lmul
  2844                           ?___lmul:	; 4 bytes @ 0x0
  2845  0070                     	global	___lmul@multiplier
  2846                           ___lmul@multiplier:	; 4 bytes @ 0x0
  2847  0070                     	ds	3
  2848  0070                     	global	tmr_tick_int@i
  2849                           tmr_tick_int@i:	; 1 bytes @ 0x3
  2850  0073                     	ds	1
  2851  0073                     	global	___lmul@multiplicand
  2852                           ___lmul@multiplicand:	; 4 bytes @ 0x4
  2853  0074                     	ds	4
  2854  0074                     ??___lmul:	; 1 bytes @ 0x8
  2855  0078                     	ds	1
  2856  0078                     ??___aldiv:	; 1 bytes @ 0x9
  2857  0079                     	ds	1
  2858  0079                     psect	cstackBANK0,class=BANK0,space=1,noexec
  2859                           global __pcstackBANK0
  2860                           __pcstackBANK0:
  2861  0020                     	global	___lmul@product
  2862                           ___lmul@product:	; 4 bytes @ 0x0
  2863  0020                     	ds	4
  2864  0020                     	global	?___aldiv
  2865                           ?___aldiv:	; 4 bytes @ 0x4
  2866  0024                     	global	___aldiv@divisor
  2867                           ___aldiv@divisor:	; 4 bytes @ 0x4
  2868  0024                     	ds	4
  2869  0024                     	global	___aldiv@dividend
  2870                           ___aldiv@dividend:	; 4 bytes @ 0x8
  2871  0028                     	ds	4
  2872  0028                     	global	___aldiv@counter
  2873                           ___aldiv@counter:	; 1 bytes @ 0xC
  2874  002C                     	ds	1
  2875  002C                     	global	___aldiv@sign
  2876                           ___aldiv@sign:	; 1 bytes @ 0xD
  2877  002D                     	ds	1
  2878  002D                     	global	___aldiv@quotient
  2879                           ___aldiv@quotient:	; 4 bytes @ 0xE
  2880  002E                     	ds	4
  2881  002E                     ??_isr:	; 1 bytes @ 0x12
  2882  0032                     	ds	7
  2883  0032                     	global	_isr$1614
  2884                           _isr$1614:	; 4 bytes @ 0x19
  2885  0039                     	ds	4
  2886  0039                     	global	_isr$1615
  2887                           _isr$1615:	; 4 bytes @ 0x1D
  2888  003D                     	ds	4
  2889  003D                     ;!
  2890                           ;!Data Sizes:
  2891                           ;!    Strings     100
  2892                           ;!    Constant    2
  2893                           ;!    Data        128
  2894                           ;!    BSS         24
  2895                           ;!    Persistent  0
  2896                           ;!    Stack       0
  2897                           ;!
  2898                           ;!Auto Spaces:
  2899                           ;!    Space          Size  Autos    Used
  2900                           ;!    COMMON           14     10      14
  2901                           ;!    BANK0            80     33      54
  2902                           ;!    BANK1            80     47      76
  2903                           ;!    BANK3            96     35      78
  2904                           ;!    BANK2            96      0      55
  2905                           
  2906                           ;!
  2907                           ;!Pointer List with Targets:
  2908                           ;!
  2909                           ;!    sp__rfid_display_wait	PTR void  size(1) Largest target is 2
  2910                           ;!		 -> rfid_display_wait(), rfid_read(), 
  2911                           ;!
  2912                           ;!    sp__rfid_display	PTR void  size(1) Largest target is 2
  2913                           ;!		 -> rfid_display(), rfid_read(), 
  2914                           ;!
  2915                           ;!    sp__rfid_read_wait	PTR void  size(1) Largest target is 2
  2916                           ;!		 -> rfid_read_wait(), rfid_display(), 
  2917                           ;!
  2918                           ;!    sp__rfid_read	PTR void  size(1) Largest target is 2
  2919                           ;!		 -> rfid_display(), rfid_read(), 
  2920                           ;!
  2921                           ;!    hex2Ascii@strOut	PTR unsigned char  size(1) Largest target is 13
  2922                           ;!		 -> uidAsci(BANK3[13]), main@uidAsci(BANK3[13]), 
  2923                           ;!
  2924                           ;!    hex2Ascii@strIn	PTR unsigned char  size(2) Largest target is 7
  2925                           ;!		 -> UID(BANK1[7]), main@UID(BANK3[7]), 
  2926                           ;!
  2927                           ;!    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 7
  2928                           ;!		 -> UID(BANK1[7]), main@UID(BANK3[7]), 
  2929                           ;!
  2930                           ;!    tag_false@p2	PTR unsigned char  size(1) Largest target is 6
  2931                           ;!		 -> main@senha(BANK3[6]), 
  2932                           ;!
  2933                           ;!    tag_false@p1	PTR unsigned char  size(1) Largest target is 7
  2934                           ;!		 -> main@UID(BANK3[7]), 
  2935                           ;!
  2936                           ;!    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 7
  2937                           ;!		 -> UID(BANK1[7]), main@UID(BANK3[7]), 
  2938                           ;!
  2939                           ;!    MFRC522_ToCard@backLen	PTR unsigned char  size(1) Largest target is 1
  2940                           ;!		 -> MFRC522_AntiColl@unLen(BANK1[1]), 
  2941                           ;!
  2942                           ;!    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 7
  2943                           ;!		 -> UID(BANK1[7]), main@UID(BANK3[7]), 
  2944                           ;!
  2945                           ;!    procura_tag@data	PTR unsigned char  size(2) Largest target is 5
  2946                           ;!		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 
  2947                           ;!
  2948                           ;!    tagTxCmd@result	PTR unsigned char  size(2) Largest target is 5
  2949                           ;!		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 
  2950                           ;!
  2951                           ;!    tagTxCmd@rlen	PTR unsigned char  size(1) Largest target is 1
  2952                           ;!		 -> procura_tag@len(BANK1[1]), 
  2953                           ;!
  2954                           ;!    tagTxCmd@data	PTR unsigned char  size(2) Largest target is 5
  2955                           ;!		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 
  2956                           ;!
  2957                           ;!    lcd_print@str	PTR const unsigned char  size(2) Largest target is 16
  2958                           ;!		 -> uidAsci(BANK3[13]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[6]), 
  2959                           ;!		 -> STR_12(CODE[9]), STR_11(CODE[8]), STR_10(CODE[7]), STR_9(CODE[7]), 
  2960                           ;!		 -> STR_8(CODE[16]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[6]), 
  2961                           ;!		 -> STR_4(CODE[7]), STR_3(CODE[10]), STR_2(CODE[7]), STR_1(CODE[11]), 
  2962                           ;!		 -> main@uidAsci(BANK3[13]), 
  2963                           ;!
  2964                           
  2965                           
  2966                           ;!
  2967                           ;!Critical Paths under _main in COMMON
  2968                           ;!
  2969                           ;!    None.
  2970                           ;!
  2971                           ;!Critical Paths under _isr in COMMON
  2972                           ;!
  2973                           ;!    _isr->___aldiv
  2974                           ;!    ___aldiv->___lmul
  2975                           ;!
  2976                           ;!Critical Paths under _main in BANK0
  2977                           ;!
  2978                           ;!    None.
  2979                           ;!
  2980                           ;!Critical Paths under _isr in BANK0
  2981                           ;!
  2982                           ;!    _isr->___aldiv
  2983                           ;!    ___aldiv->___lmul
  2984                           ;!
  2985                           ;!Critical Paths under _main in BANK1
  2986                           ;!
  2987                           ;!    _main->_MFRC522_AntiColl
  2988                           ;!    _prs_detect->_delay_ms
  2989                           ;!    _procura_tag->_tagTxCmd
  2990                           ;!    _tagTxCmd->_mfrc522ClrBit
  2991                           ;!    _tagTxCmd->_mfrc522SetBit
  2992                           ;!    _mfrc522ClrBit->_spiSoftTxCmd
  2993                           ;!    _mfrc522Iniciar->_mfrc522AntOn
  2994                           ;!    _mfrc522Rst->_spiSoftTxCmd
  2995                           ;!    _mfrc522AntOn->_mfrc522SetBit
  2996                           ;!    _mfrc522SetBit->_spiSoftTxCmd
  2997                           ;!    _lcd_print->_lcd_lincol
  2998                           ;!    _lcd_lincol->_lcd_inst
  2999                           ;!    _lcd_init->_lcd_inst
  3000                           ;!    _lcd_clr->_lcd_inst
  3001                           ;!    _MFRC522_AntiColl->_MFRC522_ToCard
  3002                           ;!    _MFRC522_ToCard->_MFRC522_Clear_Bit
  3003                           ;!    _MFRC522_Set_Bit->_MFRC522_Wr
  3004                           ;!    _MFRC522_Clear_Bit->_MFRC522_Wr
  3005                           ;!    _MFRC522_Wr->_MFRC522_Rd
  3006                           ;!    _MFRC522_Rd->_spiSoftTxDat
  3007                           ;!
  3008                           ;!Critical Paths under _isr in BANK1
  3009                           ;!
  3010                           ;!    None.
  3011                           ;!
  3012                           ;!Critical Paths under _main in BANK3
  3013                           ;!
  3014                           ;!    None.
  3015                           ;!
  3016                           ;!Critical Paths under _isr in BANK3
  3017                           ;!
  3018                           ;!    None.
  3019                           ;!
  3020                           ;!Critical Paths under _main in BANK2
  3021                           ;!
  3022                           ;!    None.
  3023                           ;!
  3024                           ;!Critical Paths under _isr in BANK2
  3025                           ;!
  3026                           ;!    None.
  3027                           
  3028 ;;
  3029 ;;Main: autosize = 0, tempsize = 4, incstack = 0, save=0
  3030 ;;
  3031                           
  3032                           ;!
  3033                           ;!Call Graph Tables:
  3034                           ;!
  3035                           ;! ---------------------------------------------------------------------------------
  3036                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3037                           ;! ---------------------------------------------------------------------------------
  3038                           ;! (0) _main                                                39    39      0   36503
  3039                           ;!                                             43 BANK1      4     4      0
  3040                           ;!                                              0 BANK3     35    35      0
  3041                           ;!                   _MFRC522_AntiColl
  3042                           ;!                           _delay_ms
  3043                           ;!                          _hex2Ascii
  3044                           ;!                            _lcd_clr
  3045                           ;!                           _lcd_init
  3046                           ;!                          _lcd_print
  3047                           ;!                     _mfrc522Iniciar
  3048                           ;!                        _procura_tag
  3049                           ;!                         _prs_detect
  3050                           ;!                       _sensors_init
  3051                           ;!                     _spiSoftIniciar
  3052                           ;!               _spi_hardware_disable
  3053                           ;!                          _tag_false
  3054                           ;!                      _tmr_tick_init
  3055                           ;!                        _uts_trigger
  3056                           ;! ---------------------------------------------------------------------------------
  3057                           ;! (1) _uts_trigger                                          1     1      0       0
  3058                           ;!                                              0 BANK1      1     1      0
  3059                           ;! ---------------------------------------------------------------------------------
  3060                           ;! (1) _tmr_tick_init                                        0     0      0       0
  3061                           ;! ---------------------------------------------------------------------------------
  3062                           ;! (1) _tag_false                                            7     6      1     355
  3063                           ;!                                              0 BANK1      7     6      1
  3064                           ;! ---------------------------------------------------------------------------------
  3065                           ;! (1) _spi_hardware_disable                                 0     0      0       0
  3066                           ;! ---------------------------------------------------------------------------------
  3067                           ;! (1) _spiSoftIniciar                                       2     2      0       0
  3068                           ;!                                              0 BANK1      2     2      0
  3069                           ;! ---------------------------------------------------------------------------------
  3070                           ;! (1) _sensors_init                                         0     0      0       0
  3071                           ;! ---------------------------------------------------------------------------------
  3072                           ;! (1) _prs_detect                                           0     0      0     574
  3073                           ;!                           _delay_ms
  3074                           ;! ---------------------------------------------------------------------------------
  3075                           ;! (2) _delay_ms                                             4     2      2     574
  3076                           ;!                                              0 BANK1      4     2      2
  3077                           ;! ---------------------------------------------------------------------------------
  3078                           ;! (1) _procura_tag                                          7     5      2   13018
  3079                           ;!                                             27 BANK1      7     5      2
  3080                           ;!                       _spiSoftTxCmd
  3081                           ;!                       _spiSoftTxDat
  3082                           ;!                           _tagTxCmd
  3083                           ;! ---------------------------------------------------------------------------------
  3084                           ;! (2) _tagTxCmd                                            17    11      6   10145
  3085                           ;!                                             10 BANK1     17    11      6
  3086                           ;!                      _mfrc522ClrBit
  3087                           ;!                      _mfrc522SetBit
  3088                           ;!                       _spiSoftRxDat
  3089                           ;!                       _spiSoftTxCmd
  3090                           ;!                       _spiSoftTxDat
  3091                           ;! ---------------------------------------------------------------------------------
  3092                           ;! (3) _mfrc522ClrBit                                        4     3      1    2800
  3093                           ;!                                              6 BANK1      4     3      1
  3094                           ;!                       _spiSoftRxDat
  3095                           ;!                       _spiSoftTxCmd
  3096                           ;!                       _spiSoftTxDat
  3097                           ;! ---------------------------------------------------------------------------------
  3098                           ;! (1) _mfrc522Iniciar                                       0     0      0    7536
  3099                           ;!                       _mfrc522AntOn
  3100                           ;!                         _mfrc522Rst
  3101                           ;!                       _spiSoftTxCmd
  3102                           ;!                       _spiSoftTxDat
  3103                           ;! ---------------------------------------------------------------------------------
  3104                           ;! (2) _mfrc522Rst                                           0     0      0    2323
  3105                           ;!                       _spiSoftTxCmd
  3106                           ;!                       _spiSoftTxDat
  3107                           ;! ---------------------------------------------------------------------------------
  3108                           ;! (2) _mfrc522AntOn                                         1     1      0    2890
  3109                           ;!                                             10 BANK1      1     1      0
  3110                           ;!                      _mfrc522SetBit
  3111                           ;! ---------------------------------------------------------------------------------
  3112                           ;! (3) _mfrc522SetBit                                        4     3      1    2890
  3113                           ;!                                              6 BANK1      4     3      1
  3114                           ;!                       _spiSoftRxDat
  3115                           ;!                       _spiSoftTxCmd
  3116                           ;!                       _spiSoftTxDat
  3117                           ;! ---------------------------------------------------------------------------------
  3118                           ;! (3) _spiSoftTxCmd                                         6     5      1    2156
  3119                           ;!                                              0 BANK1      6     5      1
  3120                           ;!                         _spiSoftClk
  3121                           ;! ---------------------------------------------------------------------------------
  3122                           ;! (1) _lcd_print                                            6     3      3    3776
  3123                           ;!                                              6 BANK1      6     3      3
  3124                           ;!                           _lcd_data
  3125                           ;!                         _lcd_lincol
  3126                           ;! ---------------------------------------------------------------------------------
  3127                           ;! (2) _lcd_lincol                                           3     2      1     490
  3128                           ;!                                              3 BANK1      3     2      1
  3129                           ;!                           _lcd_inst
  3130                           ;! ---------------------------------------------------------------------------------
  3131                           ;! (2) _lcd_data                                             3     3      0      62
  3132                           ;!                                              0 BANK1      3     3      0
  3133                           ;! ---------------------------------------------------------------------------------
  3134                           ;! (1) _lcd_init                                             3     3      0     248
  3135                           ;!                                              3 BANK1      3     3      0
  3136                           ;!                           _lcd_inst
  3137                           ;! ---------------------------------------------------------------------------------
  3138                           ;! (1) _lcd_clr                                              0     0      0     248
  3139                           ;!                           _lcd_inst
  3140                           ;! ---------------------------------------------------------------------------------
  3141                           ;! (3) _lcd_inst                                             3     3      0     248
  3142                           ;!                                              0 BANK1      3     3      0
  3143                           ;! ---------------------------------------------------------------------------------
  3144                           ;! (1) _hex2Ascii                                           12     8      4    1362
  3145                           ;!                                              0 BANK1     12     8      4
  3146                           ;! ---------------------------------------------------------------------------------
  3147                           ;! (1) _MFRC522_AntiColl                                    11     9      2    8098
  3148                           ;!                                             32 BANK1     11     9      2
  3149                           ;!                  _MFRC522_Clear_Bit
  3150                           ;!                     _MFRC522_ToCard
  3151                           ;!                         _MFRC522_Wr
  3152                           ;! ---------------------------------------------------------------------------------
  3153                           ;! (2) _MFRC522_ToCard                                      17    11      6    5407
  3154                           ;!                                             15 BANK1     17    11      6
  3155                           ;!                  _MFRC522_Clear_Bit
  3156                           ;!                         _MFRC522_Rd
  3157                           ;!                    _MFRC522_Set_Bit
  3158                           ;!                         _MFRC522_Wr
  3159                           ;! ---------------------------------------------------------------------------------
  3160                           ;! (3) _MFRC522_Set_Bit                                      3     2      1    1230
  3161                           ;!                                             11 BANK1      3     2      1
  3162                           ;!                         _MFRC522_Rd
  3163                           ;!                         _MFRC522_Wr
  3164                           ;! ---------------------------------------------------------------------------------
  3165                           ;! (3) _MFRC522_Clear_Bit                                    4     3      1    1320
  3166                           ;!                                             11 BANK1      4     3      1
  3167                           ;!                         _MFRC522_Rd
  3168                           ;!                         _MFRC522_Wr
  3169                           ;! ---------------------------------------------------------------------------------
  3170                           ;! (2) _MFRC522_Wr                                           3     2      1     679
  3171                           ;!                                              8 BANK1      3     2      1
  3172                           ;!                         _MFRC522_Rd (ARG)
  3173                           ;!                       _spiSoftTxDat
  3174                           ;! ---------------------------------------------------------------------------------
  3175                           ;! (4) _MFRC522_Rd                                           3     3      0     368
  3176                           ;!                                              5 BANK1      3     3      0
  3177                           ;!                       _spiSoftRxDat
  3178                           ;!                       _spiSoftTxDat
  3179                           ;! ---------------------------------------------------------------------------------
  3180                           ;! (3) _spiSoftTxDat                                         5     5      0     167
  3181                           ;!                                              0 BANK1      5     5      0
  3182                           ;!                         _spiSoftClk
  3183                           ;! ---------------------------------------------------------------------------------
  3184                           ;! (3) _spiSoftRxDat                                         4     4      0     136
  3185                           ;!                                              0 BANK1      4     4      0
  3186                           ;!                         _spiSoftClk
  3187                           ;! ---------------------------------------------------------------------------------
  3188                           ;! (4) _spiSoftClk                                           0     0      0       0
  3189                           ;! ---------------------------------------------------------------------------------
  3190                           ;! Estimated maximum stack depth 4
  3191                           ;! ---------------------------------------------------------------------------------
  3192                           ;! (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
  3193                           ;! ---------------------------------------------------------------------------------
  3194                           ;! (7) _isr                                                 15    15      0    1207
  3195                           ;!                                             18 BANK0     15    15      0
  3196                           ;!                            ___aldiv
  3197                           ;!                             ___lmul
  3198                           ;!                       _tmr_tick_int
  3199                           ;! ---------------------------------------------------------------------------------
  3200                           ;! (8) _tmr_tick_int                                         4     4      0      90
  3201                           ;!                                              0 COMMON     4     4      0
  3202                           ;! ---------------------------------------------------------------------------------
  3203                           ;! (8) ___lmul                                              13     5      8      36
  3204                           ;!                                              0 COMMON     9     1      8
  3205                           ;!                                              0 BANK0      4     4      0
  3206                           ;! ---------------------------------------------------------------------------------
  3207                           ;! (8) ___aldiv                                             15     7      8     985
  3208                           ;!                                              9 COMMON     1     1      0
  3209                           ;!                                              4 BANK0     14     6      8
  3210                           ;!                             ___lmul (ARG)
  3211                           ;! ---------------------------------------------------------------------------------
  3212                           ;! Estimated maximum stack depth 8
  3213                           ;! ---------------------------------------------------------------------------------
  3214                           ;!
  3215                           ;! Call Graph Graphs:
  3216                           ;!
  3217                           ;! _main (ROOT)
  3218                           ;!   _MFRC522_AntiColl
  3219                           ;!     _MFRC522_Clear_Bit
  3220                           ;!       _MFRC522_Rd
  3221                           ;!         _spiSoftRxDat
  3222                           ;!           _spiSoftClk
  3223                           ;!         _spiSoftTxDat
  3224                           ;!           _spiSoftClk
  3225                           ;!       _MFRC522_Wr
  3226                           ;!         _MFRC522_Rd (ARG)
  3227                           ;!           _spiSoftRxDat
  3228                           ;!             _spiSoftClk
  3229                           ;!           _spiSoftTxDat
  3230                           ;!             _spiSoftClk
  3231                           ;!         _spiSoftTxDat (ARG)
  3232                           ;!           _spiSoftClk
  3233                           ;!     _MFRC522_ToCard
  3234                           ;!       _MFRC522_Clear_Bit
  3235                           ;!         _MFRC522_Rd
  3236                           ;!           _spiSoftRxDat
  3237                           ;!             _spiSoftClk
  3238                           ;!           _spiSoftTxDat
  3239                           ;!             _spiSoftClk
  3240                           ;!         _MFRC522_Wr
  3241                           ;!           _MFRC522_Rd (ARG)
  3242                           ;!             _spiSoftRxDat
  3243                           ;!               _spiSoftClk
  3244                           ;!             _spiSoftTxDat
  3245                           ;!               _spiSoftClk
  3246                           ;!           _spiSoftTxDat (ARG)
  3247                           ;!             _spiSoftClk
  3248                           ;!       _MFRC522_Rd
  3249                           ;!         _spiSoftRxDat
  3250                           ;!           _spiSoftClk
  3251                           ;!         _spiSoftTxDat
  3252                           ;!           _spiSoftClk
  3253                           ;!       _MFRC522_Set_Bit
  3254                           ;!         _MFRC522_Rd
  3255                           ;!           _spiSoftRxDat
  3256                           ;!             _spiSoftClk
  3257                           ;!           _spiSoftTxDat
  3258                           ;!             _spiSoftClk
  3259                           ;!         _MFRC522_Wr
  3260                           ;!           _MFRC522_Rd (ARG)
  3261                           ;!             _spiSoftRxDat
  3262                           ;!               _spiSoftClk
  3263                           ;!             _spiSoftTxDat
  3264                           ;!               _spiSoftClk
  3265                           ;!           _spiSoftTxDat (ARG)
  3266                           ;!             _spiSoftClk
  3267                           ;!       _MFRC522_Wr
  3268                           ;!         _MFRC522_Rd (ARG)
  3269                           ;!           _spiSoftRxDat
  3270                           ;!             _spiSoftClk
  3271                           ;!           _spiSoftTxDat
  3272                           ;!             _spiSoftClk
  3273                           ;!         _spiSoftTxDat (ARG)
  3274                           ;!           _spiSoftClk
  3275                           ;!     _MFRC522_Wr
  3276                           ;!       _MFRC522_Rd (ARG)
  3277                           ;!         _spiSoftRxDat
  3278                           ;!           _spiSoftClk
  3279                           ;!         _spiSoftTxDat
  3280                           ;!           _spiSoftClk
  3281                           ;!       _spiSoftTxDat (ARG)
  3282                           ;!         _spiSoftClk
  3283                           ;!   _delay_ms
  3284                           ;!   _hex2Ascii
  3285                           ;!   _lcd_clr
  3286                           ;!     _lcd_inst
  3287                           ;!   _lcd_init
  3288                           ;!     _lcd_inst
  3289                           ;!   _lcd_print
  3290                           ;!     _lcd_data
  3291                           ;!     _lcd_lincol
  3292                           ;!       _lcd_inst
  3293                           ;!   _mfrc522Iniciar
  3294                           ;!     _mfrc522AntOn
  3295                           ;!       _mfrc522SetBit
  3296                           ;!         _spiSoftRxDat
  3297                           ;!           _spiSoftClk
  3298                           ;!         _spiSoftTxCmd
  3299                           ;!           _spiSoftClk
  3300                           ;!         _spiSoftTxDat
  3301                           ;!           _spiSoftClk
  3302                           ;!     _mfrc522Rst
  3303                           ;!       _spiSoftTxCmd
  3304                           ;!         _spiSoftClk
  3305                           ;!       _spiSoftTxDat
  3306                           ;!         _spiSoftClk
  3307                           ;!     _spiSoftTxCmd
  3308                           ;!       _spiSoftClk
  3309                           ;!     _spiSoftTxDat
  3310                           ;!       _spiSoftClk
  3311                           ;!   _procura_tag
  3312                           ;!     _spiSoftTxCmd
  3313                           ;!       _spiSoftClk
  3314                           ;!     _spiSoftTxDat
  3315                           ;!       _spiSoftClk
  3316                           ;!     _tagTxCmd
  3317                           ;!       _mfrc522ClrBit
  3318                           ;!         _spiSoftRxDat
  3319                           ;!           _spiSoftClk
  3320                           ;!         _spiSoftTxCmd
  3321                           ;!           _spiSoftClk
  3322                           ;!         _spiSoftTxDat
  3323                           ;!           _spiSoftClk
  3324                           ;!       _mfrc522SetBit
  3325                           ;!         _spiSoftRxDat
  3326                           ;!           _spiSoftClk
  3327                           ;!         _spiSoftTxCmd
  3328                           ;!           _spiSoftClk
  3329                           ;!         _spiSoftTxDat
  3330                           ;!           _spiSoftClk
  3331                           ;!       _spiSoftRxDat
  3332                           ;!         _spiSoftClk
  3333                           ;!       _spiSoftTxCmd
  3334                           ;!         _spiSoftClk
  3335                           ;!       _spiSoftTxDat
  3336                           ;!         _spiSoftClk
  3337                           ;!   _prs_detect
  3338                           ;!     _delay_ms
  3339                           ;!   _sensors_init
  3340                           ;!   _spiSoftIniciar
  3341                           ;!   _spi_hardware_disable
  3342                           ;!   _tag_false
  3343                           ;!   _tmr_tick_init
  3344                           ;!   _uts_trigger
  3345                           ;!
  3346                           ;! _isr (ROOT)
  3347                           ;!   ___aldiv
  3348                           ;!     ___lmul (ARG)
  3349                           ;!   ___lmul
  3350                           ;!   _tmr_tick_int
  3351                           ;!
  3352                           
  3353                           ;! Address spaces:
  3354                           
  3355                           ;!Name               Size   Autos  Total    Cost      Usage
  3356                           ;!BANK3               60     23      4E       9       81.3%
  3357                           ;!BITBANK3            60      0       0       8        0.0%
  3358                           ;!SFR3                 0      0       0       4        0.0%
  3359                           ;!BITSFR3              0      0       0       4        0.0%
  3360                           ;!BANK2               60      0      37      11       57.3%
  3361                           ;!BITBANK2            60      0       0      10        0.0%
  3362                           ;!SFR2                 0      0       0       5        0.0%
  3363                           ;!BITSFR2              0      0       0       5        0.0%
  3364                           ;!BANK1               50     2F      4C       7       95.0%
  3365                           ;!BITBANK1            50      0       0       6        0.0%
  3366                           ;!SFR1                 0      0       0       2        0.0%
  3367                           ;!BITSFR1              0      0       0       2        0.0%
  3368                           ;!BANK0               50     21      36       5       67.5%
  3369                           ;!BITBANK0            50      0       0       4        0.0%
  3370                           ;!SFR0                 0      0       0       1        0.0%
  3371                           ;!BITSFR0              0      0       0       1        0.0%
  3372                           ;!COMMON               E      A       E       1      100.0%
  3373                           ;!BITCOMMON            E      0       0       0        0.0%
  3374                           ;!CODE                 0      0       0       0        0.0%
  3375                           ;!DATA                 0      0     115      12        0.0%
  3376                           ;!ABS                  0      0     115       3        0.0%
  3377                           ;!NULL                 0      0       0       0        0.0%
  3378                           ;!STACK                0      0       0       2        0.0%
  3379                           ;!EEDATA             100      0       0       0        0.0%
  3380                           
  3381                           	global	_main
  3382                           
  3383 ;; *************** function _main *****************
  3384 ;; Defined at:
  3385 ;;		line 24 in file "main.c"
  3386 ;; Parameters:    Size  Location     Type
  3387 ;;		None
  3388 ;; Auto vars:     Size  Location     Type
  3389 ;;  uidAsci        13    6[BANK3 ] unsigned char [13]
  3390 ;;  UID             7   24[BANK3 ] unsigned char [7]
  3391 ;;  senha           6    0[BANK3 ] unsigned char [6]
  3392 ;;  TAG             5   19[BANK3 ] unsigned char [5]
  3393 ;;  perigo          2   31[BANK3 ] int 
  3394 ;;  state           1   34[BANK3 ] unsigned char 
  3395 ;;  uid             1   33[BANK3 ] unsigned char 
  3396 ;; Return value:  Size  Location     Type
  3397 ;;                  1    wreg      void 
  3398 ;; Registers used:
  3399 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  3400 ;; Tracked objects:
  3401 ;;		On entry : B00/0
  3402 ;;		On exit  : 0/0
  3403 ;;		Unchanged: 0/0
  3404 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  3405 ;;      Params:         0       0       0       0       0
  3406 ;;      Locals:         0       0       0      35       0
  3407 ;;      Temps:          0       0       4       0       0
  3408 ;;      Totals:         0       0       4      35       0
  3409 ;;Total ram usage:       39 bytes
  3410 ;; Hardware stack levels required when called:    8
  3411 ;; This function calls:
  3412 ;;		_MFRC522_AntiColl
  3413 ;;		_delay_ms
  3414 ;;		_hex2Ascii
  3415 ;;		_lcd_clr
  3416 ;;		_lcd_init
  3417 ;;		_lcd_print
  3418 ;;		_mfrc522Iniciar
  3419 ;;		_procura_tag
  3420 ;;		_prs_detect
  3421 ;;		_sensors_init
  3422 ;;		_spiSoftIniciar
  3423 ;;		_spi_hardware_disable
  3424 ;;		_tag_false
  3425 ;;		_tmr_tick_init
  3426 ;;		_uts_trigger
  3427 ;; This function is called by:
  3428 ;;		Startup code after reset
  3429 ;; This function uses a non-reentrant model
  3430 ;;
  3431                           psect	maintext,global,class=CODE,delta=2,split=1,group=0
  3432                           	file	"main.c"
  3433                           	line	24
  3434                           global __pmaintext
  3435                           __pmaintext:	;psect for function _main
  3436  005F                     psect	maintext
  3437                           	file	"main.c"
  3438                           	line	24
  3439                           	global	__size_of_main
  3440                           	__size_of_main	equ	__end_of_main-_main
  3441  0303                     	
  3442                           _main:	
  3443  005F                     ;incstack = 0
  3444                           	opt	stack 0
  3445                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  3446                           	line	29
  3447                           	
  3448                           l4658:	
  3449  005F                     ;main.c: 29:     int perigo = 100;
  3450                           	movlw	064h
  3451  005F  3064               	bsf	status, 5	;RP0=1, select bank3
  3452  0060  1683               	bsf	status, 6	;RP1=1, select bank3
  3453  0061  1703               	movwf	(main@perigo)^0180h
  3454  0062  00DA               	movlw	0
  3455  0063  3000               	movwf	((main@perigo)^0180h)+1
  3456  0064  00DB               	line	31
  3457                           	
  3458                           l4660:	
  3459  0065                     ;main.c: 31:     char state = 0;
  3460                           	clrf	(main@state)^0180h
  3461  0065  01DD               	line	33
  3462                           	
  3463                           l4662:	
  3464  0066                     ;main.c: 33:     char uid = 0;
  3465                           	clrf	(main@uid)^0180h
  3466  0066  01DC               	line	34
  3467                           	
  3468                           l4664:	
  3469  0067                     ;main.c: 34:     char UID[]={"000000"};
  3470                           	movlw	(main@UID)&0ffh
  3471  0067  30D3               	movwf	fsr0
  3472  0068  0084               	movlw	low(main@F1412)
  3473  0069  30CF               	bsf	status, 5	;RP0=1, select bank1
  3474  006A  1683               	bcf	status, 6	;RP1=0, select bank1
  3475  006B  1303               	movwf	(??_main+0)^080h+0
  3476  006C  00CB               	movf	fsr0,w
  3477  006D  0804               	movwf	((??_main+0)^080h+0+1)
  3478  006E  00CC               	movlw	7
  3479  006F  3007               	movwf	((??_main+0)^080h+0+2)
  3480  0070  00CD               u4220:
  3481  0071                     	movf	(??_main+0)^080h+0,w
  3482  0071  084B               	movwf	fsr0
  3483  0072  0084               	bcf	status, 7	;select IRP bank1
  3484  0073  1383               	
  3485                           	movf	indf,w
  3486  0074  0800               	movwf	((??_main+0)^080h+0+3)
  3487  0075  00CE               	incf	(??_main+0)^080h+0,f
  3488  0076  0ACB               	movf	((??_main+0)^080h+0+1),w
  3489  0077  084C               	movwf	fsr0
  3490  0078  0084               	bsf	status, 7	;select IRP bank3
  3491  0079  1783               	
  3492                           	movf	((??_main+0)^080h+0+3),w
  3493  007A  084E               	movwf	indf
  3494  007B  0080               	incf	((??_main+0)^080h+0+1),f
  3495  007C  0ACC               	decfsz	((??_main+0)^080h+0+2),f
  3496  007D  0BCD               	goto	u4220
  3497  007E  2871               	
  3498                           	line	35
  3499                           	
  3500                           l4666:	
  3501  007F                     ;main.c: 35:     char TAG[]={"0000"};
  3502                           	movlw	(main@TAG)&0ffh
  3503  007F  30CE               	movwf	fsr0
  3504  0080  0084               	movf	(main@F1414)^080h,w
  3505  0081  085C               	movwf	indf
  3506  0082  0080               	incf	fsr0,f
  3507  0083  0A84               	movf	(main@F1414)^080h+1,w
  3508  0084  085D               	movwf	indf
  3509  0085  0080               	incf	fsr0,f
  3510  0086  0A84               	movf	(main@F1414)^080h+2,w
  3511  0087  085E               	movwf	indf
  3512  0088  0080               	incf	fsr0,f
  3513  0089  0A84               	movf	(main@F1414)^080h+3,w
  3514  008A  085F               	movwf	indf
  3515  008B  0080               	incf	fsr0,f
  3516  008C  0A84               	movf	(main@F1414)^080h+4,w
  3517  008D  0860               	movwf	indf
  3518  008E  0080               	line	36
  3519                           	
  3520                           l4668:	
  3521  008F                     ;main.c: 36:     char uidAsci[]={"____________"};
  3522                           	movlw	(main@uidAsci)&0ffh
  3523  008F  30C1               	movwf	fsr0
  3524  0090  0084               	movlw	low(main@F1416)
  3525  0091  30A1               	movwf	(??_main+0)^080h+0
  3526  0092  00CB               	movf	fsr0,w
  3527  0093  0804               	movwf	((??_main+0)^080h+0+1)
  3528  0094  00CC               	movlw	13
  3529  0095  300D               	movwf	((??_main+0)^080h+0+2)
  3530  0096  00CD               u4230:
  3531  0097                     	movf	(??_main+0)^080h+0,w
  3532  0097  084B               	movwf	fsr0
  3533  0098  0084               	bsf	status, 7	;select IRP bank3
  3534  0099  1783               	
  3535                           	movf	indf,w
  3536  009A  0800               	movwf	((??_main+0)^080h+0+3)
  3537  009B  00CE               	incf	(??_main+0)^080h+0,f
  3538  009C  0ACB               	movf	((??_main+0)^080h+0+1),w
  3539  009D  084C               	movwf	fsr0
  3540  009E  0084               	
  3541                           	movf	((??_main+0)^080h+0+3),w
  3542  009F  084E               	movwf	indf
  3543  00A0  0080               	incf	((??_main+0)^080h+0+1),f
  3544  00A1  0ACC               	decfsz	((??_main+0)^080h+0+2),f
  3545  00A2  0BCD               	goto	u4230
  3546  00A3  2897               	
  3547                           	line	37
  3548                           	
  3549                           l4670:	
  3550  00A4                     ;main.c: 37:     char senha[] = {
  3551                           	movlw	(main@senha)&0ffh
  3552  00A4  30BB               	movwf	fsr0
  3553  00A5  0084               	movf	(main@F1418)^080h,w
  3554  00A6  0856               	movwf	indf
  3555  00A7  0080               	incf	fsr0,f
  3556  00A8  0A84               	movf	(main@F1418)^080h+1,w
  3557  00A9  0857               	movwf	indf
  3558  00AA  0080               	incf	fsr0,f
  3559  00AB  0A84               	movf	(main@F1418)^080h+2,w
  3560  00AC  0858               	movwf	indf
  3561  00AD  0080               	incf	fsr0,f
  3562  00AE  0A84               	movf	(main@F1418)^080h+3,w
  3563  00AF  0859               	movwf	indf
  3564  00B0  0080               	incf	fsr0,f
  3565  00B1  0A84               	movf	(main@F1418)^080h+4,w
  3566  00B2  085A               	movwf	indf
  3567  00B3  0080               	incf	fsr0,f
  3568  00B4  0A84               	movf	(main@F1418)^080h+5,w
  3569  00B5  085B               	movwf	indf
  3570  00B6  0080               	line	40
  3571                           	
  3572                           l4672:	
  3573  00B7                     ;main.c: 40:     TRISCbits.TRISC1 = 0;
  3574                           	bcf	(135)^080h,1	;volatile
  3575  00B7  1087               	line	41
  3576                           	
  3577                           l4674:	
  3578  00B8                     ;main.c: 41:     TRISBbits.TRISB7 = 1;
  3579                           	bsf	(134)^080h,7	;volatile
  3580  00B8  1786               	line	43
  3581                           	
  3582                           l4676:	
  3583  00B9                     ;main.c: 43:     ANSEL = 0;
  3584                           	bsf	status, 5	;RP0=1, select bank3
  3585  00B9  1683               	bsf	status, 6	;RP1=1, select bank3
  3586  00BA  1703               	clrf	(392)^0180h	;volatile
  3587  00BB  0188               	line	44
  3588                           	
  3589                           l4678:	
  3590  00BC                     ;main.c: 44:     ANSELH = 0;
  3591                           	clrf	(393)^0180h	;volatile
  3592  00BC  0189               	line	47
  3593                           	
  3594                           l4680:	
  3595  00BD                     ;main.c: 47:     spi_hardware_disable();
  3596                           	fcall	_spi_hardware_disable
  3597  00BD  120A  158A  207B  120A  118A  	line	48
  3598                           ;main.c: 48:     spiSoftIniciar();
  3599                           	fcall	_spiSoftIniciar
  3600  00C2  120A  158A  216E  120A  118A  	line	49
  3601                           ;main.c: 49:     mfrc522Iniciar();
  3602                           	fcall	_mfrc522Iniciar
  3603  00C7  120A  158A  2511  120A  118A  	line	50
  3604                           ;main.c: 50:     lcd_init();
  3605                           	fcall	_lcd_init
  3606  00CC  120A  118A  27AB  120A  118A  	line	51
  3607                           ;main.c: 51:     sensors_init();
  3608                           	fcall	_sensors_init
  3609  00D1  120A  158A  2135  120A  118A  	line	52
  3610                           ;main.c: 52:     tmr_tick_init();
  3611                           	fcall	_tmr_tick_init
  3612  00D6  120A  158A  20C4  120A  118A  	line	54
  3613                           	
  3614                           l4682:	
  3615  00DB                     ;main.c: 54:     PORTCbits.RC1 = 1;
  3616                           	bcf	status, 5	;RP0=0, select bank0
  3617  00DB  1283               	bcf	status, 6	;RP1=0, select bank0
  3618  00DC  1303               	bsf	(7),1	;volatile
  3619  00DD  1487               	goto	l4786
  3620  00DE  2B34               	line	57
  3621                           ;main.c: 57:     while(1)
  3622                           	
  3623                           l55:	
  3624  00DF                     	line	61
  3625                           ;main.c: 58:     {;main.c: 61:         switch(state)
  3626                           	goto	l4786
  3627  00DF  2B34               	line	63
  3628                           ;main.c: 62:         {;main.c: 63:             case 0:
  3629                           	
  3630                           l57:	
  3631  00E0                     	line	65
  3632                           	
  3633                           l4684:	
  3634  00E0                     ;main.c: 65:                     lcd_print(0,3,"INDUSTRIAL");
  3635                           	movlw	low(03h)
  3636  00E0  3003               	bsf	status, 5	;RP0=1, select bank1
  3637  00E1  1683               	bcf	status, 6	;RP1=0, select bank1
  3638  00E2  1303               	movwf	(??_main+0)^080h+0
  3639  00E3  00CB               	movf	(??_main+0)^080h+0,w
  3640  00E4  084B               	movwf	(lcd_print@col)^080h
  3641  00E5  00A6               	movlw	(low((((STR_1)-__stringbase)|8000h)))&0ffh
  3642  00E6  3013               	movwf	(lcd_print@str)^080h
  3643  00E7  00A7               	movlw	80h
  3644  00E8  3080               	movwf	(lcd_print@str+1)^080h
  3645  00E9  00A8               	movlw	low(0)
  3646  00EA  3000               	fcall	_lcd_print
  3647  00EB  120A  158A  2427  120A  118A  	line	66
  3648                           ;main.c: 66:                     lcd_print(1,4,"SAFETY");
  3649                           	movlw	low(04h)
  3650  00F0  3004               	bsf	status, 5	;RP0=1, select bank1
  3651  00F1  1683               	bcf	status, 6	;RP1=0, select bank1
  3652  00F2  1303               	movwf	(??_main+0)^080h+0
  3653  00F3  00CB               	movf	(??_main+0)^080h+0,w
  3654  00F4  084B               	movwf	(lcd_print@col)^080h
  3655  00F5  00A6               	movlw	(low((((STR_2)-__stringbase)|8000h)))&0ffh
  3656  00F6  3050               	movwf	(lcd_print@str)^080h
  3657  00F7  00A7               	movlw	80h
  3658  00F8  3080               	movwf	(lcd_print@str+1)^080h
  3659  00F9  00A8               	movlw	low(01h)
  3660  00FA  3001               	fcall	_lcd_print
  3661  00FB  120A  158A  2427  120A  118A  	line	67
  3662                           	
  3663                           l4686:	
  3664  0100                     ;main.c: 67:                     delay_ms(5000);
  3665                           	movlw	088h
  3666  0100  3088               	bsf	status, 5	;RP0=1, select bank1
  3667  0101  1683               	bcf	status, 6	;RP1=0, select bank1
  3668  0102  1303               	movwf	(delay_ms@t)^080h
  3669  0103  00A0               	movlw	013h
  3670  0104  3013               	movwf	((delay_ms@t)^080h)+1
  3671  0105  00A1               	fcall	_delay_ms
  3672  0106  120A  158A  218C  120A  118A  	line	68
  3673                           	
  3674                           l4688:	
  3675  010B                     ;main.c: 68:                     state = 1;
  3676                           	bsf	status, 5	;RP0=1, select bank3
  3677  010B  1683               	bsf	status, 6	;RP1=1, select bank3
  3678  010C  1703               	clrf	(main@state)^0180h
  3679  010D  01DD               	incf	(main@state)^0180h,f
  3680  010E  0ADD               	line	69
  3681                           	
  3682                           l4690:	
  3683  010F                     ;main.c: 69:                     lcd_clr();
  3684                           	fcall	_lcd_clr
  3685  010F  160A  118A  27DA  120A  118A  	line	70
  3686                           ;main.c: 70:                     break;
  3687                           	goto	l4786
  3688  0114  2B34               	line	73
  3689                           ;main.c: 73:             case 1:
  3690                           	
  3691                           l59:	
  3692  0115                     	line	75
  3693                           	
  3694                           l4692:	
  3695  0115                     ;main.c: 75:                     lcd_print(0,3,"ESPERANDO");
  3696                           	movlw	low(03h)
  3697  0115  3003               	bsf	status, 5	;RP0=1, select bank1
  3698  0116  1683               	bcf	status, 6	;RP1=0, select bank1
  3699  0117  1303               	movwf	(??_main+0)^080h+0
  3700  0118  00CB               	movf	(??_main+0)^080h+0,w
  3701  0119  084B               	movwf	(lcd_print@col)^080h
  3702  011A  00A6               	movlw	(low((((STR_3)-__stringbase)|8000h)))&0ffh
  3703  011B  301E               	movwf	(lcd_print@str)^080h
  3704  011C  00A7               	movlw	80h
  3705  011D  3080               	movwf	(lcd_print@str+1)^080h
  3706  011E  00A8               	movlw	low(0)
  3707  011F  3000               	fcall	_lcd_print
  3708  0120  120A  158A  2427  120A  118A  	line	76
  3709                           ;main.c: 76:                     lcd_print(1,4,"ACESSO");
  3710                           	movlw	low(04h)
  3711  0125  3004               	bsf	status, 5	;RP0=1, select bank1
  3712  0126  1683               	bcf	status, 6	;RP1=0, select bank1
  3713  0127  1303               	movwf	(??_main+0)^080h+0
  3714  0128  00CB               	movf	(??_main+0)^080h+0,w
  3715  0129  084B               	movwf	(lcd_print@col)^080h
  3716  012A  00A6               	movlw	(low((((STR_4)-__stringbase)|8000h)))&0ffh
  3717  012B  3049               	movwf	(lcd_print@str)^080h
  3718  012C  00A7               	movlw	80h
  3719  012D  3080               	movwf	(lcd_print@str+1)^080h
  3720  012E  00A8               	movlw	low(01h)
  3721  012F  3001               	fcall	_lcd_print
  3722  0130  120A  158A  2427  120A  118A  	line	78
  3723                           	
  3724                           l4694:	
  3725  0135                     ;main.c: 78:                     PORTCbits.RC0 = 0;
  3726                           	bcf	status, 5	;RP0=0, select bank0
  3727  0135  1283               	bcf	status, 6	;RP1=0, select bank0
  3728  0136  1303               	bcf	(7),0	;volatile
  3729  0137  1007               	line	80
  3730                           	
  3731                           l4696:	
  3732  0138                     ;main.c: 80:                     procura_tag(0x26, TAG);
  3733                           	movlw	(low(main@TAG|((0x1)<<8))&0ffh)
  3734  0138  30CE               	bsf	status, 5	;RP0=1, select bank1
  3735  0139  1683               	bcf	status, 6	;RP1=0, select bank1
  3736  013A  1303               	movwf	(procura_tag@data)^080h
  3737  013B  00BB               	movlw	(0x1)
  3738  013C  3001               	movwf	(procura_tag@data+1)^080h
  3739  013D  00BC               	movlw	low(026h)
  3740  013E  3026               	fcall	_procura_tag
  3741  013F  120A  158A  23DD  120A  118A  	line	81
  3742                           	
  3743                           l4698:	
  3744  0144                     ;main.c: 81:                     uid = MFRC522_AntiColl(UID);
  3745                           	movlw	(low(main@UID|((0x1)<<8))&0ffh)
  3746  0144  30D3               	bsf	status, 5	;RP0=1, select bank1
  3747  0145  1683               	bcf	status, 6	;RP1=0, select bank1
  3748  0146  1303               	movwf	(MFRC522_AntiColl@serNum)^080h
  3749  0147  00C0               	movlw	(0x1)
  3750  0148  3001               	movwf	(MFRC522_AntiColl@serNum+1)^080h
  3751  0149  00C1               	fcall	_MFRC522_AntiColl
  3752  014A  120A  158A  2615  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  3753  014F  1683               	bcf	status, 6	;RP1=0, select bank1
  3754  0150  1303               	movwf	(??_main+0)^080h+0
  3755  0151  00CB               	movf	(??_main+0)^080h+0,w
  3756  0152  084B               	bsf	status, 5	;RP0=1, select bank3
  3757  0153  1683               	bsf	status, 6	;RP1=1, select bank3
  3758  0154  1703               	movwf	(main@uid)^0180h
  3759  0155  00DC               	line	83
  3760                           	
  3761                           l4700:	
  3762  0156                     ;main.c: 83:                     if(uid == 0)
  3763                           	movf	((main@uid)^0180h),w
  3764  0156  085C               	btfss	status,2
  3765  0157  1D03               	goto	u4241
  3766  0158  295A               	goto	u4240
  3767  0159  295B               u4241:
  3768  015A                     	goto	l60
  3769  015A  2965               u4240:
  3770  015B                     	line	85
  3771                           	
  3772                           l4702:	
  3773  015B                     ;main.c: 84:                     {;main.c: 85:                         state = 2;
  3774                           	movlw	low(02h)
  3775  015B  3002               	bsf	status, 5	;RP0=1, select bank1
  3776  015C  1683               	bcf	status, 6	;RP1=0, select bank1
  3777  015D  1303               	movwf	(??_main+0)^080h+0
  3778  015E  00CB               	movf	(??_main+0)^080h+0,w
  3779  015F  084B               	bsf	status, 5	;RP0=1, select bank3
  3780  0160  1683               	bsf	status, 6	;RP1=1, select bank3
  3781  0161  1703               	movwf	(main@state)^0180h
  3782  0162  00DD               	line	86
  3783                           ;main.c: 86:                         break;
  3784                           	goto	l4786
  3785  0163  2B34               	line	87
  3786                           	
  3787                           l4704:	
  3788  0164                     ;main.c: 87:                     }
  3789                           	goto	l4706
  3790  0164  2969               	line	88
  3791                           ;main.c: 88:                     else
  3792                           	
  3793                           l60:	
  3794  0165                     	line	90
  3795                           ;main.c: 89:                     {;main.c: 90:                         state = 1;
  3796                           	clrf	(main@state)^0180h
  3797  0165  01DD               	incf	(main@state)^0180h,f
  3798  0166  0ADD               	line	91
  3799                           ;main.c: 91:                         break;
  3800                           	goto	l4786
  3801  0167  2B34               	line	92
  3802                           ;main.c: 92:                     }
  3803                           	
  3804                           l61:	
  3805  0168                     	goto	l4706
  3806  0168  2969               	line	94
  3807                           ;main.c: 94:             case 2:
  3808                           	
  3809                           l62:	
  3810  0169                     	line	96
  3811                           	
  3812                           l4706:	
  3813  0169                     ;main.c: 96:                     lcd_clr();
  3814                           	fcall	_lcd_clr
  3815  0169  160A  118A  27DA  120A  118A  	line	98
  3816                           	
  3817                           l4708:	
  3818  016E                     ;main.c: 98:                     lcd_print(0,0,"TAG :");
  3819                           	bsf	status, 5	;RP0=1, select bank1
  3820  016E  1683               	bcf	status, 6	;RP1=0, select bank1
  3821  016F  1303               	clrf	(lcd_print@col)^080h
  3822  0170  01A6               	movlw	(low((((STR_5)-__stringbase)|8000h)))&0ffh
  3823  0171  3057               	movwf	(lcd_print@str)^080h
  3824  0172  00A7               	movlw	80h
  3825  0173  3080               	movwf	(lcd_print@str+1)^080h
  3826  0174  00A8               	movlw	low(0)
  3827  0175  3000               	fcall	_lcd_print
  3828  0176  120A  158A  2427  120A  118A  	line	100
  3829                           	
  3830                           l4710:	
  3831  017B                     ;main.c: 100:                     hex2Ascii(UID,uidAsci,6);
  3832                           	movlw	(low(main@UID|((0x1)<<8))&0ffh)
  3833  017B  30D3               	bsf	status, 5	;RP0=1, select bank1
  3834  017C  1683               	bcf	status, 6	;RP1=0, select bank1
  3835  017D  1303               	movwf	(hex2Ascii@strIn)^080h
  3836  017E  00A0               	movlw	(0x1)
  3837  017F  3001               	movwf	(hex2Ascii@strIn+1)^080h
  3838  0180  00A1               	movlw	(low(main@uidAsci|((0x1)<<8)))&0ffh
  3839  0181  30C1               	movwf	(??_main+0)^080h+0
  3840  0182  00CB               	movf	(??_main+0)^080h+0,w
  3841  0183  084B               	movwf	(hex2Ascii@strOut)^080h
  3842  0184  00A2               	movlw	low(06h)
  3843  0185  3006               	movwf	(??_main+1)^080h+0
  3844  0186  00CC               	movf	(??_main+1)^080h+0,w
  3845  0187  084C               	movwf	(hex2Ascii@cntDig)^080h
  3846  0188  00A3               	fcall	_hex2Ascii
  3847  0189  120A  158A  2588  120A  118A  	line	101
  3848                           	
  3849                           l4712:	
  3850  018E                     ;main.c: 101:                     lcd_print(0,0,uidAsci);
  3851                           	bsf	status, 5	;RP0=1, select bank1
  3852  018E  1683               	bcf	status, 6	;RP1=0, select bank1
  3853  018F  1303               	clrf	(lcd_print@col)^080h
  3854  0190  01A6               	movlw	(low(main@uidAsci|((0x1)<<8))&0ffh)
  3855  0191  30C1               	movwf	(lcd_print@str)^080h
  3856  0192  00A7               	movlw	(0x1)
  3857  0193  3001               	movwf	(lcd_print@str+1)^080h
  3858  0194  00A8               	movlw	low(0)
  3859  0195  3000               	fcall	_lcd_print
  3860  0196  120A  158A  2427  120A  118A  	line	103
  3861                           	
  3862                           l4714:	
  3863  019B                     ;main.c: 103:                     delay_ms(5000);
  3864                           	movlw	088h
  3865  019B  3088               	bsf	status, 5	;RP0=1, select bank1
  3866  019C  1683               	bcf	status, 6	;RP1=0, select bank1
  3867  019D  1303               	movwf	(delay_ms@t)^080h
  3868  019E  00A0               	movlw	013h
  3869  019F  3013               	movwf	((delay_ms@t)^080h)+1
  3870  01A0  00A1               	fcall	_delay_ms
  3871  01A1  120A  158A  218C  120A  118A  	line	105
  3872                           ;main.c: 105:                     if(tag_false(UID, senha) == 0)
  3873                           	movlw	(low(main@senha|((0x1)<<8)))&0ffh
  3874  01A6  30BB               	bsf	status, 5	;RP0=1, select bank1
  3875  01A7  1683               	bcf	status, 6	;RP1=0, select bank1
  3876  01A8  1303               	movwf	(??_main+0)^080h+0
  3877  01A9  00CB               	movf	(??_main+0)^080h+0,w
  3878  01AA  084B               	movwf	(tag_false@p2)^080h
  3879  01AB  00A0               	movlw	(low(main@UID|((0x1)<<8)))&0ffh
  3880  01AC  30D3               	fcall	_tag_false
  3881  01AD  120A  158A  2229  120A  118A  	xorlw	0
  3882  01B2  3A00               	skipz
  3883  01B3  1D03               	goto	u4251
  3884  01B4  29B6               	goto	u4250
  3885  01B5  29B7               u4251:
  3886  01B6                     	goto	l4720
  3887  01B6  29C1               u4250:
  3888  01B7                     	line	107
  3889                           	
  3890                           l4716:	
  3891  01B7                     ;main.c: 106:                     {;main.c: 107:                         state = 10;
  3892                           	movlw	low(0Ah)
  3893  01B7  300A               	bsf	status, 5	;RP0=1, select bank1
  3894  01B8  1683               	bcf	status, 6	;RP1=0, select bank1
  3895  01B9  1303               	movwf	(??_main+0)^080h+0
  3896  01BA  00CB               	movf	(??_main+0)^080h+0,w
  3897  01BB  084B               	bsf	status, 5	;RP0=1, select bank3
  3898  01BC  1683               	bsf	status, 6	;RP1=1, select bank3
  3899  01BD  1703               	movwf	(main@state)^0180h
  3900  01BE  00DD               	line	108
  3901                           ;main.c: 108:                         break;
  3902                           	goto	l4786
  3903  01BF  2B34               	line	109
  3904                           	
  3905                           l4718:	
  3906  01C0                     ;main.c: 109:                     }
  3907                           	goto	l4722
  3908  01C0  29CB               	line	110
  3909                           ;main.c: 110:                     else
  3910                           	
  3911                           l63:	
  3912  01C1                     	line	112
  3913                           	
  3914                           l4720:	
  3915  01C1                     ;main.c: 111:                     {;main.c: 112:                         state = 11;
  3916                           	movlw	low(0Bh)
  3917  01C1  300B               	bsf	status, 5	;RP0=1, select bank1
  3918  01C2  1683               	bcf	status, 6	;RP1=0, select bank1
  3919  01C3  1303               	movwf	(??_main+0)^080h+0
  3920  01C4  00CB               	movf	(??_main+0)^080h+0,w
  3921  01C5  084B               	bsf	status, 5	;RP0=1, select bank3
  3922  01C6  1683               	bsf	status, 6	;RP1=1, select bank3
  3923  01C7  1703               	movwf	(main@state)^0180h
  3924  01C8  00DD               	line	113
  3925                           ;main.c: 113:                         break;
  3926                           	goto	l4786
  3927  01C9  2B34               	line	114
  3928                           ;main.c: 114:                     }
  3929                           	
  3930                           l64:	
  3931  01CA                     	goto	l4722
  3932  01CA  29CB               	line	117
  3933                           ;main.c: 117:             case 10:
  3934                           	
  3935                           l65:	
  3936  01CB                     	line	118
  3937                           	
  3938                           l4722:	
  3939  01CB                     ;main.c: 118:                     lcd_clr();
  3940                           	fcall	_lcd_clr
  3941  01CB  160A  118A  27DA  120A  118A  	line	119
  3942                           	
  3943                           l4724:	
  3944  01D0                     ;main.c: 119:                     lcd_print(0,5,"ACESSO");
  3945                           	movlw	low(05h)
  3946  01D0  3005               	bsf	status, 5	;RP0=1, select bank1
  3947  01D1  1683               	bcf	status, 6	;RP1=0, select bank1
  3948  01D2  1303               	movwf	(??_main+0)^080h+0
  3949  01D3  00CB               	movf	(??_main+0)^080h+0,w
  3950  01D4  084B               	movwf	(lcd_print@col)^080h
  3951  01D5  00A6               	movlw	(low((((STR_6)-__stringbase)|8000h)))&0ffh
  3952  01D6  3049               	movwf	(lcd_print@str)^080h
  3953  01D7  00A7               	movlw	80h
  3954  01D8  3080               	movwf	(lcd_print@str+1)^080h
  3955  01D9  00A8               	movlw	low(0)
  3956  01DA  3000               	fcall	_lcd_print
  3957  01DB  120A  158A  2427  120A  118A  	line	120
  3958                           	
  3959                           l4726:	
  3960  01E0                     ;main.c: 120:                     lcd_print(1,4,"LIBERADO");
  3961                           	movlw	low(04h)
  3962  01E0  3004               	bsf	status, 5	;RP0=1, select bank1
  3963  01E1  1683               	bcf	status, 6	;RP1=0, select bank1
  3964  01E2  1303               	movwf	(??_main+0)^080h+0
  3965  01E3  00CB               	movf	(??_main+0)^080h+0,w
  3966  01E4  084B               	movwf	(lcd_print@col)^080h
  3967  01E5  00A6               	movlw	(low((((STR_7)-__stringbase)|8000h)))&0ffh
  3968  01E6  3031               	movwf	(lcd_print@str)^080h
  3969  01E7  00A7               	movlw	80h
  3970  01E8  3080               	movwf	(lcd_print@str+1)^080h
  3971  01E9  00A8               	movlw	low(01h)
  3972  01EA  3001               	fcall	_lcd_print
  3973  01EB  120A  158A  2427  120A  118A  	line	121
  3974                           ;main.c: 121:                     delay_ms(2000);
  3975                           	movlw	0D0h
  3976  01F0  30D0               	bsf	status, 5	;RP0=1, select bank1
  3977  01F1  1683               	bcf	status, 6	;RP1=0, select bank1
  3978  01F2  1303               	movwf	(delay_ms@t)^080h
  3979  01F3  00A0               	movlw	07h
  3980  01F4  3007               	movwf	((delay_ms@t)^080h)+1
  3981  01F5  00A1               	fcall	_delay_ms
  3982  01F6  120A  158A  218C  120A  118A  	line	122
  3983                           ;main.c: 122:                     lcd_clr();
  3984                           	fcall	_lcd_clr
  3985  01FB  160A  118A  27DA  120A  118A  	line	123
  3986                           	
  3987                           l4728:	
  3988  0200                     ;main.c: 123:                     lcd_print(0,0,"MAQ. ENERGIZADA");
  3989                           	bsf	status, 5	;RP0=1, select bank1
  3990  0200  1683               	bcf	status, 6	;RP1=0, select bank1
  3991  0201  1303               	clrf	(lcd_print@col)^080h
  3992  0202  01A6               	movlw	(low((((STR_8)-__stringbase)|8000h)))&0ffh
  3993  0203  3003               	movwf	(lcd_print@str)^080h
  3994  0204  00A7               	movlw	80h
  3995  0205  3080               	movwf	(lcd_print@str+1)^080h
  3996  0206  00A8               	movlw	low(0)
  3997  0207  3000               	fcall	_lcd_print
  3998  0208  120A  158A  2427  120A  118A  	line	124
  3999                           	
  4000                           l4730:	
  4001  020D                     ;main.c: 124:                     state = 20;
  4002                           	movlw	low(014h)
  4003  020D  3014               	bsf	status, 5	;RP0=1, select bank1
  4004  020E  1683               	bcf	status, 6	;RP1=0, select bank1
  4005  020F  1303               	movwf	(??_main+0)^080h+0
  4006  0210  00CB               	movf	(??_main+0)^080h+0,w
  4007  0211  084B               	bsf	status, 5	;RP0=1, select bank3
  4008  0212  1683               	bsf	status, 6	;RP1=1, select bank3
  4009  0213  1703               	movwf	(main@state)^0180h
  4010  0214  00DD               	line	125
  4011                           ;main.c: 125:                     break;
  4012                           	goto	l4786
  4013  0215  2B34               	line	129
  4014                           ;main.c: 129:             case 11:
  4015                           	
  4016                           l66:	
  4017  0216                     	line	130
  4018                           	
  4019                           l4732:	
  4020  0216                     ;main.c: 130:                     lcd_clr();
  4021                           	fcall	_lcd_clr
  4022  0216  160A  118A  27DA  120A  118A  	line	131
  4023                           	
  4024                           l4734:	
  4025  021B                     ;main.c: 131:                     lcd_print(0,5,"ACESSO");
  4026                           	movlw	low(05h)
  4027  021B  3005               	bsf	status, 5	;RP0=1, select bank1
  4028  021C  1683               	bcf	status, 6	;RP1=0, select bank1
  4029  021D  1303               	movwf	(??_main+0)^080h+0
  4030  021E  00CB               	movf	(??_main+0)^080h+0,w
  4031  021F  084B               	movwf	(lcd_print@col)^080h
  4032  0220  00A6               	movlw	(low((((STR_9)-__stringbase)|8000h)))&0ffh
  4033  0221  3049               	movwf	(lcd_print@str)^080h
  4034  0222  00A7               	movlw	80h
  4035  0223  3080               	movwf	(lcd_print@str+1)^080h
  4036  0224  00A8               	movlw	low(0)
  4037  0225  3000               	fcall	_lcd_print
  4038  0226  120A  158A  2427  120A  118A  	line	132
  4039                           	
  4040                           l4736:	
  4041  022B                     ;main.c: 132:                     lcd_print(1,5,"NEGADO");
  4042                           	movlw	low(05h)
  4043  022B  3005               	bsf	status, 5	;RP0=1, select bank1
  4044  022C  1683               	bcf	status, 6	;RP1=0, select bank1
  4045  022D  1303               	movwf	(??_main+0)^080h+0
  4046  022E  00CB               	movf	(??_main+0)^080h+0,w
  4047  022F  084B               	movwf	(lcd_print@col)^080h
  4048  0230  00A6               	movlw	(low((((STR_10)-__stringbase)|8000h)))&0ffh
  4049  0231  3042               	movwf	(lcd_print@str)^080h
  4050  0232  00A7               	movlw	80h
  4051  0233  3080               	movwf	(lcd_print@str+1)^080h
  4052  0234  00A8               	movlw	low(01h)
  4053  0235  3001               	fcall	_lcd_print
  4054  0236  120A  158A  2427  120A  118A  	line	133
  4055                           ;main.c: 133:                     delay_ms(5000);
  4056                           	movlw	088h
  4057  023B  3088               	bsf	status, 5	;RP0=1, select bank1
  4058  023C  1683               	bcf	status, 6	;RP1=0, select bank1
  4059  023D  1303               	movwf	(delay_ms@t)^080h
  4060  023E  00A0               	movlw	013h
  4061  023F  3013               	movwf	((delay_ms@t)^080h)+1
  4062  0240  00A1               	fcall	_delay_ms
  4063  0241  120A  158A  218C  120A  118A  	line	134
  4064                           ;main.c: 134:                     lcd_clr();
  4065                           	fcall	_lcd_clr
  4066  0246  160A  118A  27DA  120A  118A  	line	135
  4067                           	
  4068                           l4738:	
  4069  024B                     ;main.c: 135:                     state = 1;
  4070                           	bsf	status, 5	;RP0=1, select bank3
  4071  024B  1683               	bsf	status, 6	;RP1=1, select bank3
  4072  024C  1703               	clrf	(main@state)^0180h
  4073  024D  01DD               	incf	(main@state)^0180h,f
  4074  024E  0ADD               	line	136
  4075                           ;main.c: 136:                     break;
  4076                           	goto	l4786
  4077  024F  2B34               	line	138
  4078                           ;main.c: 138:             case 20:
  4079                           	
  4080                           l67:	
  4081  0250                     	line	140
  4082                           	
  4083                           l4740:	
  4084  0250                     ;main.c: 140:                     uts_trigger();
  4085                           	fcall	_uts_trigger
  4086  0250  120A  158A  20D9  120A  118A  	line	141
  4087                           	
  4088                           l4742:	
  4089  0255                     ;main.c: 141:                     dist = 0;
  4090                           	movlw	high highword(0)
  4091  0255  3000               	bsf	status, 5	;RP0=1, select bank1
  4092  0256  1683               	bcf	status, 6	;RP1=0, select bank1
  4093  0257  1303               	movwf	(_dist+3)^080h
  4094  0258  00EB               	movlw	low highword(0)
  4095  0259  3000               	movwf	(_dist+2)^080h
  4096  025A  00EA               	movlw	high(0)
  4097  025B  3000               	movwf	(_dist+1)^080h
  4098  025C  00E9               	movlw	low(0)
  4099  025D  3000               	movwf	(_dist)^080h
  4100  025E  00E8               
  4101                           	line	143
  4102                           	
  4103                           l4744:	
  4104  025F                     ;main.c: 143:                     if(prs_detect())
  4105                           	fcall	_prs_detect
  4106  025F  120A  158A  21FA  120A  118A  	xorlw	0
  4107  0264  3A00               	skipnz
  4108  0265  1903               	goto	u4261
  4109  0266  2A68               	goto	u4260
  4110  0267  2A69               u4261:
  4111  0268                     	goto	l4748
  4112  0268  2A72               u4260:
  4113  0269                     	line	145
  4114                           	
  4115                           l4746:	
  4116  0269                     ;main.c: 144:                     {;main.c: 145:                         state = 21;
  4117                           	movlw	low(015h)
  4118  0269  3015               	bsf	status, 5	;RP0=1, select bank1
  4119  026A  1683               	bcf	status, 6	;RP1=0, select bank1
  4120  026B  1303               	movwf	(??_main+0)^080h+0
  4121  026C  00CB               	movf	(??_main+0)^080h+0,w
  4122  026D  084B               	bsf	status, 5	;RP0=1, select bank3
  4123  026E  1683               	bsf	status, 6	;RP1=1, select bank3
  4124  026F  1703               	movwf	(main@state)^0180h
  4125  0270  00DD               	line	146
  4126                           ;main.c: 146:                     }
  4127                           	goto	l4750
  4128  0271  2A7B               	line	147
  4129                           ;main.c: 147:                     else
  4130                           	
  4131                           l68:	
  4132  0272                     	line	149
  4133                           	
  4134                           l4748:	
  4135  0272                     ;main.c: 148:                     {;main.c: 149:                         state = 22;
  4136                           	movlw	low(016h)
  4137  0272  3016               	bsf	status, 5	;RP0=1, select bank1
  4138  0273  1683               	bcf	status, 6	;RP1=0, select bank1
  4139  0274  1303               	movwf	(??_main+0)^080h+0
  4140  0275  00CB               	movf	(??_main+0)^080h+0,w
  4141  0276  084B               	bsf	status, 5	;RP0=1, select bank3
  4142  0277  1683               	bsf	status, 6	;RP1=1, select bank3
  4143  0278  1703               	movwf	(main@state)^0180h
  4144  0279  00DD               	goto	l4750
  4145  027A  2A7B               	line	150
  4146                           ;main.c: 150:                     }
  4147                           	
  4148                           l69:	
  4149  027B                     	line	152
  4150                           	
  4151                           l4750:	
  4152  027B                     ;main.c: 152:                     if(dist > 1 && dist < perigo)
  4153                           	bsf	status, 5	;RP0=1, select bank1
  4154  027B  1683               	bcf	status, 6	;RP1=0, select bank1
  4155  027C  1303               	btfsc	(_dist+3)^080h,7
  4156  027D  1BEB               	goto	u4271
  4157  027E  2A8F               	movf	(_dist+3)^080h,w
  4158  027F  086B               	btfss	status,2
  4159  0280  1D03               	goto	u4270
  4160  0281  2A90               	movf	(_dist+2)^080h,w
  4161  0282  086A               	btfss	status,2
  4162  0283  1D03               	goto	u4270
  4163  0284  2A90               	movf	(_dist+1)^080h,w
  4164  0285  0869               	btfss	status,2
  4165  0286  1D03               	goto	u4270
  4166  0287  2A90               	movlw	2
  4167  0288  3002               	subwf	(_dist)^080h,w
  4168  0289  0268               	skipz
  4169  028A  1D03               	goto	u4273
  4170  028B  2A8C               u4273:
  4171  028C                     	btfss	status,0
  4172  028C  1C03               	goto	u4271
  4173  028D  2A8F               	goto	u4270
  4174  028E  2A90               
  4175                           u4271:
  4176  028F                     	goto	l4786
  4177  028F  2B34               u4270:
  4178  0290                     	
  4179                           l4752:	
  4180  0290                     	bsf	status, 5	;RP0=1, select bank3
  4181  0290  1683               	bsf	status, 6	;RP1=1, select bank3
  4182  0291  1703               	movf	(main@perigo)^0180h,w
  4183  0292  085A               	bsf	status, 5	;RP0=1, select bank1
  4184  0293  1683               	bcf	status, 6	;RP1=0, select bank1
  4185  0294  1303               	movwf	((??_main+0)^080h+0)
  4186  0295  00CB               	bsf	status, 5	;RP0=1, select bank3
  4187  0296  1683               	bsf	status, 6	;RP1=1, select bank3
  4188  0297  1703               	movf	(main@perigo+1)^0180h,w
  4189  0298  085B               	bsf	status, 5	;RP0=1, select bank1
  4190  0299  1683               	bcf	status, 6	;RP1=0, select bank1
  4191  029A  1303               	movwf	((??_main+0)^080h+0+1)
  4192  029B  00CC               	movlw	0
  4193  029C  3000               	btfsc	((??_main+0)^080h+0+1),7
  4194  029D  1BCC               	movlw	255
  4195  029E  30FF               	movwf	((??_main+0)^080h+0+2)
  4196  029F  00CD               	movwf	((??_main+0)^080h+0+3)
  4197  02A0  00CE               	movf	(_dist+3)^080h,w
  4198  02A1  086B               	xorlw	80h
  4199  02A2  3A80               	movwf	btemp+1
  4200  02A3  00FF               	movf	3+(??_main+0)^080h+0,w
  4201  02A4  084E               	xorlw	80h
  4202  02A5  3A80               	subwf	btemp+1,w
  4203  02A6  027F               	
  4204                           	skipz
  4205  02A7  1D03               	goto	u4283
  4206  02A8  2AB3               	movf	2+(??_main+0)^080h+0,w
  4207  02A9  084D               	subwf	(_dist+2)^080h,w
  4208  02AA  026A               	skipz
  4209  02AB  1D03               	goto	u4283
  4210  02AC  2AB3               	movf	1+(??_main+0)^080h+0,w
  4211  02AD  084C               	subwf	(_dist+1)^080h,w
  4212  02AE  0269               	skipz
  4213  02AF  1D03               	goto	u4283
  4214  02B0  2AB3               	movf	0+(??_main+0)^080h+0,w
  4215  02B1  084B               	subwf	(_dist)^080h,w
  4216  02B2  0268               u4283:
  4217  02B3                     	skipnc
  4218  02B3  1803               	goto	u4281
  4219  02B4  2AB6               	goto	u4280
  4220  02B5  2AB7               u4281:
  4221  02B6                     	goto	l4786
  4222  02B6  2B34               u4280:
  4223  02B7                     	line	154
  4224                           	
  4225                           l4754:	
  4226  02B7                     ;main.c: 153:                     {;main.c: 154:                         state = 23;
  4227                           	movlw	low(017h)
  4228  02B7  3017               	movwf	(??_main+0)^080h+0
  4229  02B8  00CB               	movf	(??_main+0)^080h+0,w
  4230  02B9  084B               	bsf	status, 5	;RP0=1, select bank3
  4231  02BA  1683               	bsf	status, 6	;RP1=1, select bank3
  4232  02BB  1703               	movwf	(main@state)^0180h
  4233  02BC  00DD               	goto	l4786
  4234  02BD  2B34               	line	155
  4235                           ;main.c: 155:                     }
  4236                           	
  4237                           l70:	
  4238  02BE                     	line	157
  4239                           ;main.c: 157:                     break;
  4240                           	goto	l4786
  4241  02BE  2B34               	line	159
  4242                           ;main.c: 159:             case 21:
  4243                           	
  4244                           l71:	
  4245  02BF                     	line	160
  4246                           	
  4247                           l4756:	
  4248  02BF                     ;main.c: 160:                     uts_trigger();
  4249                           	fcall	_uts_trigger
  4250  02BF  120A  158A  20D9  120A  118A  	line	161
  4251                           	
  4252                           l4758:	
  4253  02C4                     ;main.c: 161:                     PORTCbits.RC1 = 0;
  4254                           	bcf	status, 5	;RP0=0, select bank0
  4255  02C4  1283               	bcf	status, 6	;RP1=0, select bank0
  4256  02C5  1303               	bcf	(7),1	;volatile
  4257  02C6  1087               	line	162
  4258                           	
  4259                           l4760:	
  4260  02C7                     ;main.c: 162:                     lcd_print(1,4, " ALERTA");
  4261                           	movlw	low(04h)
  4262  02C7  3004               	bsf	status, 5	;RP0=1, select bank1
  4263  02C8  1683               	bcf	status, 6	;RP1=0, select bank1
  4264  02C9  1303               	movwf	(??_main+0)^080h+0
  4265  02CA  00CB               	movf	(??_main+0)^080h+0,w
  4266  02CB  084B               	movwf	(lcd_print@col)^080h
  4267  02CC  00A6               	movlw	(low((((STR_11)-__stringbase)|8000h)))&0ffh
  4268  02CD  303A               	movwf	(lcd_print@str)^080h
  4269  02CE  00A7               	movlw	80h
  4270  02CF  3080               	movwf	(lcd_print@str+1)^080h
  4271  02D0  00A8               	movlw	low(01h)
  4272  02D1  3001               	fcall	_lcd_print
  4273  02D2  120A  158A  2427  120A  118A  	line	163
  4274                           	
  4275                           l4762:	
  4276  02D7                     ;main.c: 163:                     state = 20;
  4277                           	movlw	low(014h)
  4278  02D7  3014               	bsf	status, 5	;RP0=1, select bank1
  4279  02D8  1683               	bcf	status, 6	;RP1=0, select bank1
  4280  02D9  1303               	movwf	(??_main+0)^080h+0
  4281  02DA  00CB               	movf	(??_main+0)^080h+0,w
  4282  02DB  084B               	bsf	status, 5	;RP0=1, select bank3
  4283  02DC  1683               	bsf	status, 6	;RP1=1, select bank3
  4284  02DD  1703               	movwf	(main@state)^0180h
  4285  02DE  00DD               	line	164
  4286                           ;main.c: 164:                     break;
  4287                           	goto	l4786
  4288  02DF  2B34               	line	166
  4289                           ;main.c: 166:             case 22:
  4290                           	
  4291                           l72:	
  4292  02E0                     	line	167
  4293                           	
  4294                           l4764:	
  4295  02E0                     ;main.c: 167:                     uts_trigger();
  4296                           	fcall	_uts_trigger
  4297  02E0  120A  158A  20D9  120A  118A  	line	168
  4298                           	
  4299                           l4766:	
  4300  02E5                     ;main.c: 168:                     PORTCbits.RC1 = 0;
  4301                           	bcf	status, 5	;RP0=0, select bank0
  4302  02E5  1283               	bcf	status, 6	;RP1=0, select bank0
  4303  02E6  1303               	bcf	(7),1	;volatile
  4304  02E7  1087               	line	169
  4305                           	
  4306                           l4768:	
  4307  02E8                     ;main.c: 169:                     lcd_print(1,4," LIVRE  ");
  4308                           	movlw	low(04h)
  4309  02E8  3004               	bsf	status, 5	;RP0=1, select bank1
  4310  02E9  1683               	bcf	status, 6	;RP1=0, select bank1
  4311  02EA  1303               	movwf	(??_main+0)^080h+0
  4312  02EB  00CB               	movf	(??_main+0)^080h+0,w
  4313  02EC  084B               	movwf	(lcd_print@col)^080h
  4314  02ED  00A6               	movlw	(low((((STR_12)-__stringbase)|8000h)))&0ffh
  4315  02EE  3028               	movwf	(lcd_print@str)^080h
  4316  02EF  00A7               	movlw	80h
  4317  02F0  3080               	movwf	(lcd_print@str+1)^080h
  4318  02F1  00A8               	movlw	low(01h)
  4319  02F2  3001               	fcall	_lcd_print
  4320  02F3  120A  158A  2427  120A  118A  	line	170
  4321                           	
  4322                           l4770:	
  4323  02F8                     ;main.c: 170:                     state = 20;
  4324                           	movlw	low(014h)
  4325  02F8  3014               	bsf	status, 5	;RP0=1, select bank1
  4326  02F9  1683               	bcf	status, 6	;RP1=0, select bank1
  4327  02FA  1303               	movwf	(??_main+0)^080h+0
  4328  02FB  00CB               	movf	(??_main+0)^080h+0,w
  4329  02FC  084B               	bsf	status, 5	;RP0=1, select bank3
  4330  02FD  1683               	bsf	status, 6	;RP1=1, select bank3
  4331  02FE  1703               	movwf	(main@state)^0180h
  4332  02FF  00DD               	line	171
  4333                           ;main.c: 171:                     break;
  4334                           	goto	l4786
  4335  0300  2B34               	line	173
  4336                           ;main.c: 173:             case 23:
  4337                           	
  4338                           l73:	
  4339  0301                     	line	174
  4340                           	
  4341                           l4772:	
  4342  0301                     ;main.c: 174:                     uts_trigger();
  4343                           	fcall	_uts_trigger
  4344  0301  120A  158A  20D9  120A  118A  	line	175
  4345                           	
  4346                           l4774:	
  4347  0306                     ;main.c: 175:                     PORTCbits.RC1 = 1;
  4348                           	bcf	status, 5	;RP0=0, select bank0
  4349  0306  1283               	bcf	status, 6	;RP1=0, select bank0
  4350  0307  1303               	bsf	(7),1	;volatile
  4351  0308  1487               	line	176
  4352                           ;main.c: 176:                     lcd_clr();
  4353                           	fcall	_lcd_clr
  4354  0309  160A  118A  27DA  120A  118A  	line	177
  4355                           	
  4356                           l4776:	
  4357  030E                     ;main.c: 177:                     lcd_print(1,5,"PARAR");
  4358                           	movlw	low(05h)
  4359  030E  3005               	bsf	status, 5	;RP0=1, select bank1
  4360  030F  1683               	bcf	status, 6	;RP1=0, select bank1
  4361  0310  1303               	movwf	(??_main+0)^080h+0
  4362  0311  00CB               	movf	(??_main+0)^080h+0,w
  4363  0312  084B               	movwf	(lcd_print@col)^080h
  4364  0313  00A6               	movlw	(low((((STR_13)-__stringbase)|8000h)))&0ffh
  4365  0314  305D               	movwf	(lcd_print@str)^080h
  4366  0315  00A7               	movlw	80h
  4367  0316  3080               	movwf	(lcd_print@str+1)^080h
  4368  0317  00A8               	movlw	low(01h)
  4369  0318  3001               	fcall	_lcd_print
  4370  0319  120A  158A  2427  120A  118A  	line	178
  4371                           	
  4372                           l4778:	
  4373  031E                     ;main.c: 178:                     delay_ms(5000);
  4374                           	movlw	088h
  4375  031E  3088               	bsf	status, 5	;RP0=1, select bank1
  4376  031F  1683               	bcf	status, 6	;RP1=0, select bank1
  4377  0320  1303               	movwf	(delay_ms@t)^080h
  4378  0321  00A0               	movlw	013h
  4379  0322  3013               	movwf	((delay_ms@t)^080h)+1
  4380  0323  00A1               	fcall	_delay_ms
  4381  0324  120A  158A  218C  120A  118A  	line	179
  4382                           	
  4383                           l4780:	
  4384  0329                     ;main.c: 179:                     lcd_clr();
  4385                           	fcall	_lcd_clr
  4386  0329  160A  118A  27DA  120A  118A  	line	180
  4387                           	
  4388                           l4782:	
  4389  032E                     ;main.c: 180:                     state = 1;
  4390                           	bsf	status, 5	;RP0=1, select bank3
  4391  032E  1683               	bsf	status, 6	;RP1=1, select bank3
  4392  032F  1703               	clrf	(main@state)^0180h
  4393  0330  01DD               	incf	(main@state)^0180h,f
  4394  0331  0ADD               	line	181
  4395                           ;main.c: 181:                     break;
  4396                           	goto	l4786
  4397  0332  2B34               	line	183
  4398                           	
  4399                           l4784:	
  4400  0333                     ;main.c: 183:         }
  4401                           	goto	l4786
  4402  0333  2B34               	
  4403                           l56:	
  4404  0334                     	
  4405                           l4786:	
  4406  0334                     	bsf	status, 5	;RP0=1, select bank3
  4407  0334  1683               	bsf	status, 6	;RP1=1, select bank3
  4408  0335  1703               	movf	(main@state)^0180h,w
  4409  0336  085D               	bsf	status, 5	;RP0=1, select bank1
  4410  0337  1683               	bcf	status, 6	;RP1=0, select bank1
  4411  0338  1303               	movwf	(??_main+0)^080h+0
  4412  0339  00CB               	clrf	(??_main+0)^080h+0+1
  4413  033A  01CC               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  4414                           ; Switch size 1, requested type "space"
  4415                           ; Number of cases is 1, Range of values is 0 to 0
  4416                           ; switch strategies available:
  4417                           ; Name         Instructions Cycles
  4418                           ; simple_byte            4     3 (average)
  4419                           ; direct_byte           11     8 (fixed)
  4420                           ; jumptable            260     6 (fixed)
  4421                           ;	Chosen strategy is simple_byte
  4422                           
  4423                           	movf 1+(??_main+0)^080h+0,w
  4424  033B  084C               	opt asmopt_push
  4425                           	opt asmopt_off
  4426                           	xorlw	0^0	; case 0
  4427  033C  3A00               	skipnz
  4428  033D  1903               	goto	l4924
  4429  033E  2B40               	goto	l4786
  4430  033F  2B34               	opt asmopt_pop
  4431                           	
  4432                           l4924:	
  4433  0340                     ; Switch size 1, requested type "space"
  4434                           ; Number of cases is 9, Range of values is 0 to 23
  4435                           ; switch strategies available:
  4436                           ; Name         Instructions Cycles
  4437                           ; simple_byte           28    15 (average)
  4438                           ; direct_byte           80     8 (fixed)
  4439                           ; jumptable            260     6 (fixed)
  4440                           ;	Chosen strategy is simple_byte
  4441                           
  4442                           	movf 0+(??_main+0)^080h+0,w
  4443  0340  084B               	opt asmopt_push
  4444                           	opt asmopt_off
  4445                           	xorlw	0^0	; case 0
  4446  0341  3A00               	skipnz
  4447  0342  1903               	goto	l4684
  4448  0343  28E0               	xorlw	1^0	; case 1
  4449  0344  3A01               	skipnz
  4450  0345  1903               	goto	l4692
  4451  0346  2915               	xorlw	2^1	; case 2
  4452  0347  3A03               	skipnz
  4453  0348  1903               	goto	l4706
  4454  0349  2969               	xorlw	10^2	; case 10
  4455  034A  3A08               	skipnz
  4456  034B  1903               	goto	l4722
  4457  034C  29CB               	xorlw	11^10	; case 11
  4458  034D  3A01               	skipnz
  4459  034E  1903               	goto	l4732
  4460  034F  2A16               	xorlw	20^11	; case 20
  4461  0350  3A1F               	skipnz
  4462  0351  1903               	goto	l4740
  4463  0352  2A50               	xorlw	21^20	; case 21
  4464  0353  3A01               	skipnz
  4465  0354  1903               	goto	l4756
  4466  0355  2ABF               	xorlw	22^21	; case 22
  4467  0356  3A03               	skipnz
  4468  0357  1903               	goto	l4764
  4469  0358  2AE0               	xorlw	23^22	; case 23
  4470  0359  3A01               	skipnz
  4471  035A  1903               	goto	l4772
  4472  035B  2B01               	goto	l4786
  4473  035C  2B34               	opt asmopt_pop
  4474                           
  4475                           	
  4476                           l58:	
  4477  035D                     	goto	l4786
  4478  035D  2B34               	line	221
  4479                           ;main.c: 221:     }
  4480                           	
  4481                           l74:	
  4482  035E                     	goto	l4786
  4483  035E  2B34               	
  4484                           l75:	
  4485  035F                     	line	222
  4486                           	
  4487                           l76:	
  4488  035F                     	global	start
  4489                           	ljmp	start
  4490  035F  120A  118A  2810   	opt stack 0
  4491                           GLOBAL	__end_of_main
  4492                           	__end_of_main:
  4493  0362                     	signat	_main,89
  4494                           	global	_uts_trigger
  4495                           
  4496 ;; *************** function _uts_trigger *****************
  4497 ;; Defined at:
  4498 ;;		line 74 in file "sensors.c"
  4499 ;; Parameters:    Size  Location     Type
  4500 ;;		None
  4501 ;; Auto vars:     Size  Location     Type
  4502 ;;		None
  4503 ;; Return value:  Size  Location     Type
  4504 ;;                  1    wreg      void 
  4505 ;; Registers used:
  4506 ;;		wreg
  4507 ;; Tracked objects:
  4508 ;;		On entry : 0/0
  4509 ;;		On exit  : 0/0
  4510 ;;		Unchanged: 0/0
  4511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4512 ;;      Params:         0       0       0       0       0
  4513 ;;      Locals:         0       0       0       0       0
  4514 ;;      Temps:          0       0       1       0       0
  4515 ;;      Totals:         0       0       1       0       0
  4516 ;;Total ram usage:        1 bytes
  4517 ;; Hardware stack levels used:    1
  4518 ;; Hardware stack levels required when called:    2
  4519 ;; This function calls:
  4520 ;;		Nothing
  4521 ;; This function is called by:
  4522 ;;		_main
  4523 ;; This function uses a non-reentrant model
  4524 ;;
  4525                           psect	text1,local,class=CODE,delta=2,merge=1,group=0
  4526                           	file	"sensors.c"
  4527                           	line	74
  4528                           global __ptext1
  4529                           __ptext1:	;psect for function _uts_trigger
  4530  08D9                     psect	text1
  4531                           	file	"sensors.c"
  4532                           	line	74
  4533                           	global	__size_of_uts_trigger
  4534                           	__size_of_uts_trigger	equ	__end_of_uts_trigger-_uts_trigger
  4535  0015                     	
  4536                           _uts_trigger:	
  4537  08D9                     ;incstack = 0
  4538                           	opt	stack 5
  4539                           ; Regs used in _uts_trigger: [wreg]
  4540                           	line	76
  4541                           	
  4542                           l3868:	
  4543  08D9                     ;sensors.c: 76:     PORTAbits.RA2 = 1;
  4544                           	bcf	status, 5	;RP0=0, select bank0
  4545  08D9  1283               	bcf	status, 6	;RP1=0, select bank0
  4546  08DA  1303               	bsf	(5),2	;volatile
  4547  08DB  1505               	line	77
  4548                           	
  4549                           l3870:	
  4550  08DC                     ;sensors.c: 77:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  4551                           	opt asmopt_push
  4552                           opt asmopt_off
  4553                           	movlw	15
  4554  08DC  300F               	bsf	status, 5	;RP0=1, select bank1
  4555  08DD  1683               	bcf	status, 6	;RP1=0, select bank1
  4556  08DE  1303               movwf	((??_uts_trigger+0)^080h+0),f
  4557  08DF  00A0               	u4367:
  4558  08E0                     decfsz	(??_uts_trigger+0)^080h+0,f
  4559  08E0  0BA0               	goto	u4367
  4560  08E1  28E0               	nop2
  4561  08E2  28E3               opt asmopt_pop
  4562                           
  4563                           	line	78
  4564                           	
  4565                           l3872:	
  4566  08E3                     ;sensors.c: 78:     PORTAbits.RA2 = 0;
  4567                           	bcf	status, 5	;RP0=0, select bank0
  4568  08E3  1283               	bcf	status, 6	;RP1=0, select bank0
  4569  08E4  1303               	bcf	(5),2	;volatile
  4570  08E5  1105               	line	79
  4571                           ;sensors.c: 79:     _delay((unsigned long)((10)*(20000000/4000000.0)));
  4572                           	opt asmopt_push
  4573                           opt asmopt_off
  4574                           	movlw	15
  4575  08E6  300F               	bsf	status, 5	;RP0=1, select bank1
  4576  08E7  1683               	bcf	status, 6	;RP1=0, select bank1
  4577  08E8  1303               movwf	((??_uts_trigger+0)^080h+0),f
  4578  08E9  00A0               	u4377:
  4579  08EA                     decfsz	(??_uts_trigger+0)^080h+0,f
  4580  08EA  0BA0               	goto	u4377
  4581  08EB  28EA               	nop2
  4582  08EC  28ED               opt asmopt_pop
  4583                           
  4584                           	line	80
  4585                           	
  4586                           l238:	
  4587  08ED                     	return
  4588  08ED  0008               	opt stack 0
  4589                           GLOBAL	__end_of_uts_trigger
  4590                           	__end_of_uts_trigger:
  4591  08EE                     	signat	_uts_trigger,89
  4592                           	global	_tmr_tick_init
  4593                           
  4594 ;; *************** function _tmr_tick_init *****************
  4595 ;; Defined at:
  4596 ;;		line 7 in file "tmr_tick.c"
  4597 ;; Parameters:    Size  Location     Type
  4598 ;;		None
  4599 ;; Auto vars:     Size  Location     Type
  4600 ;;		None
  4601 ;; Return value:  Size  Location     Type
  4602 ;;                  1    wreg      void 
  4603 ;; Registers used:
  4604 ;;		wreg, status,2, status,0
  4605 ;; Tracked objects:
  4606 ;;		On entry : 0/0
  4607 ;;		On exit  : 0/0
  4608 ;;		Unchanged: 0/0
  4609 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4610 ;;      Params:         0       0       0       0       0
  4611 ;;      Locals:         0       0       0       0       0
  4612 ;;      Temps:          0       0       0       0       0
  4613 ;;      Totals:         0       0       0       0       0
  4614 ;;Total ram usage:        0 bytes
  4615 ;; Hardware stack levels used:    1
  4616 ;; Hardware stack levels required when called:    2
  4617 ;; This function calls:
  4618 ;;		Nothing
  4619 ;; This function is called by:
  4620 ;;		_main
  4621 ;; This function uses a non-reentrant model
  4622 ;;
  4623                           psect	text2,local,class=CODE,delta=2,merge=1,group=0
  4624                           	file	"tmr_tick.c"
  4625                           	line	7
  4626                           global __ptext2
  4627                           __ptext2:	;psect for function _tmr_tick_init
  4628  08C4                     psect	text2
  4629                           	file	"tmr_tick.c"
  4630                           	line	7
  4631                           	global	__size_of_tmr_tick_init
  4632                           	__size_of_tmr_tick_init	equ	__end_of_tmr_tick_init-_tmr_tick_init
  4633  0015                     	
  4634                           _tmr_tick_init:	
  4635  08C4                     ;incstack = 0
  4636                           	opt	stack 5
  4637                           ; Regs used in _tmr_tick_init: [wreg+status,2+status,0]
  4638                           	line	9
  4639                           	
  4640                           l3738:	
  4641  08C4                     ;tmr_tick.c: 9:     INTCONbits.GIE = 0;
  4642                           	bcf	(11),7	;volatile
  4643  08C4  138B               	line	10
  4644                           ;tmr_tick.c: 10:     T1CONbits.TMR1GE = 0;
  4645                           	bcf	status, 5	;RP0=0, select bank0
  4646  08C5  1283               	bcf	status, 6	;RP1=0, select bank0
  4647  08C6  1303               	bcf	(16),6	;volatile
  4648  08C7  1310               	line	11
  4649                           ;tmr_tick.c: 11:     T1CONbits.TMR1ON = 0;
  4650                           	bcf	(16),0	;volatile
  4651  08C8  1010               	line	12
  4652                           ;tmr_tick.c: 12:     T1CONbits.TMR1CS = 0;
  4653                           	bcf	(16),1	;volatile
  4654  08C9  1090               	line	13
  4655                           	
  4656                           l3740:	
  4657  08CA                     ;tmr_tick.c: 13:     T1CONbits.T1CKPS = 0;
  4658                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
  4659  08CA  30CF               	andwf	(16),f	;volatile
  4660  08CB  0590               	line	14
  4661                           	
  4662                           l3742:	
  4663  08CC                     ;tmr_tick.c: 14:     TMR1H = ((0xFFFF-5000+1) >> 8) & 0x00FF;
  4664                           	movlw	low(0ECh)
  4665  08CC  30EC               	movwf	(15)	;volatile
  4666  08CD  008F               	line	15
  4667                           	
  4668                           l3744:	
  4669  08CE                     ;tmr_tick.c: 15:     TMR1L = ((0xFFFF-5000+1) >> 0) & 0x00FF;
  4670                           	movlw	low(078h)
  4671  08CE  3078               	movwf	(14)	;volatile
  4672  08CF  008E               	line	16
  4673                           	
  4674                           l3746:	
  4675  08D0                     ;tmr_tick.c: 16:     INTCONbits.PEIE = 1;
  4676                           	bsf	(11),6	;volatile
  4677  08D0  170B               	line	17
  4678                           	
  4679                           l3748:	
  4680  08D1                     ;tmr_tick.c: 17:     PIE1bits.TMR1IE = 1;
  4681                           	bsf	status, 5	;RP0=1, select bank1
  4682  08D1  1683               	bcf	status, 6	;RP1=0, select bank1
  4683  08D2  1303               	bsf	(140)^080h,0	;volatile
  4684  08D3  140C               	line	18
  4685                           	
  4686                           l3750:	
  4687  08D4                     ;tmr_tick.c: 18:     INTCONbits.GIE = 1;
  4688                           	bsf	(11),7	;volatile
  4689  08D4  178B               	line	19
  4690                           	
  4691                           l3752:	
  4692  08D5                     ;tmr_tick.c: 19:     T1CONbits.TMR1ON = 1;
  4693                           	bcf	status, 5	;RP0=0, select bank0
  4694  08D5  1283               	bcf	status, 6	;RP1=0, select bank0
  4695  08D6  1303               	bsf	(16),0	;volatile
  4696  08D7  1410               	line	20
  4697                           	
  4698                           l183:	
  4699  08D8                     	return
  4700  08D8  0008               	opt stack 0
  4701                           GLOBAL	__end_of_tmr_tick_init
  4702                           	__end_of_tmr_tick_init:
  4703  08D9                     	signat	_tmr_tick_init,89
  4704                           	global	_tag_false
  4705                           
  4706 ;; *************** function _tag_false *****************
  4707 ;; Defined at:
  4708 ;;		line 703 in file "rfid.c"
  4709 ;; Parameters:    Size  Location     Type
  4710 ;;  p1              1    wreg     PTR unsigned char 
  4711 ;;		 -> main@UID(7), 
  4712 ;;  p2              1    0[BANK1 ] PTR unsigned char 
  4713 ;;		 -> main@senha(6), 
  4714 ;; Auto vars:     Size  Location     Type
  4715 ;;  p1              1    4[BANK1 ] PTR unsigned char 
  4716 ;;		 -> main@UID(7), 
  4717 ;;  i               1    6[BANK1 ] unsigned char 
  4718 ;;  ret             1    5[BANK1 ] unsigned char 
  4719 ;; Return value:  Size  Location     Type
  4720 ;;                  1    wreg      unsigned char 
  4721 ;; Registers used:
  4722 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  4723 ;; Tracked objects:
  4724 ;;		On entry : 0/0
  4725 ;;		On exit  : 0/0
  4726 ;;		Unchanged: 0/0
  4727 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4728 ;;      Params:         0       0       1       0       0
  4729 ;;      Locals:         0       0       3       0       0
  4730 ;;      Temps:          0       0       3       0       0
  4731 ;;      Totals:         0       0       7       0       0
  4732 ;;Total ram usage:        7 bytes
  4733 ;; Hardware stack levels used:    1
  4734 ;; Hardware stack levels required when called:    2
  4735 ;; This function calls:
  4736 ;;		Nothing
  4737 ;; This function is called by:
  4738 ;;		_main
  4739 ;; This function uses a non-reentrant model
  4740 ;;
  4741                           psect	text3,local,class=CODE,delta=2,merge=1,group=0
  4742                           	file	"rfid.c"
  4743                           	line	703
  4744                           global __ptext3
  4745                           __ptext3:	;psect for function _tag_false
  4746  0A29                     psect	text3
  4747                           	file	"rfid.c"
  4748                           	line	703
  4749                           	global	__size_of_tag_false
  4750                           	__size_of_tag_false	equ	__end_of_tag_false-_tag_false
  4751  0031                     	
  4752                           _tag_false:	
  4753  0A29                     ;incstack = 0
  4754                           	opt	stack 5
  4755                           ; Regs used in _tag_false: [wreg-fsr0h+status,2+status,0]
  4756                           ;tag_false@p1 stored from wreg
  4757                           	bsf	status, 5	;RP0=1, select bank1
  4758  0A29  1683               	bcf	status, 6	;RP1=0, select bank1
  4759  0A2A  1303               	movwf	(tag_false@p1)^080h
  4760  0A2B  00A4               	line	705
  4761                           	
  4762                           l3850:	
  4763  0A2C                     ;rfid.c: 703: char tag_false(char* p1, char * p2);rfid.c: 704: {;rfid.c: 705:     char r
                                 et = 0;
  4764                           	clrf	(tag_false@ret)^080h
  4765  0A2C  01A5               	line	707
  4766                           ;rfid.c: 707:     for(char i = 0; i<6 ; i++)
  4767                           	clrf	(tag_false@i)^080h
  4768  0A2D  01A6               	
  4769                           l3852:	
  4770  0A2E                     	movlw	low(06h)
  4771  0A2E  3006               	subwf	(tag_false@i)^080h,w
  4772  0A2F  0226               	skipc
  4773  0A30  1C03               	goto	u3091
  4774  0A31  2A33               	goto	u3090
  4775  0A32  2A34               u3091:
  4776  0A33                     	goto	l3856
  4777  0A33  2A36               u3090:
  4778  0A34                     	goto	l3864
  4779  0A34  2A57               	
  4780                           l3854:	
  4781  0A35                     	goto	l3864
  4782  0A35  2A57               	
  4783                           l385:	
  4784  0A36                     	line	709
  4785                           	
  4786                           l3856:	
  4787  0A36                     ;rfid.c: 708:     {;rfid.c: 709:         if(p1[i] != p2[i])
  4788                           	movf	(tag_false@i)^080h,w
  4789  0A36  0826               	addwf	(tag_false@p2)^080h,w
  4790  0A37  0720               	movwf	(??_tag_false+0)^080h+0
  4791  0A38  00A1               	movf	0+(??_tag_false+0)^080h+0,w
  4792  0A39  0821               	movwf	fsr
  4793  0A3A  0084               	bsf	status, 7	;select IRP bank2
  4794  0A3B  1783               	movf	indf,w
  4795  0A3C  0800               	movwf	(??_tag_false+1)^080h+0
  4796  0A3D  00A2               	movf	(tag_false@i)^080h,w
  4797  0A3E  0826               	addwf	(tag_false@p1)^080h,w
  4798  0A3F  0724               	movwf	(??_tag_false+2)^080h+0
  4799  0A40  00A3               	movf	0+(??_tag_false+2)^080h+0,w
  4800  0A41  0823               	movwf	fsr0
  4801  0A42  0084               	movf	indf,w
  4802  0A43  0800               	xorwf	(??_tag_false+1)^080h+0,w
  4803  0A44  0622               	skipnz
  4804  0A45  1903               	goto	u3101
  4805  0A46  2A48               	goto	u3100
  4806  0A47  2A49               u3101:
  4807  0A48                     	goto	l3860
  4808  0A48  2A4C               u3100:
  4809  0A49                     	line	711
  4810                           	
  4811                           l3858:	
  4812  0A49                     ;rfid.c: 710:         {;rfid.c: 711:          ret = 1;
  4813                           	clrf	(tag_false@ret)^080h
  4814  0A49  01A5               	incf	(tag_false@ret)^080h,f
  4815  0A4A  0AA5               	goto	l3860
  4816  0A4B  2A4C               	line	712
  4817                           ;rfid.c: 712:         }
  4818                           	
  4819                           l387:	
  4820  0A4C                     	line	713
  4821                           	
  4822                           l3860:	
  4823  0A4C                     ;rfid.c: 713:     }
  4824                           	movlw	low(01h)
  4825  0A4C  3001               	movwf	(??_tag_false+0)^080h+0
  4826  0A4D  00A1               	movf	(??_tag_false+0)^080h+0,w
  4827  0A4E  0821               	addwf	(tag_false@i)^080h,f
  4828  0A4F  07A6               	
  4829                           l3862:	
  4830  0A50                     	movlw	low(06h)
  4831  0A50  3006               	subwf	(tag_false@i)^080h,w
  4832  0A51  0226               	skipc
  4833  0A52  1C03               	goto	u3111
  4834  0A53  2A55               	goto	u3110
  4835  0A54  2A56               u3111:
  4836  0A55                     	goto	l3856
  4837  0A55  2A36               u3110:
  4838  0A56                     	goto	l3864
  4839  0A56  2A57               	
  4840                           l386:	
  4841  0A57                     	line	715
  4842                           	
  4843                           l3864:	
  4844  0A57                     ;rfid.c: 715:     return (ret);
  4845                           	movf	(tag_false@ret)^080h,w
  4846  0A57  0825               	goto	l388
  4847  0A58  2A59               	
  4848                           l3866:	
  4849  0A59                     	line	716
  4850                           	
  4851                           l388:	
  4852  0A59                     	return
  4853  0A59  0008               	opt stack 0
  4854                           GLOBAL	__end_of_tag_false
  4855                           	__end_of_tag_false:
  4856  0A5A                     	signat	_tag_false,8313
  4857                           	global	_spi_hardware_disable
  4858                           
  4859 ;; *************** function _spi_hardware_disable *****************
  4860 ;; Defined at:
  4861 ;;		line 24 in file "spi.c"
  4862 ;; Parameters:    Size  Location     Type
  4863 ;;		None
  4864 ;; Auto vars:     Size  Location     Type
  4865 ;;		None
  4866 ;; Return value:  Size  Location     Type
  4867 ;;                  1    wreg      void 
  4868 ;; Registers used:
  4869 ;;		status,2
  4870 ;; Tracked objects:
  4871 ;;		On entry : 0/0
  4872 ;;		On exit  : 0/0
  4873 ;;		Unchanged: 0/0
  4874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4875 ;;      Params:         0       0       0       0       0
  4876 ;;      Locals:         0       0       0       0       0
  4877 ;;      Temps:          0       0       0       0       0
  4878 ;;      Totals:         0       0       0       0       0
  4879 ;;Total ram usage:        0 bytes
  4880 ;; Hardware stack levels used:    1
  4881 ;; Hardware stack levels required when called:    2
  4882 ;; This function calls:
  4883 ;;		Nothing
  4884 ;; This function is called by:
  4885 ;;		_main
  4886 ;; This function uses a non-reentrant model
  4887 ;;
  4888                           psect	text4,local,class=CODE,delta=2,merge=1,group=0
  4889                           	file	"spi.c"
  4890                           	line	24
  4891                           global __ptext4
  4892                           __ptext4:	;psect for function _spi_hardware_disable
  4893  087B                     psect	text4
  4894                           	file	"spi.c"
  4895                           	line	24
  4896                           	global	__size_of_spi_hardware_disable
  4897                           	__size_of_spi_hardware_disable	equ	__end_of_spi_hardware_disable-_spi_hardware_disable

  4898  000E                     	
  4899                           _spi_hardware_disable:	
  4900  087B                     ;incstack = 0
  4901                           	opt	stack 5
  4902                           ; Regs used in _spi_hardware_disable: [status,2]
  4903                           	line	26
  4904                           	
  4905                           l3654:	
  4906  087B                     ;spi.c: 26:     C2ON = 0;
  4907                           	bcf	status, 5	;RP0=0, select bank2
  4908  087B  1283               	bsf	status, 6	;RP1=1, select bank2
  4909  087C  1703               	bcf	(2119/8)^0100h,(2119)&7	;volatile
  4910  087D  1388               	line	27
  4911                           	
  4912                           l3656:	
  4913  087E                     ;spi.c: 27:     ANSELH = 0;
  4914                           	bsf	status, 5	;RP0=1, select bank3
  4915  087E  1683               	bsf	status, 6	;RP1=1, select bank3
  4916  087F  1703               	clrf	(393)^0180h	;volatile
  4917  0880  0189               	line	28
  4918                           ;spi.c: 28:     ANSEL = 0;
  4919                           	clrf	(392)^0180h	;volatile
  4920  0881  0188               	line	29
  4921                           	
  4922                           l3658:	
  4923  0882                     ;spi.c: 29:     SSPEN = 0;
  4924                           	bcf	status, 5	;RP0=0, select bank0
  4925  0882  1283               	bcf	status, 6	;RP1=0, select bank0
  4926  0883  1303               	bcf	(165/8),(165)&7	;volatile
  4927  0884  1294               	line	30
  4928                           	
  4929                           l3660:	
  4930  0885                     ;spi.c: 30:     SSPIE = 0;
  4931                           	bsf	status, 5	;RP0=1, select bank1
  4932  0885  1683               	bcf	status, 6	;RP1=0, select bank1
  4933  0886  1303               	bcf	(1123/8)^080h,(1123)&7	;volatile
  4934  0887  118C               	line	31
  4935                           	
  4936                           l431:	
  4937  0888                     	return
  4938  0888  0008               	opt stack 0
  4939                           GLOBAL	__end_of_spi_hardware_disable
  4940                           	__end_of_spi_hardware_disable:
  4941  0889                     	signat	_spi_hardware_disable,89
  4942                           	global	_spiSoftIniciar
  4943                           
  4944 ;; *************** function _spiSoftIniciar *****************
  4945 ;; Defined at:
  4946 ;;		line 33 in file "spi.c"
  4947 ;; Parameters:    Size  Location     Type
  4948 ;;		None
  4949 ;; Auto vars:     Size  Location     Type
  4950 ;;		None
  4951 ;; Return value:  Size  Location     Type
  4952 ;;                  1    wreg      void 
  4953 ;; Registers used:
  4954 ;;		wreg
  4955 ;; Tracked objects:
  4956 ;;		On entry : 0/0
  4957 ;;		On exit  : 0/0
  4958 ;;		Unchanged: 0/0
  4959 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  4960 ;;      Params:         0       0       0       0       0
  4961 ;;      Locals:         0       0       0       0       0
  4962 ;;      Temps:          0       0       2       0       0
  4963 ;;      Totals:         0       0       2       0       0
  4964 ;;Total ram usage:        2 bytes
  4965 ;; Hardware stack levels used:    1
  4966 ;; Hardware stack levels required when called:    2
  4967 ;; This function calls:
  4968 ;;		Nothing
  4969 ;; This function is called by:
  4970 ;;		_main
  4971 ;; This function uses a non-reentrant model
  4972 ;;
  4973                           psect	text5,local,class=CODE,delta=2,merge=1,group=0
  4974                           	line	33
  4975                           global __ptext5
  4976                           __ptext5:	;psect for function _spiSoftIniciar
  4977  096E                     psect	text5
  4978                           	file	"spi.c"
  4979                           	line	33
  4980                           	global	__size_of_spiSoftIniciar
  4981                           	__size_of_spiSoftIniciar	equ	__end_of_spiSoftIniciar-_spiSoftIniciar
  4982  001E                     	
  4983                           _spiSoftIniciar:	
  4984  096E                     ;incstack = 0
  4985                           	opt	stack 5
  4986                           ; Regs used in _spiSoftIniciar: [wreg]
  4987                           	line	36
  4988                           	
  4989                           l3662:	
  4990  096E                     ;spi.c: 36:  TRISCbits.TRISC4 = 1;
  4991                           	bsf	status, 5	;RP0=1, select bank1
  4992  096E  1683               	bcf	status, 6	;RP1=0, select bank1
  4993  096F  1303               	bsf	(135)^080h,4	;volatile
  4994  0970  1607               	line	37
  4995                           ;spi.c: 37:  TRISCbits.TRISC5 = 0;
  4996                           	bcf	(135)^080h,5	;volatile
  4997  0971  1287               	line	39
  4998                           ;spi.c: 39:  TRISCbits.TRISC3 = 0;
  4999                           	bcf	(135)^080h,3	;volatile
  5000  0972  1187               	line	40
  5001                           ;spi.c: 40:  TRISAbits.TRISA5 = 0;
  5002                           	bcf	(133)^080h,5	;volatile
  5003  0973  1285               	line	41
  5004                           ;spi.c: 41:  PORTCbits.RC5 = 0;
  5005                           	bcf	status, 5	;RP0=0, select bank0
  5006  0974  1283               	bcf	status, 6	;RP1=0, select bank0
  5007  0975  1303               	bcf	(7),5	;volatile
  5008  0976  1287               	line	42
  5009                           ;spi.c: 42:  PORTCbits.RC3 = 0;
  5010                           	bcf	(7),3	;volatile
  5011  0977  1187               	line	43
  5012                           ;spi.c: 43:  PORTAbits.RA5 = 0;
  5013                           	bcf	(5),5	;volatile
  5014  0978  1285               	line	45
  5015                           	
  5016                           l3664:	
  5017  0979                     ;spi.c: 45:  _delay((unsigned long)((100)*(20000000/4000000.0)));
  5018                           	opt asmopt_push
  5019                           opt asmopt_off
  5020                           	movlw	165
  5021  0979  30A5               	bsf	status, 5	;RP0=1, select bank1
  5022  097A  1683               	bcf	status, 6	;RP1=0, select bank1
  5023  097B  1303               movwf	((??_spiSoftIniciar+0)^080h+0),f
  5024  097C  00A0               	u4387:
  5025  097D                     decfsz	(??_spiSoftIniciar+0)^080h+0,f
  5026  097D  0BA0               	goto	u4387
  5027  097E  297D               	nop2
  5028  097F  2980               opt asmopt_pop
  5029                           
  5030                           	line	47
  5031                           ;spi.c: 47:  _delay((unsigned long)((1)*(20000000/4000.0)));
  5032                           	opt asmopt_push
  5033                           opt asmopt_off
  5034                           movlw	7
  5035  0980  3007               	bsf	status, 5	;RP0=1, select bank1
  5036  0981  1683               	bcf	status, 6	;RP1=0, select bank1
  5037  0982  1303               movwf	((??_spiSoftIniciar+0)^080h+0+1),f
  5038  0983  00A1               	movlw	124
  5039  0984  307C               movwf	((??_spiSoftIniciar+0)^080h+0),f
  5040  0985  00A0               	u4397:
  5041  0986                     decfsz	((??_spiSoftIniciar+0)^080h+0),f
  5042  0986  0BA0               	goto	u4397
  5043  0987  2986               	decfsz	((??_spiSoftIniciar+0)^080h+0+1),f
  5044  0988  0BA1               	goto	u4397
  5045  0989  2986               	nop
  5046  098A  0000               opt asmopt_pop
  5047                           
  5048                           	line	48
  5049                           	
  5050                           l434:	
  5051  098B                     	return
  5052  098B  0008               	opt stack 0
  5053                           GLOBAL	__end_of_spiSoftIniciar
  5054                           	__end_of_spiSoftIniciar:
  5055  098C                     	signat	_spiSoftIniciar,89
  5056                           	global	_sensors_init
  5057                           
  5058 ;; *************** function _sensors_init *****************
  5059 ;; Defined at:
  5060 ;;		line 22 in file "sensors.c"
  5061 ;; Parameters:    Size  Location     Type
  5062 ;;		None
  5063 ;; Auto vars:     Size  Location     Type
  5064 ;;		None
  5065 ;; Return value:  Size  Location     Type
  5066 ;;                  1    wreg      void 
  5067 ;; Registers used:
  5068 ;;		wreg, status,2, status,0
  5069 ;; Tracked objects:
  5070 ;;		On entry : 0/0
  5071 ;;		On exit  : 0/0
  5072 ;;		Unchanged: 0/0
  5073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5074 ;;      Params:         0       0       0       0       0
  5075 ;;      Locals:         0       0       0       0       0
  5076 ;;      Temps:          0       0       0       0       0
  5077 ;;      Totals:         0       0       0       0       0
  5078 ;;Total ram usage:        0 bytes
  5079 ;; Hardware stack levels used:    1
  5080 ;; Hardware stack levels required when called:    2
  5081 ;; This function calls:
  5082 ;;		Nothing
  5083 ;; This function is called by:
  5084 ;;		_main
  5085 ;; This function uses a non-reentrant model
  5086 ;;
  5087                           psect	text6,local,class=CODE,delta=2,merge=1,group=0
  5088                           	file	"sensors.c"
  5089                           	line	22
  5090                           global __ptext6
  5091                           __ptext6:	;psect for function _sensors_init
  5092  0935                     psect	text6
  5093                           	file	"sensors.c"
  5094                           	line	22
  5095                           	global	__size_of_sensors_init
  5096                           	__size_of_sensors_init	equ	__end_of_sensors_init-_sensors_init
  5097  001C                     	
  5098                           _sensors_init:	
  5099  0935                     ;incstack = 0
  5100                           	opt	stack 5
  5101                           ; Regs used in _sensors_init: [wreg+status,2+status,0]
  5102                           	line	24
  5103                           	
  5104                           l3708:	
  5105  0935                     ;sensors.c: 24:     PORTCbits.RC0 = 0;
  5106                           	bcf	status, 5	;RP0=0, select bank0
  5107  0935  1283               	bcf	status, 6	;RP1=0, select bank0
  5108  0936  1303               	bcf	(7),0	;volatile
  5109  0937  1007               	line	25
  5110                           ;sensors.c: 25:     PORTAbits.RA3 = 0;
  5111                           	bcf	(5),3	;volatile
  5112  0938  1185               	line	28
  5113                           	
  5114                           l3710:	
  5115  0939                     ;sensors.c: 28:     t_sensor = 0;
  5116                           	clrf	(_t_sensor)
  5117  0939  01CD               	clrf	(_t_sensor+1)
  5118  093A  01CE               	line	29
  5119                           ;sensors.c: 29:     ret = 0;
  5120                           	clrf	(_ret)
  5121  093B  01D0               	line	31
  5122                           	
  5123                           l3712:	
  5124  093C                     ;sensors.c: 31:     INTCONbits.GIE = 0;
  5125                           	bcf	(11),7	;volatile
  5126  093C  138B               	line	33
  5127                           	
  5128                           l3714:	
  5129  093D                     ;sensors.c: 33:     TRISAbits.TRISA3 = 1;
  5130                           	bsf	status, 5	;RP0=1, select bank1
  5131  093D  1683               	bcf	status, 6	;RP1=0, select bank1
  5132  093E  1303               	bsf	(133)^080h,3	;volatile
  5133  093F  1585               	line	34
  5134                           	
  5135                           l3716:	
  5136  0940                     ;sensors.c: 34:     TRISCbits.TRISC0 = 0;
  5137                           	bcf	(135)^080h,0	;volatile
  5138  0940  1007               	line	35
  5139                           	
  5140                           l3718:	
  5141  0941                     ;sensors.c: 35:     TRISAbits.TRISA2 = 0;
  5142                           	bcf	(133)^080h,2	;volatile
  5143  0941  1105               	line	37
  5144                           	
  5145                           l3720:	
  5146  0942                     ;sensors.c: 37:     T1CONbits.TMR1CS = 0;
  5147                           	bcf	status, 5	;RP0=0, select bank0
  5148  0942  1283               	bcf	status, 6	;RP1=0, select bank0
  5149  0943  1303               	bcf	(16),1	;volatile
  5150  0944  1090               	line	38
  5151                           	
  5152                           l3722:	
  5153  0945                     ;sensors.c: 38:     T1CONbits.TMR1GE = 0;
  5154                           	bcf	(16),6	;volatile
  5155  0945  1310               	line	39
  5156                           	
  5157                           l3724:	
  5158  0946                     ;sensors.c: 39:     T1CONbits.T1CKPS = 0;
  5159                           	movlw	((0 & ((1<<2)-1))<<4)|not (((1<<2)-1)<<4)
  5160  0946  30CF               	andwf	(16),f	;volatile
  5161  0947  0590               	line	40
  5162                           	
  5163                           l3726:	
  5164  0948                     ;sensors.c: 40:     T1CONbits.TMR1ON = 0;
  5165                           	bcf	(16),0	;volatile
  5166  0948  1010               	line	42
  5167                           	
  5168                           l3728:	
  5169  0949                     ;sensors.c: 42:     TRISBbits.TRISB7 = 1;
  5170                           	bsf	status, 5	;RP0=1, select bank1
  5171  0949  1683               	bcf	status, 6	;RP1=0, select bank1
  5172  094A  1303               	bsf	(134)^080h,7	;volatile
  5173  094B  1786               	line	43
  5174                           	
  5175                           l3730:	
  5176  094C                     ;sensors.c: 43:     INTCONbits.RBIE = 1;
  5177                           	bsf	(11),3	;volatile
  5178  094C  158B               	line	44
  5179                           	
  5180                           l3732:	
  5181  094D                     ;sensors.c: 44:     IOCBbits.IOCB7 = 1;
  5182                           	bsf	(150)^080h,7	;volatile
  5183  094D  1796               	line	46
  5184                           	
  5185                           l3734:	
  5186  094E                     ;sensors.c: 46:     INTCONbits.PEIE = 1;
  5187                           	bsf	(11),6	;volatile
  5188  094E  170B               	line	47
  5189                           	
  5190                           l3736:	
  5191  094F                     ;sensors.c: 47:     INTCONbits.GIE = 1;
  5192                           	bsf	(11),7	;volatile
  5193  094F  178B               	line	48
  5194                           	
  5195                           l229:	
  5196  0950                     	return
  5197  0950  0008               	opt stack 0
  5198                           GLOBAL	__end_of_sensors_init
  5199                           	__end_of_sensors_init:
  5200  0951                     	signat	_sensors_init,89
  5201                           	global	_prs_detect
  5202                           
  5203 ;; *************** function _prs_detect *****************
  5204 ;; Defined at:
  5205 ;;		line 50 in file "sensors.c"
  5206 ;; Parameters:    Size  Location     Type
  5207 ;;		None
  5208 ;; Auto vars:     Size  Location     Type
  5209 ;;		None
  5210 ;; Return value:  Size  Location     Type
  5211 ;;                  1    wreg      unsigned char 
  5212 ;; Registers used:
  5213 ;;		wreg, status,2, status,0, pclath, cstack
  5214 ;; Tracked objects:
  5215 ;;		On entry : 0/0
  5216 ;;		On exit  : 0/0
  5217 ;;		Unchanged: 0/0
  5218 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5219 ;;      Params:         0       0       0       0       0
  5220 ;;      Locals:         0       0       0       0       0
  5221 ;;      Temps:          0       0       0       0       0
  5222 ;;      Totals:         0       0       0       0       0
  5223 ;;Total ram usage:        0 bytes
  5224 ;; Hardware stack levels used:    1
  5225 ;; Hardware stack levels required when called:    3
  5226 ;; This function calls:
  5227 ;;		_delay_ms
  5228 ;; This function is called by:
  5229 ;;		_main
  5230 ;; This function uses a non-reentrant model
  5231 ;;
  5232                           psect	text7,local,class=CODE,delta=2,merge=1,group=0
  5233                           	line	50
  5234                           global __ptext7
  5235                           __ptext7:	;psect for function _prs_detect
  5236  09FA                     psect	text7
  5237                           	file	"sensors.c"
  5238                           	line	50
  5239                           	global	__size_of_prs_detect
  5240                           	__size_of_prs_detect	equ	__end_of_prs_detect-_prs_detect
  5241  002F                     	
  5242                           _prs_detect:	
  5243  09FA                     ;incstack = 0
  5244                           	opt	stack 4
  5245                           ; Regs used in _prs_detect: [wreg+status,2+status,0+pclath+cstack]
  5246                           	line	52
  5247                           	
  5248                           l3874:	
  5249  09FA                     ;sensors.c: 52:     if(PORTAbits.RA3 == 1)
  5250                           	bcf	status, 5	;RP0=0, select bank0
  5251  09FA  1283               	bcf	status, 6	;RP1=0, select bank0
  5252  09FB  1303               	btfss	(5),3	;volatile
  5253  09FC  1D85               	goto	u3121
  5254  09FD  29FF               	goto	u3120
  5255  09FE  2A00               u3121:
  5256  09FF                     	goto	l3880
  5257  09FF  2A06               u3120:
  5258  0A00                     	line	54
  5259                           	
  5260                           l3876:	
  5261  0A00                     ;sensors.c: 53:     {;sensors.c: 54:         t_sensor = 3000;
  5262                           	movlw	0B8h
  5263  0A00  30B8               	movwf	(_t_sensor)
  5264  0A01  00CD               	movlw	0Bh
  5265  0A02  300B               	movwf	((_t_sensor))+1
  5266  0A03  00CE               	line	55
  5267                           	
  5268                           l3878:	
  5269  0A04                     ;sensors.c: 55:         PORTCbits.RC0 = 1;
  5270                           	bsf	(7),0	;volatile
  5271  0A04  1407               	line	56
  5272                           ;sensors.c: 56:     }
  5273                           	goto	l3888
  5274  0A05  2A22               	line	58
  5275                           ;sensors.c: 58:     else
  5276                           	
  5277                           l232:	
  5278  0A06                     	line	60
  5279                           	
  5280                           l3880:	
  5281  0A06                     ;sensors.c: 59:     {;sensors.c: 60:         --t_sensor;
  5282                           	movlw	0FFh
  5283  0A06  30FF               	addwf	(_t_sensor),f
  5284  0A07  07CD               	skipnc
  5285  0A08  1803               	incf	(_t_sensor+1),f
  5286  0A09  0ACE               	movlw	0FFh
  5287  0A0A  30FF               	addwf	(_t_sensor+1),f
  5288  0A0B  07CE               	line	61
  5289                           	
  5290                           l3882:	
  5291  0A0C                     ;sensors.c: 61:         delay_ms(1);
  5292                           	movlw	01h
  5293  0A0C  3001               	bsf	status, 5	;RP0=1, select bank1
  5294  0A0D  1683               	bcf	status, 6	;RP1=0, select bank1
  5295  0A0E  1303               	movwf	(delay_ms@t)^080h
  5296  0A0F  00A0               	movlw	0
  5297  0A10  3000               	movwf	((delay_ms@t)^080h)+1
  5298  0A11  00A1               	fcall	_delay_ms
  5299  0A12  120A  158A  218C  120A  158A  	line	63
  5300                           	
  5301                           l3884:	
  5302  0A17                     ;sensors.c: 63:         if(t_sensor == 0)
  5303                           	bcf	status, 5	;RP0=0, select bank0
  5304  0A17  1283               	bcf	status, 6	;RP1=0, select bank0
  5305  0A18  1303               	movf	((_t_sensor)),w
  5306  0A19  084D               iorwf	((_t_sensor+1)),w
  5307  0A1A  044E               	btfss	status,2
  5308  0A1B  1D03               	goto	u3131
  5309  0A1C  2A1E               	goto	u3130
  5310  0A1D  2A1F               u3131:
  5311  0A1E                     	goto	l3888
  5312  0A1E  2A22               u3130:
  5313  0A1F                     	line	65
  5314                           	
  5315                           l3886:	
  5316  0A1F                     ;sensors.c: 64:         {;sensors.c: 65:             PORTCbits.RC0 = 0;
  5317                           	bcf	(7),0	;volatile
  5318  0A1F  1007               	goto	l3888
  5319  0A20  2A22               	line	66
  5320                           ;sensors.c: 66:         }
  5321                           	
  5322                           l234:	
  5323  0A21                     	goto	l3888
  5324  0A21  2A22               	line	67
  5325                           ;sensors.c: 67:     }
  5326                           	
  5327                           l233:	
  5328  0A22                     	line	69
  5329                           	
  5330                           l3888:	
  5331  0A22                     ;sensors.c: 69:     ret = PORTCbits.RC0;
  5332                           	movlw	0
  5333  0A22  3000               	btfsc	(7),0	;volatile
  5334  0A23  1807               	movlw	1
  5335  0A24  3001               	movwf	(_ret)
  5336  0A25  00D0               	line	71
  5337                           	
  5338                           l3890:	
  5339  0A26                     ;sensors.c: 71:     return( ret );
  5340                           	movf	(_ret),w
  5341  0A26  0850               	goto	l235
  5342  0A27  2A28               	
  5343                           l3892:	
  5344  0A28                     	line	72
  5345                           	
  5346                           l235:	
  5347  0A28                     	return
  5348  0A28  0008               	opt stack 0
  5349                           GLOBAL	__end_of_prs_detect
  5350                           	__end_of_prs_detect:
  5351  0A29                     	signat	_prs_detect,89
  5352                           	global	_delay_ms
  5353                           
  5354 ;; *************** function _delay_ms *****************
  5355 ;; Defined at:
  5356 ;;		line 12 in file "delay.c"
  5357 ;; Parameters:    Size  Location     Type
  5358 ;;  t               2    0[BANK1 ] unsigned int 
  5359 ;; Auto vars:     Size  Location     Type
  5360 ;;		None
  5361 ;; Return value:  Size  Location     Type
  5362 ;;                  1    wreg      void 
  5363 ;; Registers used:
  5364 ;;		wreg, status,2, status,0
  5365 ;; Tracked objects:
  5366 ;;		On entry : 0/0
  5367 ;;		On exit  : 0/0
  5368 ;;		Unchanged: 0/0
  5369 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5370 ;;      Params:         0       0       2       0       0
  5371 ;;      Locals:         0       0       0       0       0
  5372 ;;      Temps:          0       0       2       0       0
  5373 ;;      Totals:         0       0       4       0       0
  5374 ;;Total ram usage:        4 bytes
  5375 ;; Hardware stack levels used:    1
  5376 ;; Hardware stack levels required when called:    2
  5377 ;; This function calls:
  5378 ;;		Nothing
  5379 ;; This function is called by:
  5380 ;;		_main
  5381 ;;		_prs_detect
  5382 ;; This function uses a non-reentrant model
  5383 ;;
  5384                           psect	text8,local,class=CODE,delta=2,merge=1,group=0
  5385                           	file	"delay.c"
  5386                           	line	12
  5387                           global __ptext8
  5388                           __ptext8:	;psect for function _delay_ms
  5389  098C                     psect	text8
  5390                           	file	"delay.c"
  5391                           	line	12
  5392                           	global	__size_of_delay_ms
  5393                           	__size_of_delay_ms	equ	__end_of_delay_ms-_delay_ms
  5394  001F                     	
  5395                           _delay_ms:	
  5396  098C                     ;incstack = 0
  5397                           	opt	stack 4
  5398                           ; Regs used in _delay_ms: [wreg+status,2+status,0]
  5399                           	line	14
  5400                           	
  5401                           l3418:	
  5402  098C                     ;delay.c: 12: void delay_ms( unsigned int t );delay.c: 13: {;delay.c: 14:     while( t )
                                 
  5403                           	goto	l3422
  5404  098C  29A1               	
  5405                           l82:	
  5406  098D                     	line	16
  5407                           	
  5408                           l3420:	
  5409  098D                     ;delay.c: 15:     {;delay.c: 16:         _delay((unsigned long)((1)*(20000000/4000.0)));
                                 
  5410                           	opt asmopt_push
  5411                           opt asmopt_off
  5412                           movlw	7
  5413  098D  3007               	bsf	status, 5	;RP0=1, select bank1
  5414  098E  1683               	bcf	status, 6	;RP1=0, select bank1
  5415  098F  1303               movwf	((??_delay_ms+0)^080h+0+1),f
  5416  0990  00A3               	movlw	124
  5417  0991  307C               movwf	((??_delay_ms+0)^080h+0),f
  5418  0992  00A2               	u4407:
  5419  0993                     decfsz	((??_delay_ms+0)^080h+0),f
  5420  0993  0BA2               	goto	u4407
  5421  0994  2993               	decfsz	((??_delay_ms+0)^080h+0+1),f
  5422  0995  0BA3               	goto	u4407
  5423  0996  2993               	nop
  5424  0997  0000               opt asmopt_pop
  5425                           
  5426                           	line	17
  5427                           ;delay.c: 17:         --t;
  5428                           	movlw	01h
  5429  0998  3001               	bsf	status, 5	;RP0=1, select bank1
  5430  0999  1683               	bcf	status, 6	;RP1=0, select bank1
  5431  099A  1303               	subwf	(delay_ms@t)^080h,f
  5432  099B  02A0               	movlw	0
  5433  099C  3000               	skipc
  5434  099D  1C03               	decf	(delay_ms@t+1)^080h,f
  5435  099E  03A1               	subwf	(delay_ms@t+1)^080h,f
  5436  099F  02A1               	goto	l3422
  5437  09A0  29A1               	line	18
  5438                           ;delay.c: 18:     }
  5439                           	
  5440                           l81:	
  5441  09A1                     	line	14
  5442                           	
  5443                           l3422:	
  5444  09A1                     ;delay.c: 14:     while( t )
  5445                           	bsf	status, 5	;RP0=1, select bank1
  5446  09A1  1683               	bcf	status, 6	;RP1=0, select bank1
  5447  09A2  1303               	movf	((delay_ms@t)^080h),w
  5448  09A3  0820               iorwf	((delay_ms@t+1)^080h),w
  5449  09A4  0421               	btfss	status,2
  5450  09A5  1D03               	goto	u2611
  5451  09A6  29A8               	goto	u2610
  5452  09A7  29A9               u2611:
  5453  09A8                     	goto	l3420
  5454  09A8  298D               u2610:
  5455  09A9                     	goto	l84
  5456  09A9  29AA               	
  5457                           l83:	
  5458  09AA                     	line	19
  5459                           	
  5460                           l84:	
  5461  09AA                     	return
  5462  09AA  0008               	opt stack 0
  5463                           GLOBAL	__end_of_delay_ms
  5464                           	__end_of_delay_ms:
  5465  09AB                     	signat	_delay_ms,4217
  5466                           	global	_procura_tag
  5467                           
  5468 ;; *************** function _procura_tag *****************
  5469 ;; Defined at:
  5470 ;;		line 317 in file "rfid.c"
  5471 ;; Parameters:    Size  Location     Type
  5472 ;;  modo            1    wreg     unsigned char 
  5473 ;;  data            2   27[BANK1 ] PTR unsigned char 
  5474 ;;		 -> TAG(5), main@TAG(5), 
  5475 ;; Auto vars:     Size  Location     Type
  5476 ;;  modo            1   31[BANK1 ] unsigned char 
  5477 ;;  len             1   33[BANK1 ] unsigned char 
  5478 ;;  status          1   32[BANK1 ] unsigned char 
  5479 ;; Return value:  Size  Location     Type
  5480 ;;                  1    wreg      unsigned char 
  5481 ;; Registers used:
  5482 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5483 ;; Tracked objects:
  5484 ;;		On entry : 0/0
  5485 ;;		On exit  : 0/0
  5486 ;;		Unchanged: 0/0
  5487 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5488 ;;      Params:         0       0       2       0       0
  5489 ;;      Locals:         0       0       3       0       0
  5490 ;;      Temps:          0       0       2       0       0
  5491 ;;      Totals:         0       0       7       0       0
  5492 ;;Total ram usage:        7 bytes
  5493 ;; Hardware stack levels used:    1
  5494 ;; Hardware stack levels required when called:    6
  5495 ;; This function calls:
  5496 ;;		_spiSoftTxCmd
  5497 ;;		_spiSoftTxDat
  5498 ;;		_tagTxCmd
  5499 ;; This function is called by:
  5500 ;;		_main
  5501 ;;		_rfid_read
  5502 ;; This function uses a non-reentrant model
  5503 ;;
  5504                           psect	text9,local,class=CODE,delta=2,merge=1,group=0
  5505                           	file	"rfid.c"
  5506                           	line	317
  5507                           global __ptext9
  5508                           __ptext9:	;psect for function _procura_tag
  5509  0BDD                     psect	text9
  5510                           	file	"rfid.c"
  5511                           	line	317
  5512                           	global	__size_of_procura_tag
  5513                           	__size_of_procura_tag	equ	__end_of_procura_tag-_procura_tag
  5514  004A                     	
  5515                           _procura_tag:	
  5516  0BDD                     ;incstack = 0
  5517                           	opt	stack 1
  5518                           ; Regs used in _procura_tag: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5519                           ;procura_tag@modo stored from wreg
  5520                           	bsf	status, 5	;RP0=1, select bank1
  5521  0BDD  1683               	bcf	status, 6	;RP1=0, select bank1
  5522  0BDE  1303               	movwf	(procura_tag@modo)^080h
  5523  0BDF  00BF               	line	321
  5524                           	
  5525                           l4562:	
  5526  0BE0                     ;rfid.c: 317: char procura_tag(char modo, char *data);rfid.c: 318: {;rfid.c: 319:  char 
                                 status, len;;rfid.c: 321:  spiSoftTxCmd(0x0D, 0);
  5527                           	clrf	(spiSoftTxCmd@oper)^080h
  5528  0BE0  01A0               	movlw	low(0Dh)
  5529  0BE1  300D               	fcall	_spiSoftTxCmd
  5530  0BE2  120A  158A  2472  120A  158A  	line	322
  5531                           ;rfid.c: 322:  spiSoftTxDat(0x07);
  5532                           	movlw	low(07h)
  5533  0BE7  3007               	fcall	_spiSoftTxDat
  5534  0BE8  120A  158A  22F1  120A  158A  	line	323
  5535                           	
  5536                           l4564:	
  5537  0BED                     ;rfid.c: 323:  PORTAbits.RA5 = 1;
  5538                           	bcf	status, 5	;RP0=0, select bank0
  5539  0BED  1283               	bcf	status, 6	;RP1=0, select bank0
  5540  0BEE  1303               	bsf	(5),5	;volatile
  5541  0BEF  1685               	line	324
  5542                           	
  5543                           l4566:	
  5544  0BF0                     ;rfid.c: 324:  data[0] = modo;
  5545                           	bsf	status, 5	;RP0=1, select bank1
  5546  0BF0  1683               	bcf	status, 6	;RP1=0, select bank1
  5547  0BF1  1303               	movf	(procura_tag@modo)^080h,w
  5548  0BF2  083F               	movwf	(??_procura_tag+0)^080h+0
  5549  0BF3  00BD               	movf	(procura_tag@data)^080h,w
  5550  0BF4  083B               	movwf	fsr0
  5551  0BF5  0084               	bsf	status,7
  5552  0BF6  1783               	btfss	(procura_tag@data+1)^080h,0
  5553  0BF7  1C3C               	bcf	status,7
  5554  0BF8  1383               	movf	(??_procura_tag+0)^080h+0,w
  5555  0BF9  083D               	movwf	indf
  5556  0BFA  0080               	line	325
  5557                           	
  5558                           l4568:	
  5559  0BFB                     ;rfid.c: 325:  status = tagTxCmd(0x0C, data, 1, data, &len);
  5560                           		movf	(procura_tag@data)^080h,w
  5561  0BFB  083B               	movwf	(tagTxCmd@data)^080h
  5562  0BFC  00AA               movf	(procura_tag@data+1)^080h,w
  5563  0BFD  083C               movwf	(tagTxCmd@data+1)^080h
  5564  0BFE  00AB               
  5565                           	clrf	(tagTxCmd@dlen)^080h
  5566  0BFF  01AC               	incf	(tagTxCmd@dlen)^080h,f
  5567  0C00  0AAC               		movf	(procura_tag@data)^080h,w
  5568  0C01  083B               	movwf	(tagTxCmd@result)^080h
  5569  0C02  00AD               movf	(procura_tag@data+1)^080h,w
  5570  0C03  083C               movwf	(tagTxCmd@result+1)^080h
  5571  0C04  00AE               
  5572                           	movlw	(low(procura_tag@len|((0x0)<<8)))&0ffh
  5573  0C05  30C1               	movwf	(??_procura_tag+0)^080h+0
  5574  0C06  00BD               	movf	(??_procura_tag+0)^080h+0,w
  5575  0C07  083D               	movwf	(tagTxCmd@rlen)^080h
  5576  0C08  00AF               	movlw	low(0Ch)
  5577  0C09  300C               	fcall	_tagTxCmd
  5578  0C0A  120A  118A  2362  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  5579  0C0F  1683               	bcf	status, 6	;RP1=0, select bank1
  5580  0C10  1303               	movwf	(??_procura_tag+1)^080h+0
  5581  0C11  00BE               	movf	(??_procura_tag+1)^080h+0,w
  5582  0C12  083E               	movwf	(procura_tag@status)^080h
  5583  0C13  00C0               	line	326
  5584                           	
  5585                           l4570:	
  5586  0C14                     ;rfid.c: 326:  if ((status != 0) || (len != 0x10)) status = 2;
  5587                           	movf	((procura_tag@status)^080h),w
  5588  0C14  0840               	btfss	status,2
  5589  0C15  1D03               	goto	u4031
  5590  0C16  2C18               	goto	u4030
  5591  0C17  2C19               u4031:
  5592  0C18                     	goto	l4574
  5593  0C18  2C20               u4030:
  5594  0C19                     	
  5595                           l4572:	
  5596  0C19                     		movlw	16
  5597  0C19  3010               	xorwf	((procura_tag@len)^080h),w
  5598  0C1A  0641               	btfsc	status,2
  5599  0C1B  1903               	goto	u4041
  5600  0C1C  2C1E               	goto	u4040
  5601  0C1D  2C1F               u4041:
  5602  0C1E                     	goto	l342
  5603  0C1E  2C26               u4040:
  5604  0C1F                     	goto	l4574
  5605  0C1F  2C20               	
  5606                           l341:	
  5607  0C20                     	
  5608                           l4574:	
  5609  0C20                     	movlw	low(02h)
  5610  0C20  3002               	movwf	(??_procura_tag+0)^080h+0
  5611  0C21  00BD               	movf	(??_procura_tag+0)^080h+0,w
  5612  0C22  083D               	movwf	(procura_tag@status)^080h
  5613  0C23  00C0               	goto	l342
  5614  0C24  2C26               	
  5615                           l339:	
  5616  0C25                     	goto	l342
  5617  0C25  2C26               	line	327
  5618                           	
  5619                           l4576:	
  5620  0C26                     	line	328
  5621                           ;rfid.c: 327:  return (status);;	Return value of _procura_tag is never used
  5622                           	
  5623                           l342:	
  5624  0C26                     	return
  5625  0C26  0008               	opt stack 0
  5626                           GLOBAL	__end_of_procura_tag
  5627                           	__end_of_procura_tag:
  5628  0C27                     	signat	_procura_tag,8313
  5629                           	global	_tagTxCmd
  5630                           
  5631 ;; *************** function _tagTxCmd *****************
  5632 ;; Defined at:
  5633 ;;		line 149 in file "rfid.c"
  5634 ;; Parameters:    Size  Location     Type
  5635 ;;  cmd             1    wreg     unsigned char 
  5636 ;;  data            2   10[BANK1 ] PTR unsigned char 
  5637 ;;		 -> TAG(5), main@TAG(5), 
  5638 ;;  dlen            1   12[BANK1 ] unsigned char 
  5639 ;;  result          2   13[BANK1 ] PTR unsigned char 
  5640 ;;		 -> TAG(5), main@TAG(5), 
  5641 ;;  rlen            1   15[BANK1 ] PTR unsigned char 
  5642 ;;		 -> procura_tag@len(1), 
  5643 ;; Auto vars:     Size  Location     Type
  5644 ;;  cmd             1   24[BANK1 ] unsigned char 
  5645 ;;  n               1   26[BANK1 ] unsigned char 
  5646 ;;  i               1   25[BANK1 ] unsigned char 
  5647 ;;  lastBits        1   23[BANK1 ] unsigned char 
  5648 ;;  irqEn           1   22[BANK1 ] unsigned char 
  5649 ;;  a               1   21[BANK1 ] unsigned char 
  5650 ;;  status          1   20[BANK1 ] unsigned char 
  5651 ;;  waitIRq         1   19[BANK1 ] unsigned char 
  5652 ;; Return value:  Size  Location     Type
  5653 ;;                  1    wreg      unsigned char 
  5654 ;; Registers used:
  5655 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  5656 ;; Tracked objects:
  5657 ;;		On entry : 0/0
  5658 ;;		On exit  : 0/0
  5659 ;;		Unchanged: 0/0
  5660 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  5661 ;;      Params:         0       0       6       0       0
  5662 ;;      Locals:         0       0       8       0       0
  5663 ;;      Temps:          0       0       3       0       0
  5664 ;;      Totals:         0       0      17       0       0
  5665 ;;Total ram usage:       17 bytes
  5666 ;; Hardware stack levels used:    1
  5667 ;; Hardware stack levels required when called:    5
  5668 ;; This function calls:
  5669 ;;		_mfrc522ClrBit
  5670 ;;		_mfrc522SetBit
  5671 ;;		_spiSoftRxDat
  5672 ;;		_spiSoftTxCmd
  5673 ;;		_spiSoftTxDat
  5674 ;; This function is called by:
  5675 ;;		_procura_tag
  5676 ;; This function uses a non-reentrant model
  5677 ;;
  5678                           psect	text10,local,class=CODE,delta=2,merge=1,group=0
  5679                           	line	149
  5680                           global __ptext10
  5681                           __ptext10:	;psect for function _tagTxCmd
  5682  0362                     psect	text10
  5683                           	file	"rfid.c"
  5684                           	line	149
  5685                           	global	__size_of_tagTxCmd
  5686                           	__size_of_tagTxCmd	equ	__end_of_tagTxCmd-_tagTxCmd
  5687  01F3                     	
  5688                           _tagTxCmd:	
  5689  0362                     ;incstack = 0
  5690                           	opt	stack 1
  5691                           ; Regs used in _tagTxCmd: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  5692                           ;tagTxCmd@cmd stored from wreg
  5693                           	bsf	status, 5	;RP0=1, select bank1
  5694  0362  1683               	bcf	status, 6	;RP1=0, select bank1
  5695  0363  1303               	movwf	(tagTxCmd@cmd)^080h
  5696  0364  00B8               	line	151
  5697                           	
  5698                           l4358:	
  5699  0365                     ;rfid.c: 149: char tagTxCmd(char cmd, char *data, char dlen, char *result, char *rlen);r
                                 fid.c: 150: {;rfid.c: 151:  char status = 2;
  5700                           	movlw	low(02h)
  5701  0365  3002               	movwf	(??_tagTxCmd+0)^080h+0
  5702  0366  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5703  0367  0830               	movwf	(tagTxCmd@status)^080h
  5704  0368  00B4               	line	152
  5705                           	
  5706                           l4360:	
  5707  0369                     ;rfid.c: 152:  char irqEn = 0x00;
  5708                           	clrf	(tagTxCmd@irqEn)^080h
  5709  0369  01B6               	line	153
  5710                           	
  5711                           l4362:	
  5712  036A                     ;rfid.c: 153:  char waitIRq = 0x00;
  5713                           	clrf	(tagTxCmd@waitIRq)^080h
  5714  036A  01B3               	line	157
  5715                           ;rfid.c: 154:  char lastBits, n;;rfid.c: 155:  char i, a;;rfid.c: 157:  switch (cmd)
  5716                           	goto	l4370
  5717  036B  2B80               	line	159
  5718                           ;rfid.c: 158:  {;rfid.c: 159:   case 0x0E:
  5719                           	
  5720                           l312:	
  5721  036C                     	line	160
  5722                           	
  5723                           l4364:	
  5724  036C                     ;rfid.c: 160:    irqEn = 0x12;
  5725                           	movlw	low(012h)
  5726  036C  3012               	movwf	(??_tagTxCmd+0)^080h+0
  5727  036D  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5728  036E  0830               	movwf	(tagTxCmd@irqEn)^080h
  5729  036F  00B6               	line	161
  5730                           ;rfid.c: 161:    waitIRq = 0x10;
  5731                           	movlw	low(010h)
  5732  0370  3010               	movwf	(??_tagTxCmd+0)^080h+0
  5733  0371  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5734  0372  0830               	movwf	(tagTxCmd@waitIRq)^080h
  5735  0373  00B3               	line	162
  5736                           ;rfid.c: 162:    break;
  5737                           	goto	l4372
  5738  0374  2B90               	line	163
  5739                           ;rfid.c: 163:   case 0x0C:
  5740                           	
  5741                           l314:	
  5742  0375                     	line	164
  5743                           	
  5744                           l4366:	
  5745  0375                     ;rfid.c: 164:    irqEn = 0x77;
  5746                           	movlw	low(077h)
  5747  0375  3077               	movwf	(??_tagTxCmd+0)^080h+0
  5748  0376  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5749  0377  0830               	movwf	(tagTxCmd@irqEn)^080h
  5750  0378  00B6               	line	165
  5751                           ;rfid.c: 165:    waitIRq = 0x30;
  5752                           	movlw	low(030h)
  5753  0379  3030               	movwf	(??_tagTxCmd+0)^080h+0
  5754  037A  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5755  037B  0830               	movwf	(tagTxCmd@waitIRq)^080h
  5756  037C  00B3               	line	166
  5757                           ;rfid.c: 166:    break;
  5758                           	goto	l4372
  5759  037D  2B90               	line	167
  5760                           ;rfid.c: 167:   default:
  5761                           	
  5762                           l315:	
  5763  037E                     	line	168
  5764                           ;rfid.c: 168:    break;
  5765                           	goto	l4372
  5766  037E  2B90               	line	169
  5767                           	
  5768                           l4368:	
  5769  037F                     ;rfid.c: 169:  }
  5770                           	goto	l4372
  5771  037F  2B90               	
  5772                           l311:	
  5773  0380                     	
  5774                           l4370:	
  5775  0380                     	movf	(tagTxCmd@cmd)^080h,w
  5776  0380  0838               	movwf	(??_tagTxCmd+0)^080h+0
  5777  0381  00B0               	clrf	(??_tagTxCmd+0)^080h+0+1
  5778  0382  01B1               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  5779                           ; Switch size 1, requested type "space"
  5780                           ; Number of cases is 1, Range of values is 0 to 0
  5781                           ; switch strategies available:
  5782                           ; Name         Instructions Cycles
  5783                           ; simple_byte            4     3 (average)
  5784                           ; direct_byte           11     8 (fixed)
  5785                           ; jumptable            260     6 (fixed)
  5786                           ;	Chosen strategy is simple_byte
  5787                           
  5788                           	movf 1+(??_tagTxCmd+0)^080h+0,w
  5789  0383  0831               	opt asmopt_push
  5790                           	opt asmopt_off
  5791                           	xorlw	0^0	; case 0
  5792  0384  3A00               	skipnz
  5793  0385  1903               	goto	l4926
  5794  0386  2B88               	goto	l4372
  5795  0387  2B90               	opt asmopt_pop
  5796                           	
  5797                           l4926:	
  5798  0388                     ; Switch size 1, requested type "space"
  5799                           ; Number of cases is 2, Range of values is 12 to 14
  5800                           ; switch strategies available:
  5801                           ; Name         Instructions Cycles
  5802                           ; simple_byte            7     4 (average)
  5803                           ; direct_byte           20    11 (fixed)
  5804                           ; jumptable            263     9 (fixed)
  5805                           ;	Chosen strategy is simple_byte
  5806                           
  5807                           	movf 0+(??_tagTxCmd+0)^080h+0,w
  5808  0388  0830               	opt asmopt_push
  5809                           	opt asmopt_off
  5810                           	xorlw	12^0	; case 12
  5811  0389  3A0C               	skipnz
  5812  038A  1903               	goto	l4366
  5813  038B  2B75               	xorlw	14^12	; case 14
  5814  038C  3A02               	skipnz
  5815  038D  1903               	goto	l4364
  5816  038E  2B6C               	goto	l4372
  5817  038F  2B90               	opt asmopt_pop
  5818                           
  5819                           	
  5820                           l313:	
  5821  0390                     	line	171
  5822                           	
  5823                           l4372:	
  5824  0390                     ;rfid.c: 171:  spiSoftTxCmd(0x02, 0);
  5825                           	clrf	(spiSoftTxCmd@oper)^080h
  5826  0390  01A0               	movlw	low(02h)
  5827  0391  3002               	fcall	_spiSoftTxCmd
  5828  0392  120A  158A  2472  120A  118A  	line	172
  5829                           ;rfid.c: 172:  spiSoftTxDat(irqEn | 0x80);
  5830                           	bsf	status, 5	;RP0=1, select bank1
  5831  0397  1683               	bcf	status, 6	;RP1=0, select bank1
  5832  0398  1303               	movf	(tagTxCmd@irqEn)^080h,w
  5833  0399  0836               	iorlw	080h
  5834  039A  3880               	fcall	_spiSoftTxDat
  5835  039B  120A  158A  22F1  120A  118A  	line	173
  5836                           	
  5837                           l4374:	
  5838  03A0                     ;rfid.c: 173:  PORTAbits.RA5 = 1;
  5839                           	bcf	status, 5	;RP0=0, select bank0
  5840  03A0  1283               	bcf	status, 6	;RP1=0, select bank0
  5841  03A1  1303               	bsf	(5),5	;volatile
  5842  03A2  1685               	line	175
  5843                           ;rfid.c: 175:  mfrc522ClrBit(0x04, 0x80);
  5844                           	movlw	low(080h)
  5845  03A3  3080               	bsf	status, 5	;RP0=1, select bank1
  5846  03A4  1683               	bcf	status, 6	;RP1=0, select bank1
  5847  03A5  1303               	movwf	(??_tagTxCmd+0)^080h+0
  5848  03A6  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5849  03A7  0830               	movwf	(mfrc522ClrBit@mascara)^080h
  5850  03A8  00A6               	movlw	low(04h)
  5851  03A9  3004               	fcall	_mfrc522ClrBit
  5852  03AA  120A  158A  228C  120A  118A  	line	177
  5853                           ;rfid.c: 177:  mfrc522SetBit(0x0A, 0x80);
  5854                           	movlw	low(080h)
  5855  03AF  3080               	bsf	status, 5	;RP0=1, select bank1
  5856  03B0  1683               	bcf	status, 6	;RP1=0, select bank1
  5857  03B1  1303               	movwf	(??_tagTxCmd+0)^080h+0
  5858  03B2  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5859  03B3  0830               	movwf	(mfrc522SetBit@mascara)^080h
  5860  03B4  00A6               	movlw	low(0Ah)
  5861  03B5  300A               	fcall	_mfrc522SetBit
  5862  03B6  120A  158A  225A  120A  118A  	line	179
  5863                           ;rfid.c: 179:  spiSoftTxCmd(0x01, 0);
  5864                           	bsf	status, 5	;RP0=1, select bank1
  5865  03BB  1683               	bcf	status, 6	;RP1=0, select bank1
  5866  03BC  1303               	clrf	(spiSoftTxCmd@oper)^080h
  5867  03BD  01A0               	movlw	low(01h)
  5868  03BE  3001               	fcall	_spiSoftTxCmd
  5869  03BF  120A  158A  2472  120A  118A  	line	180
  5870                           ;rfid.c: 180:  spiSoftTxDat(0x00);
  5871                           	movlw	low(0)
  5872  03C4  3000               	fcall	_spiSoftTxDat
  5873  03C5  120A  158A  22F1  120A  118A  	line	181
  5874                           	
  5875                           l4376:	
  5876  03CA                     ;rfid.c: 181:  PORTAbits.RA5 = 1;
  5877                           	bcf	status, 5	;RP0=0, select bank0
  5878  03CA  1283               	bcf	status, 6	;RP1=0, select bank0
  5879  03CB  1303               	bsf	(5),5	;volatile
  5880  03CC  1685               	line	184
  5881                           	
  5882                           l4378:	
  5883  03CD                     ;rfid.c: 184:  for (i = 0; i < dlen; i++)
  5884                           	bsf	status, 5	;RP0=1, select bank1
  5885  03CD  1683               	bcf	status, 6	;RP1=0, select bank1
  5886  03CE  1303               	clrf	(tagTxCmd@i)^080h
  5887  03CF  01B9               	goto	l4388
  5888  03D0  2BF6               	
  5889                           l317:	
  5890  03D1                     	line	186
  5891                           	
  5892                           l4380:	
  5893  03D1                     ;rfid.c: 185:  {;rfid.c: 186:   spiSoftTxCmd(0x09, 0);
  5894                           	clrf	(spiSoftTxCmd@oper)^080h
  5895  03D1  01A0               	movlw	low(09h)
  5896  03D2  3009               	fcall	_spiSoftTxCmd
  5897  03D3  120A  158A  2472  120A  118A  	line	187
  5898                           	
  5899                           l4382:	
  5900  03D8                     ;rfid.c: 187:   spiSoftTxDat(data[i]);
  5901                           	bsf	status, 5	;RP0=1, select bank1
  5902  03D8  1683               	bcf	status, 6	;RP1=0, select bank1
  5903  03D9  1303               	movf	(tagTxCmd@i)^080h,w
  5904  03DA  0839               	addwf	(tagTxCmd@data)^080h,w
  5905  03DB  072A               	movwf	(??_tagTxCmd+0)^080h+0
  5906  03DC  00B0               	movf	(tagTxCmd@data+1)^080h,w
  5907  03DD  082B               	skipnc
  5908  03DE  1803               	addlw	1
  5909  03DF  3E01               	movwf	1+((??_tagTxCmd+0)^080h+0)
  5910  03E0  00B1               	movf	0+(??_tagTxCmd+0)^080h+0,w
  5911  03E1  0830               	movwf	fsr0
  5912  03E2  0084               	bsf	status,7
  5913  03E3  1783               	btfss	1+(??_tagTxCmd+0)^080h+0,0
  5914  03E4  1C31               	bcf	status,7
  5915  03E5  1383               	movf	indf,w
  5916  03E6  0800               	fcall	_spiSoftTxDat
  5917  03E7  120A  158A  22F1  120A  118A  	line	188
  5918                           	
  5919                           l4384:	
  5920  03EC                     ;rfid.c: 188:   PORTAbits.RA5 = 1;
  5921                           	bcf	status, 5	;RP0=0, select bank0
  5922  03EC  1283               	bcf	status, 6	;RP1=0, select bank0
  5923  03ED  1303               	bsf	(5),5	;volatile
  5924  03EE  1685               	line	189
  5925                           	
  5926                           l4386:	
  5927  03EF                     ;rfid.c: 189:  }
  5928                           	movlw	low(01h)
  5929  03EF  3001               	bsf	status, 5	;RP0=1, select bank1
  5930  03F0  1683               	bcf	status, 6	;RP1=0, select bank1
  5931  03F1  1303               	movwf	(??_tagTxCmd+0)^080h+0
  5932  03F2  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5933  03F3  0830               	addwf	(tagTxCmd@i)^080h,f
  5934  03F4  07B9               	goto	l4388
  5935  03F5  2BF6               	
  5936                           l316:	
  5937  03F6                     	
  5938                           l4388:	
  5939  03F6                     	movf	(tagTxCmd@dlen)^080h,w
  5940  03F6  082C               	subwf	(tagTxCmd@i)^080h,w
  5941  03F7  0239               	skipc
  5942  03F8  1C03               	goto	u3731
  5943  03F9  2BFB               	goto	u3730
  5944  03FA  2BFC               u3731:
  5945  03FB                     	goto	l4380
  5946  03FB  2BD1               u3730:
  5947  03FC                     	goto	l4390
  5948  03FC  2BFD               	
  5949                           l318:	
  5950  03FD                     	line	192
  5951                           	
  5952                           l4390:	
  5953  03FD                     ;rfid.c: 192:  spiSoftTxCmd(0x01, 0);
  5954                           	clrf	(spiSoftTxCmd@oper)^080h
  5955  03FD  01A0               	movlw	low(01h)
  5956  03FE  3001               	fcall	_spiSoftTxCmd
  5957  03FF  120A  158A  2472  120A  118A  	line	193
  5958                           ;rfid.c: 193:  spiSoftTxDat(cmd);
  5959                           	bsf	status, 5	;RP0=1, select bank1
  5960  0404  1683               	bcf	status, 6	;RP1=0, select bank1
  5961  0405  1303               	movf	(tagTxCmd@cmd)^080h,w
  5962  0406  0838               	fcall	_spiSoftTxDat
  5963  0407  120A  158A  22F1  120A  118A  	line	194
  5964                           	
  5965                           l4392:	
  5966  040C                     ;rfid.c: 194:  PORTAbits.RA5 = 1;
  5967                           	bcf	status, 5	;RP0=0, select bank0
  5968  040C  1283               	bcf	status, 6	;RP1=0, select bank0
  5969  040D  1303               	bsf	(5),5	;volatile
  5970  040E  1685               	line	196
  5971                           	
  5972                           l4394:	
  5973  040F                     ;rfid.c: 196:  if (cmd == 0x0C) mfrc522SetBit(0x0D, 0x80);
  5974                           		movlw	12
  5975  040F  300C               	bsf	status, 5	;RP0=1, select bank1
  5976  0410  1683               	bcf	status, 6	;RP1=0, select bank1
  5977  0411  1303               	xorwf	((tagTxCmd@cmd)^080h),w
  5978  0412  0638               	btfss	status,2
  5979  0413  1D03               	goto	u3741
  5980  0414  2C16               	goto	u3740
  5981  0415  2C17               u3741:
  5982  0416                     	goto	l4398
  5983  0416  2C22               u3740:
  5984  0417                     	
  5985                           l4396:	
  5986  0417                     	movlw	low(080h)
  5987  0417  3080               	movwf	(??_tagTxCmd+0)^080h+0
  5988  0418  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  5989  0419  0830               	movwf	(mfrc522SetBit@mascara)^080h
  5990  041A  00A6               	movlw	low(0Dh)
  5991  041B  300D               	fcall	_mfrc522SetBit
  5992  041C  120A  158A  225A  120A  118A  	goto	l4398
  5993  0421  2C22               	
  5994                           l319:	
  5995  0422                     	line	199
  5996                           	
  5997                           l4398:	
  5998  0422                     ;rfid.c: 199:  i = 250;
  5999                           	movlw	low(0FAh)
  6000  0422  30FA               	bsf	status, 5	;RP0=1, select bank1
  6001  0423  1683               	bcf	status, 6	;RP1=0, select bank1
  6002  0424  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6003  0425  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6004  0426  0830               	movwf	(tagTxCmd@i)^080h
  6005  0427  00B9               	goto	l4400
  6006  0428  2C29               	line	200
  6007                           ;rfid.c: 200:  do
  6008                           	
  6009                           l320:	
  6010  0429                     	line	202
  6011                           	
  6012                           l4400:	
  6013  0429                     ;rfid.c: 201:  {;rfid.c: 202:   _delay((unsigned long)((100)*(20000000/4000000.0)));
  6014                           	opt asmopt_push
  6015                           opt asmopt_off
  6016                           	movlw	165
  6017  0429  30A5               	bsf	status, 5	;RP0=1, select bank1
  6018  042A  1683               	bcf	status, 6	;RP1=0, select bank1
  6019  042B  1303               movwf	((??_tagTxCmd+0)^080h+0),f
  6020  042C  00B0               	u4417:
  6021  042D                     decfsz	(??_tagTxCmd+0)^080h+0,f
  6022  042D  0BB0               	goto	u4417
  6023  042E  2C2D               	nop2
  6024  042F  2C30               opt asmopt_pop
  6025                           
  6026                           	line	203
  6027                           ;rfid.c: 203:   spiSoftTxCmd(0x04, 1);
  6028                           	bsf	status, 5	;RP0=1, select bank1
  6029  0430  1683               	bcf	status, 6	;RP1=0, select bank1
  6030  0431  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6031  0432  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6032  0433  0AA0               	movlw	low(04h)
  6033  0434  3004               	fcall	_spiSoftTxCmd
  6034  0435  120A  158A  2472  120A  118A  	line	204
  6035                           ;rfid.c: 204:   n = spiSoftRxDat();
  6036                           	fcall	_spiSoftRxDat
  6037  043A  120A  158A  22BE  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  6038  043F  1683               	bcf	status, 6	;RP1=0, select bank1
  6039  0440  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6040  0441  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6041  0442  0830               	movwf	(tagTxCmd@n)^080h
  6042  0443  00BA               	line	205
  6043                           	
  6044                           l4402:	
  6045  0444                     ;rfid.c: 205:   PORTAbits.RA5 = 1;
  6046                           	bcf	status, 5	;RP0=0, select bank0
  6047  0444  1283               	bcf	status, 6	;RP1=0, select bank0
  6048  0445  1303               	bsf	(5),5	;volatile
  6049  0446  1685               	line	206
  6050                           	
  6051                           l4404:	
  6052  0447                     ;rfid.c: 206:   i--;
  6053                           	movlw	01h
  6054  0447  3001               	bsf	status, 5	;RP0=1, select bank1
  6055  0448  1683               	bcf	status, 6	;RP1=0, select bank1
  6056  0449  1303               	subwf	(tagTxCmd@i)^080h,f
  6057  044A  02B9               	line	207
  6058                           	
  6059                           l4406:	
  6060  044B                     ;rfid.c: 207:  } while ((i != 0) && !(n & 0x01) && !(n & waitIRq));
  6061                           	movf	((tagTxCmd@i)^080h),w
  6062  044B  0839               	btfsc	status,2
  6063  044C  1903               	goto	u3751
  6064  044D  2C4F               	goto	u3750
  6065  044E  2C50               u3751:
  6066  044F                     	goto	l4412
  6067  044F  2C5C               u3750:
  6068  0450                     	
  6069                           l4408:	
  6070  0450                     	btfsc	(tagTxCmd@n)^080h,(0)&7
  6071  0450  183A               	goto	u3761
  6072  0451  2C53               	goto	u3760
  6073  0452  2C54               u3761:
  6074  0453                     	goto	l4412
  6075  0453  2C5C               u3760:
  6076  0454                     	
  6077                           l4410:	
  6078  0454                     	movf	(tagTxCmd@n)^080h,w
  6079  0454  083A               	andwf	(tagTxCmd@waitIRq)^080h,w
  6080  0455  0533               	btfsc	status,2
  6081  0456  1903               	goto	u3771
  6082  0457  2C59               	goto	u3770
  6083  0458  2C5A               u3771:
  6084  0459                     	goto	l4400
  6085  0459  2C29               u3770:
  6086  045A                     	goto	l4412
  6087  045A  2C5C               	
  6088                           l322:	
  6089  045B                     	goto	l4412
  6090  045B  2C5C               	
  6091                           l323:	
  6092  045C                     	line	209
  6093                           	
  6094                           l4412:	
  6095  045C                     ;rfid.c: 209:  mfrc522ClrBit(0x0D, 0x80);
  6096                           	movlw	low(080h)
  6097  045C  3080               	movwf	(??_tagTxCmd+0)^080h+0
  6098  045D  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6099  045E  0830               	movwf	(mfrc522ClrBit@mascara)^080h
  6100  045F  00A6               	movlw	low(0Dh)
  6101  0460  300D               	fcall	_mfrc522ClrBit
  6102  0461  120A  158A  228C  120A  118A  	line	211
  6103                           	
  6104                           l4414:	
  6105  0466                     ;rfid.c: 211:  if (i != 0)
  6106                           	bsf	status, 5	;RP0=1, select bank1
  6107  0466  1683               	bcf	status, 6	;RP1=0, select bank1
  6108  0467  1303               	movf	((tagTxCmd@i)^080h),w
  6109  0468  0839               	btfsc	status,2
  6110  0469  1903               	goto	u3781
  6111  046A  2C6C               	goto	u3780
  6112  046B  2C6D               u3781:
  6113  046C                     	goto	l324
  6114  046C  2D52               u3780:
  6115  046D                     	line	213
  6116                           	
  6117                           l4416:	
  6118  046D                     ;rfid.c: 212:  {;rfid.c: 213:   spiSoftTxCmd(0x06, 1);
  6119                           	clrf	(spiSoftTxCmd@oper)^080h
  6120  046D  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6121  046E  0AA0               	movlw	low(06h)
  6122  046F  3006               	fcall	_spiSoftTxCmd
  6123  0470  120A  158A  2472  120A  118A  	line	214
  6124                           ;rfid.c: 214:   a = spiSoftRxDat();
  6125                           	fcall	_spiSoftRxDat
  6126  0475  120A  158A  22BE  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  6127  047A  1683               	bcf	status, 6	;RP1=0, select bank1
  6128  047B  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6129  047C  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6130  047D  0830               	movwf	(tagTxCmd@a)^080h
  6131  047E  00B5               	line	215
  6132                           	
  6133                           l4418:	
  6134  047F                     ;rfid.c: 215:   PORTAbits.RA5 = 1;
  6135                           	bcf	status, 5	;RP0=0, select bank0
  6136  047F  1283               	bcf	status, 6	;RP1=0, select bank0
  6137  0480  1303               	bsf	(5),5	;volatile
  6138  0481  1685               	line	216
  6139                           	
  6140                           l4420:	
  6141  0482                     ;rfid.c: 216:   a = a & 0x1B;
  6142                           	bsf	status, 5	;RP0=1, select bank1
  6143  0482  1683               	bcf	status, 6	;RP1=0, select bank1
  6144  0483  1303               	movf	(tagTxCmd@a)^080h,w
  6145  0484  0835               	andlw	01Bh
  6146  0485  391B               	movwf	(??_tagTxCmd+0)^080h+0
  6147  0486  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6148  0487  0830               	movwf	(tagTxCmd@a)^080h
  6149  0488  00B5               	line	218
  6150                           	
  6151                           l4422:	
  6152  0489                     ;rfid.c: 218:   if (!a)
  6153                           	movf	((tagTxCmd@a)^080h),w
  6154  0489  0835               	btfss	status,2
  6155  048A  1D03               	goto	u3791
  6156  048B  2C8D               	goto	u3790
  6157  048C  2C8E               u3791:
  6158  048D                     	goto	l4468
  6159  048D  2D4D               u3790:
  6160  048E                     	line	220
  6161                           	
  6162                           l4424:	
  6163  048E                     ;rfid.c: 219:   {;rfid.c: 220:    status = 0;
  6164                           	clrf	(tagTxCmd@status)^080h
  6165  048E  01B4               	line	221
  6166                           	
  6167                           l4426:	
  6168  048F                     ;rfid.c: 221:    if (n & irqEn & 0x01) status = 1;
  6169                           	movf	(tagTxCmd@irqEn)^080h,w
  6170  048F  0836               	andwf	(tagTxCmd@n)^080h,w
  6171  0490  053A               	movwf	(??_tagTxCmd+0)^080h+0
  6172  0491  00B0               	btfss	0+(??_tagTxCmd+0)^080h+0,(0)&7
  6173  0492  1C30               	goto	u3801
  6174  0493  2C95               	goto	u3800
  6175  0494  2C96               u3801:
  6176  0495                     	goto	l4430
  6177  0495  2C99               u3800:
  6178  0496                     	
  6179                           l4428:	
  6180  0496                     	clrf	(tagTxCmd@status)^080h
  6181  0496  01B4               	incf	(tagTxCmd@status)^080h,f
  6182  0497  0AB4               	goto	l4430
  6183  0498  2C99               	
  6184                           l326:	
  6185  0499                     	line	223
  6186                           	
  6187                           l4430:	
  6188  0499                     ;rfid.c: 223:    if (cmd == 0x0C)
  6189                           		movlw	12
  6190  0499  300C               	xorwf	((tagTxCmd@cmd)^080h),w
  6191  049A  0638               	btfss	status,2
  6192  049B  1D03               	goto	u3811
  6193  049C  2C9E               	goto	u3810
  6194  049D  2C9F               u3811:
  6195  049E                     	goto	l324
  6196  049E  2D52               u3810:
  6197  049F                     	line	225
  6198                           	
  6199                           l4432:	
  6200  049F                     ;rfid.c: 224:    {;rfid.c: 225:     spiSoftTxCmd(0x0A, 1);
  6201                           	clrf	(spiSoftTxCmd@oper)^080h
  6202  049F  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6203  04A0  0AA0               	movlw	low(0Ah)
  6204  04A1  300A               	fcall	_spiSoftTxCmd
  6205  04A2  120A  158A  2472  120A  118A  	line	226
  6206                           ;rfid.c: 226:     n = spiSoftRxDat();
  6207                           	fcall	_spiSoftRxDat
  6208  04A7  120A  158A  22BE  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  6209  04AC  1683               	bcf	status, 6	;RP1=0, select bank1
  6210  04AD  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6211  04AE  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6212  04AF  0830               	movwf	(tagTxCmd@n)^080h
  6213  04B0  00BA               	line	227
  6214                           	
  6215                           l4434:	
  6216  04B1                     ;rfid.c: 227:     PORTAbits.RA5 = 1;
  6217                           	bcf	status, 5	;RP0=0, select bank0
  6218  04B1  1283               	bcf	status, 6	;RP1=0, select bank0
  6219  04B2  1303               	bsf	(5),5	;volatile
  6220  04B3  1685               	line	229
  6221                           ;rfid.c: 229:     spiSoftTxCmd(0x0C, 1);
  6222                           	bsf	status, 5	;RP0=1, select bank1
  6223  04B4  1683               	bcf	status, 6	;RP1=0, select bank1
  6224  04B5  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6225  04B6  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6226  04B7  0AA0               	movlw	low(0Ch)
  6227  04B8  300C               	fcall	_spiSoftTxCmd
  6228  04B9  120A  158A  2472  120A  118A  	line	230
  6229                           ;rfid.c: 230:     lastBits = spiSoftRxDat();
  6230                           	fcall	_spiSoftRxDat
  6231  04BE  120A  158A  22BE  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  6232  04C3  1683               	bcf	status, 6	;RP1=0, select bank1
  6233  04C4  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6234  04C5  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6235  04C6  0830               	movwf	(tagTxCmd@lastBits)^080h
  6236  04C7  00B7               	line	231
  6237                           	
  6238                           l4436:	
  6239  04C8                     ;rfid.c: 231:     PORTAbits.RA5 = 1;
  6240                           	bcf	status, 5	;RP0=0, select bank0
  6241  04C8  1283               	bcf	status, 6	;RP1=0, select bank0
  6242  04C9  1303               	bsf	(5),5	;volatile
  6243  04CA  1685               	line	233
  6244                           	
  6245                           l4438:	
  6246  04CB                     ;rfid.c: 233:     lastBits = lastBits & 0x07;
  6247                           	bsf	status, 5	;RP0=1, select bank1
  6248  04CB  1683               	bcf	status, 6	;RP1=0, select bank1
  6249  04CC  1303               	movf	(tagTxCmd@lastBits)^080h,w
  6250  04CD  0837               	andlw	07h
  6251  04CE  3907               	movwf	(??_tagTxCmd+0)^080h+0
  6252  04CF  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6253  04D0  0830               	movwf	(tagTxCmd@lastBits)^080h
  6254  04D1  00B7               	line	235
  6255                           	
  6256                           l4440:	
  6257  04D2                     ;rfid.c: 235:     if (lastBits) *rlen = (n - 1) * 8 + lastBits;
  6258                           	movf	((tagTxCmd@lastBits)^080h),w
  6259  04D2  0837               	btfsc	status,2
  6260  04D3  1903               	goto	u3821
  6261  04D4  2CD6               	goto	u3820
  6262  04D5  2CD7               u3821:
  6263  04D6                     	goto	l4444
  6264  04D6  2CE9               u3820:
  6265  04D7                     	
  6266                           l4442:	
  6267  04D7                     	movf	(tagTxCmd@n)^080h,w
  6268  04D7  083A               	movwf	(??_tagTxCmd+0)^080h+0
  6269  04D8  00B0               	movlw	03h
  6270  04D9  3003               u3835:
  6271  04DA                     	clrc
  6272  04DA  1003               	rlf	(??_tagTxCmd+0)^080h+0,f
  6273  04DB  0DB0               	addlw	-1
  6274  04DC  3EFF               	skipz
  6275  04DD  1D03               	goto	u3835
  6276  04DE  2CDA               	movf	(tagTxCmd@lastBits)^080h,w
  6277  04DF  0837               	addwf	0+(??_tagTxCmd+0)^080h+0,w
  6278  04E0  0730               	addlw	0F8h
  6279  04E1  3EF8               	movwf	(??_tagTxCmd+1)^080h+0
  6280  04E2  00B1               	movf	(tagTxCmd@rlen)^080h,w
  6281  04E3  082F               	movwf	fsr0
  6282  04E4  0084               	movf	(??_tagTxCmd+1)^080h+0,w
  6283  04E5  0831               	bcf	status, 7	;select IRP bank0
  6284  04E6  1383               	movwf	indf
  6285  04E7  0080               	goto	l4446
  6286  04E8  2CFA               	line	236
  6287                           ;rfid.c: 236:     else *rlen = n * 8;
  6288                           	
  6289                           l328:	
  6290  04E9                     	
  6291                           l4444:	
  6292  04E9                     	movf	(tagTxCmd@n)^080h,w
  6293  04E9  083A               	movwf	(??_tagTxCmd+0)^080h+0
  6294  04EA  00B0               	movlw	(03h)-1
  6295  04EB  3002               u3845:
  6296  04EC                     	clrc
  6297  04EC  1003               	rlf	(??_tagTxCmd+0)^080h+0,f
  6298  04ED  0DB0               	addlw	-1
  6299  04EE  3EFF               	skipz
  6300  04EF  1D03               	goto	u3845
  6301  04F0  2CEC               	clrc
  6302  04F1  1003               	rlf	(??_tagTxCmd+0)^080h+0,w
  6303  04F2  0D30               	movwf	(??_tagTxCmd+1)^080h+0
  6304  04F3  00B1               	movf	(tagTxCmd@rlen)^080h,w
  6305  04F4  082F               	movwf	fsr0
  6306  04F5  0084               	movf	(??_tagTxCmd+1)^080h+0,w
  6307  04F6  0831               	bcf	status, 7	;select IRP bank0
  6308  04F7  1383               	movwf	indf
  6309  04F8  0080               	goto	l4446
  6310  04F9  2CFA               	
  6311                           l329:	
  6312  04FA                     	line	238
  6313                           	
  6314                           l4446:	
  6315  04FA                     ;rfid.c: 238:     if (n == 0) n = 1;
  6316                           	movf	((tagTxCmd@n)^080h),w
  6317  04FA  083A               	btfss	status,2
  6318  04FB  1D03               	goto	u3851
  6319  04FC  2CFE               	goto	u3850
  6320  04FD  2CFF               u3851:
  6321  04FE                     	goto	l4450
  6322  04FE  2D02               u3850:
  6323  04FF                     	
  6324                           l4448:	
  6325  04FF                     	clrf	(tagTxCmd@n)^080h
  6326  04FF  01BA               	incf	(tagTxCmd@n)^080h,f
  6327  0500  0ABA               	goto	l4450
  6328  0501  2D02               	
  6329                           l330:	
  6330  0502                     	line	239
  6331                           	
  6332                           l4450:	
  6333  0502                     ;rfid.c: 239:     if (n > 16) n = 16;
  6334                           	movlw	low(011h)
  6335  0502  3011               	subwf	(tagTxCmd@n)^080h,w
  6336  0503  023A               	skipc
  6337  0504  1C03               	goto	u3861
  6338  0505  2D07               	goto	u3860
  6339  0506  2D08               u3861:
  6340  0507                     	goto	l4454
  6341  0507  2D0D               u3860:
  6342  0508                     	
  6343                           l4452:	
  6344  0508                     	movlw	low(010h)
  6345  0508  3010               	movwf	(??_tagTxCmd+0)^080h+0
  6346  0509  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6347  050A  0830               	movwf	(tagTxCmd@n)^080h
  6348  050B  00BA               	goto	l4454
  6349  050C  2D0D               	
  6350                           l331:	
  6351  050D                     	line	241
  6352                           	
  6353                           l4454:	
  6354  050D                     ;rfid.c: 241:     for (i = 0; i < n; i++)
  6355                           	clrf	(tagTxCmd@i)^080h
  6356  050D  01B9               	goto	l4464
  6357  050E  2D37               	
  6358                           l333:	
  6359  050F                     	line	243
  6360                           	
  6361                           l4456:	
  6362  050F                     ;rfid.c: 242:     {;rfid.c: 243:      spiSoftTxCmd(0x09, 1);
  6363                           	clrf	(spiSoftTxCmd@oper)^080h
  6364  050F  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6365  0510  0AA0               	movlw	low(09h)
  6366  0511  3009               	fcall	_spiSoftTxCmd
  6367  0512  120A  158A  2472  120A  118A  	line	244
  6368                           	
  6369                           l4458:	
  6370  0517                     ;rfid.c: 244:      result[i] = spiSoftRxDat();
  6371                           	fcall	_spiSoftRxDat
  6372  0517  120A  158A  22BE  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  6373  051C  1683               	bcf	status, 6	;RP1=0, select bank1
  6374  051D  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6375  051E  00B0               	movf	(tagTxCmd@i)^080h,w
  6376  051F  0839               	addwf	(tagTxCmd@result)^080h,w
  6377  0520  072D               	movwf	(??_tagTxCmd+1)^080h+0
  6378  0521  00B1               	movf	(tagTxCmd@result+1)^080h,w
  6379  0522  082E               	skipnc
  6380  0523  1803               	addlw	1
  6381  0524  3E01               	movwf	1+((??_tagTxCmd+1)^080h+0)
  6382  0525  00B2               	movf	0+(??_tagTxCmd+1)^080h+0,w
  6383  0526  0831               	movwf	fsr0
  6384  0527  0084               	bsf	status,7
  6385  0528  1783               	btfss	1+(??_tagTxCmd+1)^080h+0,0
  6386  0529  1C32               	bcf	status,7
  6387  052A  1383               	movf	(??_tagTxCmd+0)^080h+0,w
  6388  052B  0830               	movwf	indf
  6389  052C  0080               	line	245
  6390                           	
  6391                           l4460:	
  6392  052D                     ;rfid.c: 245:      PORTAbits.RA5 = 1;
  6393                           	bcf	status, 5	;RP0=0, select bank0
  6394  052D  1283               	bcf	status, 6	;RP1=0, select bank0
  6395  052E  1303               	bsf	(5),5	;volatile
  6396  052F  1685               	line	246
  6397                           	
  6398                           l4462:	
  6399  0530                     ;rfid.c: 246:     }
  6400                           	movlw	low(01h)
  6401  0530  3001               	bsf	status, 5	;RP0=1, select bank1
  6402  0531  1683               	bcf	status, 6	;RP1=0, select bank1
  6403  0532  1303               	movwf	(??_tagTxCmd+0)^080h+0
  6404  0533  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6405  0534  0830               	addwf	(tagTxCmd@i)^080h,f
  6406  0535  07B9               	goto	l4464
  6407  0536  2D37               	
  6408                           l332:	
  6409  0537                     	
  6410                           l4464:	
  6411  0537                     	movf	(tagTxCmd@n)^080h,w
  6412  0537  083A               	subwf	(tagTxCmd@i)^080h,w
  6413  0538  0239               	skipc
  6414  0539  1C03               	goto	u3871
  6415  053A  2D3C               	goto	u3870
  6416  053B  2D3D               u3871:
  6417  053C                     	goto	l4456
  6418  053C  2D0F               u3870:
  6419  053D                     	goto	l4466
  6420  053D  2D3E               	
  6421                           l334:	
  6422  053E                     	line	247
  6423                           	
  6424                           l4466:	
  6425  053E                     ;rfid.c: 247:     result[i] = 0;
  6426                           	movf	(tagTxCmd@i)^080h,w
  6427  053E  0839               	addwf	(tagTxCmd@result)^080h,w
  6428  053F  072D               	movwf	(??_tagTxCmd+0)^080h+0
  6429  0540  00B0               	movf	(tagTxCmd@result+1)^080h,w
  6430  0541  082E               	skipnc
  6431  0542  1803               	addlw	1
  6432  0543  3E01               	movwf	1+((??_tagTxCmd+0)^080h+0)
  6433  0544  00B1               	movf	0+(??_tagTxCmd+0)^080h+0,w
  6434  0545  0830               	movwf	fsr0
  6435  0546  0084               	bsf	status,7
  6436  0547  1783               	btfss	1+(??_tagTxCmd+0)^080h+0,0
  6437  0548  1C31               	bcf	status,7
  6438  0549  1383               	clrf	indf
  6439  054A  0180               	goto	l324
  6440  054B  2D52               	line	248
  6441                           ;rfid.c: 248:    }
  6442                           	
  6443                           l327:	
  6444  054C                     	line	249
  6445                           ;rfid.c: 249:   }
  6446                           	goto	l324
  6447  054C  2D52               	line	250
  6448                           ;rfid.c: 250:   else status = 2;
  6449                           	
  6450                           l325:	
  6451  054D                     	
  6452                           l4468:	
  6453  054D                     	movlw	low(02h)
  6454  054D  3002               	movwf	(??_tagTxCmd+0)^080h+0
  6455  054E  00B0               	movf	(??_tagTxCmd+0)^080h+0,w
  6456  054F  0830               	movwf	(tagTxCmd@status)^080h
  6457  0550  00B4               	goto	l324
  6458  0551  2D52               	
  6459                           l335:	
  6460  0552                     	line	251
  6461                           ;rfid.c: 251:  }
  6462                           	
  6463                           l324:	
  6464  0552                     	line	252
  6465                           ;rfid.c: 252:  return (status);
  6466                           	movf	(tagTxCmd@status)^080h,w
  6467  0552  0834               	goto	l336
  6468  0553  2D54               	
  6469                           l4470:	
  6470  0554                     	line	253
  6471                           	
  6472                           l336:	
  6473  0554                     	return
  6474  0554  0008               	opt stack 0
  6475                           GLOBAL	__end_of_tagTxCmd
  6476                           	__end_of_tagTxCmd:
  6477  0555                     	signat	_tagTxCmd,20601
  6478                           	global	_mfrc522ClrBit
  6479                           
  6480 ;; *************** function _mfrc522ClrBit *****************
  6481 ;; Defined at:
  6482 ;;		line 39 in file "rfid.c"
  6483 ;; Parameters:    Size  Location     Type
  6484 ;;  end             1    wreg     unsigned char 
  6485 ;;  mascara         1    6[BANK1 ] unsigned char 
  6486 ;; Auto vars:     Size  Location     Type
  6487 ;;  end             1    8[BANK1 ] unsigned char 
  6488 ;;  lido            1    9[BANK1 ] unsigned char 
  6489 ;; Return value:  Size  Location     Type
  6490 ;;                  1    wreg      void 
  6491 ;; Registers used:
  6492 ;;		wreg, status,2, status,0, pclath, cstack
  6493 ;; Tracked objects:
  6494 ;;		On entry : 0/0
  6495 ;;		On exit  : 0/0
  6496 ;;		Unchanged: 0/0
  6497 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6498 ;;      Params:         0       0       1       0       0
  6499 ;;      Locals:         0       0       2       0       0
  6500 ;;      Temps:          0       0       1       0       0
  6501 ;;      Totals:         0       0       4       0       0
  6502 ;;Total ram usage:        4 bytes
  6503 ;; Hardware stack levels used:    1
  6504 ;; Hardware stack levels required when called:    4
  6505 ;; This function calls:
  6506 ;;		_spiSoftRxDat
  6507 ;;		_spiSoftTxCmd
  6508 ;;		_spiSoftTxDat
  6509 ;; This function is called by:
  6510 ;;		_tagTxCmd
  6511 ;; This function uses a non-reentrant model
  6512 ;;
  6513                           psect	text11,local,class=CODE,delta=2,merge=1,group=0
  6514                           	line	39
  6515                           global __ptext11
  6516                           __ptext11:	;psect for function _mfrc522ClrBit
  6517  0A8C                     psect	text11
  6518                           	file	"rfid.c"
  6519                           	line	39
  6520                           	global	__size_of_mfrc522ClrBit
  6521                           	__size_of_mfrc522ClrBit	equ	__end_of_mfrc522ClrBit-_mfrc522ClrBit
  6522  0032                     	
  6523                           _mfrc522ClrBit:	
  6524  0A8C                     ;incstack = 0
  6525                           	opt	stack 1
  6526                           ; Regs used in _mfrc522ClrBit: [wreg+status,2+status,0+pclath+cstack]
  6527                           ;mfrc522ClrBit@end stored from wreg
  6528                           	bsf	status, 5	;RP0=1, select bank1
  6529  0A8C  1683               	bcf	status, 6	;RP1=0, select bank1
  6530  0A8D  1303               	movwf	(mfrc522ClrBit@end)^080h
  6531  0A8E  00A8               	line	42
  6532                           	
  6533                           l3390:	
  6534  0A8F                     ;rfid.c: 39: void mfrc522ClrBit(char end, char mascara);rfid.c: 40: {;rfid.c: 41:  char 
                                 lido;;rfid.c: 42:  spiSoftTxCmd(end, 1);
  6535                           	clrf	(spiSoftTxCmd@oper)^080h
  6536  0A8F  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6537  0A90  0AA0               	movf	(mfrc522ClrBit@end)^080h,w
  6538  0A91  0828               	fcall	_spiSoftTxCmd
  6539  0A92  120A  158A  2472  120A  158A  	line	43
  6540                           ;rfid.c: 43:  lido = spiSoftRxDat();
  6541                           	fcall	_spiSoftRxDat
  6542  0A97  120A  158A  22BE  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  6543  0A9C  1683               	bcf	status, 6	;RP1=0, select bank1
  6544  0A9D  1303               	movwf	(??_mfrc522ClrBit+0)^080h+0
  6545  0A9E  00A7               	movf	(??_mfrc522ClrBit+0)^080h+0,w
  6546  0A9F  0827               	movwf	(mfrc522ClrBit@lido)^080h
  6547  0AA0  00A9               	line	44
  6548                           	
  6549                           l3392:	
  6550  0AA1                     ;rfid.c: 44:  PORTAbits.RA5 = 1;
  6551                           	bcf	status, 5	;RP0=0, select bank0
  6552  0AA1  1283               	bcf	status, 6	;RP1=0, select bank0
  6553  0AA2  1303               	bsf	(5),5	;volatile
  6554  0AA3  1685               	line	45
  6555                           	
  6556                           l3394:	
  6557  0AA4                     ;rfid.c: 45:  lido = lido & (~mascara);
  6558                           	bsf	status, 5	;RP0=1, select bank1
  6559  0AA4  1683               	bcf	status, 6	;RP1=0, select bank1
  6560  0AA5  1303               	comf	(mfrc522ClrBit@mascara)^080h,w
  6561  0AA6  0926               	andwf	(mfrc522ClrBit@lido)^080h,w
  6562  0AA7  0529               	movwf	(??_mfrc522ClrBit+0)^080h+0
  6563  0AA8  00A7               	movf	(??_mfrc522ClrBit+0)^080h+0,w
  6564  0AA9  0827               	movwf	(mfrc522ClrBit@lido)^080h
  6565  0AAA  00A9               	line	46
  6566                           	
  6567                           l3396:	
  6568  0AAB                     ;rfid.c: 46:  spiSoftTxCmd(end, 0);
  6569                           	clrf	(spiSoftTxCmd@oper)^080h
  6570  0AAB  01A0               	movf	(mfrc522ClrBit@end)^080h,w
  6571  0AAC  0828               	fcall	_spiSoftTxCmd
  6572  0AAD  120A  158A  2472  120A  158A  	line	47
  6573                           	
  6574                           l3398:	
  6575  0AB2                     ;rfid.c: 47:  spiSoftTxDat(lido);
  6576                           	bsf	status, 5	;RP0=1, select bank1
  6577  0AB2  1683               	bcf	status, 6	;RP1=0, select bank1
  6578  0AB3  1303               	movf	(mfrc522ClrBit@lido)^080h,w
  6579  0AB4  0829               	fcall	_spiSoftTxDat
  6580  0AB5  120A  158A  22F1  120A  158A  	line	48
  6581                           	
  6582                           l3400:	
  6583  0ABA                     ;rfid.c: 48:  PORTAbits.RA5 = 1;
  6584                           	bcf	status, 5	;RP0=0, select bank0
  6585  0ABA  1283               	bcf	status, 6	;RP1=0, select bank0
  6586  0ABB  1303               	bsf	(5),5	;volatile
  6587  0ABC  1685               	line	49
  6588                           	
  6589                           l296:	
  6590  0ABD                     	return
  6591  0ABD  0008               	opt stack 0
  6592                           GLOBAL	__end_of_mfrc522ClrBit
  6593                           	__end_of_mfrc522ClrBit:
  6594  0ABE                     	signat	_mfrc522ClrBit,8313
  6595                           	global	_mfrc522Iniciar
  6596                           
  6597 ;; *************** function _mfrc522Iniciar *****************
  6598 ;; Defined at:
  6599 ;;		line 80 in file "rfid.c"
  6600 ;; Parameters:    Size  Location     Type
  6601 ;;		None
  6602 ;; Auto vars:     Size  Location     Type
  6603 ;;		None
  6604 ;; Return value:  Size  Location     Type
  6605 ;;                  1    wreg      void 
  6606 ;; Registers used:
  6607 ;;		wreg, status,2, status,0, pclath, cstack
  6608 ;; Tracked objects:
  6609 ;;		On entry : 0/0
  6610 ;;		On exit  : 0/0
  6611 ;;		Unchanged: 0/0
  6612 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6613 ;;      Params:         0       0       0       0       0
  6614 ;;      Locals:         0       0       0       0       0
  6615 ;;      Temps:          0       0       0       0       0
  6616 ;;      Totals:         0       0       0       0       0
  6617 ;;Total ram usage:        0 bytes
  6618 ;; Hardware stack levels used:    1
  6619 ;; Hardware stack levels required when called:    6
  6620 ;; This function calls:
  6621 ;;		_mfrc522AntOn
  6622 ;;		_mfrc522Rst
  6623 ;;		_spiSoftTxCmd
  6624 ;;		_spiSoftTxDat
  6625 ;; This function is called by:
  6626 ;;		_main
  6627 ;; This function uses a non-reentrant model
  6628 ;;
  6629                           psect	text12,local,class=CODE,delta=2,merge=1,group=0
  6630                           	line	80
  6631                           global __ptext12
  6632                           __ptext12:	;psect for function _mfrc522Iniciar
  6633  0D11                     psect	text12
  6634                           	file	"rfid.c"
  6635                           	line	80
  6636                           	global	__size_of_mfrc522Iniciar
  6637                           	__size_of_mfrc522Iniciar	equ	__end_of_mfrc522Iniciar-_mfrc522Iniciar
  6638  0077                     	
  6639                           _mfrc522Iniciar:	
  6640  0D11                     ;incstack = 0
  6641                           	opt	stack 1
  6642                           ; Regs used in _mfrc522Iniciar: [wreg+status,2+status,0+pclath+cstack]
  6643                           	line	82
  6644                           	
  6645                           l3666:	
  6646  0D11                     ;rfid.c: 82:  mfrc522Rst();
  6647                           	fcall	_mfrc522Rst
  6648  0D11  120A  158A  2089  120A  158A  	line	84
  6649                           ;rfid.c: 84:  spiSoftTxCmd(0x2A, 0);
  6650                           	bsf	status, 5	;RP0=1, select bank1
  6651  0D16  1683               	bcf	status, 6	;RP1=0, select bank1
  6652  0D17  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6653  0D18  01A0               	movlw	low(02Ah)
  6654  0D19  302A               	fcall	_spiSoftTxCmd
  6655  0D1A  120A  158A  2472  120A  158A  	line	85
  6656                           ;rfid.c: 85:  spiSoftTxDat(0x8D);
  6657                           	movlw	low(08Dh)
  6658  0D1F  308D               	fcall	_spiSoftTxDat
  6659  0D20  120A  158A  22F1  120A  158A  	line	86
  6660                           	
  6661                           l3668:	
  6662  0D25                     ;rfid.c: 86:  PORTAbits.RA5 = 1;
  6663                           	bcf	status, 5	;RP0=0, select bank0
  6664  0D25  1283               	bcf	status, 6	;RP1=0, select bank0
  6665  0D26  1303               	bsf	(5),5	;volatile
  6666  0D27  1685               	line	88
  6667                           ;rfid.c: 88:  spiSoftTxCmd(0x2B, 0);
  6668                           	bsf	status, 5	;RP0=1, select bank1
  6669  0D28  1683               	bcf	status, 6	;RP1=0, select bank1
  6670  0D29  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6671  0D2A  01A0               	movlw	low(02Bh)
  6672  0D2B  302B               	fcall	_spiSoftTxCmd
  6673  0D2C  120A  158A  2472  120A  158A  	line	89
  6674                           ;rfid.c: 89:  spiSoftTxDat(0x3E);
  6675                           	movlw	low(03Eh)
  6676  0D31  303E               	fcall	_spiSoftTxDat
  6677  0D32  120A  158A  22F1  120A  158A  	line	90
  6678                           	
  6679                           l3670:	
  6680  0D37                     ;rfid.c: 90:  PORTAbits.RA5 = 1;
  6681                           	bcf	status, 5	;RP0=0, select bank0
  6682  0D37  1283               	bcf	status, 6	;RP1=0, select bank0
  6683  0D38  1303               	bsf	(5),5	;volatile
  6684  0D39  1685               	line	92
  6685                           ;rfid.c: 92:  spiSoftTxCmd(0x2D, 0);
  6686                           	bsf	status, 5	;RP0=1, select bank1
  6687  0D3A  1683               	bcf	status, 6	;RP1=0, select bank1
  6688  0D3B  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6689  0D3C  01A0               	movlw	low(02Dh)
  6690  0D3D  302D               	fcall	_spiSoftTxCmd
  6691  0D3E  120A  158A  2472  120A  158A  	line	93
  6692                           ;rfid.c: 93:  spiSoftTxDat(30);
  6693                           	movlw	low(01Eh)
  6694  0D43  301E               	fcall	_spiSoftTxDat
  6695  0D44  120A  158A  22F1  120A  158A  	line	94
  6696                           	
  6697                           l3672:	
  6698  0D49                     ;rfid.c: 94:  PORTAbits.RA5 = 1;
  6699                           	bcf	status, 5	;RP0=0, select bank0
  6700  0D49  1283               	bcf	status, 6	;RP1=0, select bank0
  6701  0D4A  1303               	bsf	(5),5	;volatile
  6702  0D4B  1685               	line	96
  6703                           ;rfid.c: 96:  spiSoftTxCmd(0x2C, 0);
  6704                           	bsf	status, 5	;RP0=1, select bank1
  6705  0D4C  1683               	bcf	status, 6	;RP1=0, select bank1
  6706  0D4D  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6707  0D4E  01A0               	movlw	low(02Ch)
  6708  0D4F  302C               	fcall	_spiSoftTxCmd
  6709  0D50  120A  158A  2472  120A  158A  	line	97
  6710                           ;rfid.c: 97:  spiSoftTxDat(0);
  6711                           	movlw	low(0)
  6712  0D55  3000               	fcall	_spiSoftTxDat
  6713  0D56  120A  158A  22F1  120A  158A  	line	98
  6714                           	
  6715                           l3674:	
  6716  0D5B                     ;rfid.c: 98:  PORTAbits.RA5 = 1;
  6717                           	bcf	status, 5	;RP0=0, select bank0
  6718  0D5B  1283               	bcf	status, 6	;RP1=0, select bank0
  6719  0D5C  1303               	bsf	(5),5	;volatile
  6720  0D5D  1685               	line	100
  6721                           ;rfid.c: 100:  spiSoftTxCmd(0x15, 0);
  6722                           	bsf	status, 5	;RP0=1, select bank1
  6723  0D5E  1683               	bcf	status, 6	;RP1=0, select bank1
  6724  0D5F  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6725  0D60  01A0               	movlw	low(015h)
  6726  0D61  3015               	fcall	_spiSoftTxCmd
  6727  0D62  120A  158A  2472  120A  158A  	line	101
  6728                           ;rfid.c: 101:  spiSoftTxDat(0x40);
  6729                           	movlw	low(040h)
  6730  0D67  3040               	fcall	_spiSoftTxDat
  6731  0D68  120A  158A  22F1  120A  158A  	line	102
  6732                           	
  6733                           l3676:	
  6734  0D6D                     ;rfid.c: 102:  PORTAbits.RA5 = 1;
  6735                           	bcf	status, 5	;RP0=0, select bank0
  6736  0D6D  1283               	bcf	status, 6	;RP1=0, select bank0
  6737  0D6E  1303               	bsf	(5),5	;volatile
  6738  0D6F  1685               	line	104
  6739                           ;rfid.c: 104:  spiSoftTxCmd(0x11, 0);
  6740                           	bsf	status, 5	;RP0=1, select bank1
  6741  0D70  1683               	bcf	status, 6	;RP1=0, select bank1
  6742  0D71  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6743  0D72  01A0               	movlw	low(011h)
  6744  0D73  3011               	fcall	_spiSoftTxCmd
  6745  0D74  120A  158A  2472  120A  158A  	line	105
  6746                           ;rfid.c: 105:  spiSoftTxDat(0x3D);
  6747                           	movlw	low(03Dh)
  6748  0D79  303D               	fcall	_spiSoftTxDat
  6749  0D7A  120A  158A  22F1  120A  158A  	line	106
  6750                           	
  6751                           l3678:	
  6752  0D7F                     ;rfid.c: 106:  PORTAbits.RA5 = 1;
  6753                           	bcf	status, 5	;RP0=0, select bank0
  6754  0D7F  1283               	bcf	status, 6	;RP1=0, select bank0
  6755  0D80  1303               	bsf	(5),5	;volatile
  6756  0D81  1685               	line	108
  6757                           ;rfid.c: 108:  mfrc522AntOn();
  6758                           	fcall	_mfrc522AntOn
  6759  0D82  160A  118A  27F3  120A  158A  	line	109
  6760                           	
  6761                           l308:	
  6762  0D87                     	return
  6763  0D87  0008               	opt stack 0
  6764                           GLOBAL	__end_of_mfrc522Iniciar
  6765                           	__end_of_mfrc522Iniciar:
  6766  0D88                     	signat	_mfrc522Iniciar,89
  6767                           	global	_mfrc522Rst
  6768                           
  6769 ;; *************** function _mfrc522Rst *****************
  6770 ;; Defined at:
  6771 ;;		line 73 in file "rfid.c"
  6772 ;; Parameters:    Size  Location     Type
  6773 ;;		None
  6774 ;; Auto vars:     Size  Location     Type
  6775 ;;		None
  6776 ;; Return value:  Size  Location     Type
  6777 ;;                  1    wreg      void 
  6778 ;; Registers used:
  6779 ;;		wreg, status,2, status,0, pclath, cstack
  6780 ;; Tracked objects:
  6781 ;;		On entry : 0/0
  6782 ;;		On exit  : 0/0
  6783 ;;		Unchanged: 0/0
  6784 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6785 ;;      Params:         0       0       0       0       0
  6786 ;;      Locals:         0       0       0       0       0
  6787 ;;      Temps:          0       0       0       0       0
  6788 ;;      Totals:         0       0       0       0       0
  6789 ;;Total ram usage:        0 bytes
  6790 ;; Hardware stack levels used:    1
  6791 ;; Hardware stack levels required when called:    4
  6792 ;; This function calls:
  6793 ;;		_spiSoftTxCmd
  6794 ;;		_spiSoftTxDat
  6795 ;; This function is called by:
  6796 ;;		_mfrc522Iniciar
  6797 ;; This function uses a non-reentrant model
  6798 ;;
  6799                           psect	text13,local,class=CODE,delta=2,merge=1,group=0
  6800                           	line	73
  6801                           global __ptext13
  6802                           __ptext13:	;psect for function _mfrc522Rst
  6803  0889                     psect	text13
  6804                           	file	"rfid.c"
  6805                           	line	73
  6806                           	global	__size_of_mfrc522Rst
  6807                           	__size_of_mfrc522Rst	equ	__end_of_mfrc522Rst-_mfrc522Rst
  6808  0013                     	
  6809                           _mfrc522Rst:	
  6810  0889                     ;incstack = 0
  6811                           	opt	stack 2
  6812                           ; Regs used in _mfrc522Rst: [wreg+status,2+status,0+pclath+cstack]
  6813                           	line	75
  6814                           	
  6815                           l3446:	
  6816  0889                     ;rfid.c: 75:  spiSoftTxCmd(0x01, 0);
  6817                           	bsf	status, 5	;RP0=1, select bank1
  6818  0889  1683               	bcf	status, 6	;RP1=0, select bank1
  6819  088A  1303               	clrf	(spiSoftTxCmd@oper)^080h
  6820  088B  01A0               	movlw	low(01h)
  6821  088C  3001               	fcall	_spiSoftTxCmd
  6822  088D  120A  158A  2472  120A  158A  	line	76
  6823                           ;rfid.c: 76:  spiSoftTxDat(0x0F);
  6824                           	movlw	low(0Fh)
  6825  0892  300F               	fcall	_spiSoftTxDat
  6826  0893  120A  158A  22F1  120A  158A  	line	77
  6827                           	
  6828                           l3448:	
  6829  0898                     ;rfid.c: 77:  PORTAbits.RA5 = 1;
  6830                           	bcf	status, 5	;RP0=0, select bank0
  6831  0898  1283               	bcf	status, 6	;RP1=0, select bank0
  6832  0899  1303               	bsf	(5),5	;volatile
  6833  089A  1685               	line	78
  6834                           	
  6835                           l305:	
  6836  089B                     	return
  6837  089B  0008               	opt stack 0
  6838                           GLOBAL	__end_of_mfrc522Rst
  6839                           	__end_of_mfrc522Rst:
  6840  089C                     	signat	_mfrc522Rst,89
  6841                           	global	_mfrc522AntOn
  6842                           
  6843 ;; *************** function _mfrc522AntOn *****************
  6844 ;; Defined at:
  6845 ;;		line 63 in file "rfid.c"
  6846 ;; Parameters:    Size  Location     Type
  6847 ;;		None
  6848 ;; Auto vars:     Size  Location     Type
  6849 ;;		None
  6850 ;; Return value:  Size  Location     Type
  6851 ;;                  1    wreg      void 
  6852 ;; Registers used:
  6853 ;;		wreg, status,2, status,0, pclath, cstack
  6854 ;; Tracked objects:
  6855 ;;		On entry : 0/0
  6856 ;;		On exit  : 0/0
  6857 ;;		Unchanged: 0/0
  6858 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6859 ;;      Params:         0       0       0       0       0
  6860 ;;      Locals:         0       0       0       0       0
  6861 ;;      Temps:          0       0       1       0       0
  6862 ;;      Totals:         0       0       1       0       0
  6863 ;;Total ram usage:        1 bytes
  6864 ;; Hardware stack levels used:    1
  6865 ;; Hardware stack levels required when called:    5
  6866 ;; This function calls:
  6867 ;;		_mfrc522SetBit
  6868 ;; This function is called by:
  6869 ;;		_mfrc522Iniciar
  6870 ;; This function uses a non-reentrant model
  6871 ;;
  6872                           psect	text14,local,class=CODE,delta=2,merge=1,group=0
  6873                           	line	63
  6874                           global __ptext14
  6875                           __ptext14:	;psect for function _mfrc522AntOn
  6876  17F3                     psect	text14
  6877                           	file	"rfid.c"
  6878                           	line	63
  6879                           	global	__size_of_mfrc522AntOn
  6880                           	__size_of_mfrc522AntOn	equ	__end_of_mfrc522AntOn-_mfrc522AntOn
  6881  000D                     	
  6882                           _mfrc522AntOn:	
  6883  17F3                     ;incstack = 0
  6884                           	opt	stack 1
  6885                           ; Regs used in _mfrc522AntOn: [wreg+status,2+status,0+pclath+cstack]
  6886                           	line	65
  6887                           	
  6888                           l3444:	
  6889  17F3                     ;rfid.c: 65:  mfrc522SetBit(0x14, 0x03);
  6890                           	movlw	low(03h)
  6891  17F3  3003               	bsf	status, 5	;RP0=1, select bank1
  6892  17F4  1683               	bcf	status, 6	;RP1=0, select bank1
  6893  17F5  1303               	movwf	(??_mfrc522AntOn+0)^080h+0
  6894  17F6  00AA               	movf	(??_mfrc522AntOn+0)^080h+0,w
  6895  17F7  082A               	movwf	(mfrc522SetBit@mascara)^080h
  6896  17F8  00A6               	movlw	low(014h)
  6897  17F9  3014               	fcall	_mfrc522SetBit
  6898  17FA  120A  158A  225A  160A  118A  	line	66
  6899                           	
  6900                           l302:	
  6901  17FF                     	return
  6902  17FF  0008               	opt stack 0
  6903                           GLOBAL	__end_of_mfrc522AntOn
  6904                           	__end_of_mfrc522AntOn:
  6905  1800                     	signat	_mfrc522AntOn,89
  6906                           	global	_mfrc522SetBit
  6907                           
  6908 ;; *************** function _mfrc522SetBit *****************
  6909 ;; Defined at:
  6910 ;;		line 51 in file "rfid.c"
  6911 ;; Parameters:    Size  Location     Type
  6912 ;;  end             1    wreg     unsigned char 
  6913 ;;  mascara         1    6[BANK1 ] unsigned char 
  6914 ;; Auto vars:     Size  Location     Type
  6915 ;;  end             1    8[BANK1 ] unsigned char 
  6916 ;;  lido            1    9[BANK1 ] unsigned char 
  6917 ;; Return value:  Size  Location     Type
  6918 ;;                  1    wreg      void 
  6919 ;; Registers used:
  6920 ;;		wreg, status,2, status,0, pclath, cstack
  6921 ;; Tracked objects:
  6922 ;;		On entry : 0/0
  6923 ;;		On exit  : 0/0
  6924 ;;		Unchanged: 0/0
  6925 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  6926 ;;      Params:         0       0       1       0       0
  6927 ;;      Locals:         0       0       2       0       0
  6928 ;;      Temps:          0       0       1       0       0
  6929 ;;      Totals:         0       0       4       0       0
  6930 ;;Total ram usage:        4 bytes
  6931 ;; Hardware stack levels used:    1
  6932 ;; Hardware stack levels required when called:    4
  6933 ;; This function calls:
  6934 ;;		_spiSoftRxDat
  6935 ;;		_spiSoftTxCmd
  6936 ;;		_spiSoftTxDat
  6937 ;; This function is called by:
  6938 ;;		_mfrc522AntOn
  6939 ;;		_tagTxCmd
  6940 ;; This function uses a non-reentrant model
  6941 ;;
  6942                           psect	text15,local,class=CODE,delta=2,merge=1,group=0
  6943                           	line	51
  6944                           global __ptext15
  6945                           __ptext15:	;psect for function _mfrc522SetBit
  6946  0A5A                     psect	text15
  6947                           	file	"rfid.c"
  6948                           	line	51
  6949                           	global	__size_of_mfrc522SetBit
  6950                           	__size_of_mfrc522SetBit	equ	__end_of_mfrc522SetBit-_mfrc522SetBit
  6951  0032                     	
  6952                           _mfrc522SetBit:	
  6953  0A5A                     ;incstack = 0
  6954                           	opt	stack 1
  6955                           ; Regs used in _mfrc522SetBit: [wreg+status,2+status,0+pclath+cstack]
  6956                           ;mfrc522SetBit@end stored from wreg
  6957                           	bsf	status, 5	;RP0=1, select bank1
  6958  0A5A  1683               	bcf	status, 6	;RP1=0, select bank1
  6959  0A5B  1303               	movwf	(mfrc522SetBit@end)^080h
  6960  0A5C  00A8               	line	54
  6961                           	
  6962                           l3402:	
  6963  0A5D                     ;rfid.c: 51: void mfrc522SetBit(char end, char mascara);rfid.c: 52: {;rfid.c: 53:  char 
                                 lido;;rfid.c: 54:  spiSoftTxCmd(end, 1);
  6964                           	clrf	(spiSoftTxCmd@oper)^080h
  6965  0A5D  01A0               	incf	(spiSoftTxCmd@oper)^080h,f
  6966  0A5E  0AA0               	movf	(mfrc522SetBit@end)^080h,w
  6967  0A5F  0828               	fcall	_spiSoftTxCmd
  6968  0A60  120A  158A  2472  120A  158A  	line	55
  6969                           ;rfid.c: 55:  lido = spiSoftRxDat();
  6970                           	fcall	_spiSoftRxDat
  6971  0A65  120A  158A  22BE  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  6972  0A6A  1683               	bcf	status, 6	;RP1=0, select bank1
  6973  0A6B  1303               	movwf	(??_mfrc522SetBit+0)^080h+0
  6974  0A6C  00A7               	movf	(??_mfrc522SetBit+0)^080h+0,w
  6975  0A6D  0827               	movwf	(mfrc522SetBit@lido)^080h
  6976  0A6E  00A9               	line	56
  6977                           	
  6978                           l3404:	
  6979  0A6F                     ;rfid.c: 56:  PORTAbits.RA5 = 1;
  6980                           	bcf	status, 5	;RP0=0, select bank0
  6981  0A6F  1283               	bcf	status, 6	;RP1=0, select bank0
  6982  0A70  1303               	bsf	(5),5	;volatile
  6983  0A71  1685               	line	57
  6984                           	
  6985                           l3406:	
  6986  0A72                     ;rfid.c: 57:  lido = lido | mascara;
  6987                           	bsf	status, 5	;RP0=1, select bank1
  6988  0A72  1683               	bcf	status, 6	;RP1=0, select bank1
  6989  0A73  1303               	movf	(mfrc522SetBit@lido)^080h,w
  6990  0A74  0829               	iorwf	(mfrc522SetBit@mascara)^080h,w
  6991  0A75  0426               	movwf	(??_mfrc522SetBit+0)^080h+0
  6992  0A76  00A7               	movf	(??_mfrc522SetBit+0)^080h+0,w
  6993  0A77  0827               	movwf	(mfrc522SetBit@lido)^080h
  6994  0A78  00A9               	line	58
  6995                           	
  6996                           l3408:	
  6997  0A79                     ;rfid.c: 58:  spiSoftTxCmd(end, 0);
  6998                           	clrf	(spiSoftTxCmd@oper)^080h
  6999  0A79  01A0               	movf	(mfrc522SetBit@end)^080h,w
  7000  0A7A  0828               	fcall	_spiSoftTxCmd
  7001  0A7B  120A  158A  2472  120A  158A  	line	59
  7002                           	
  7003                           l3410:	
  7004  0A80                     ;rfid.c: 59:  spiSoftTxDat(lido);
  7005                           	bsf	status, 5	;RP0=1, select bank1
  7006  0A80  1683               	bcf	status, 6	;RP1=0, select bank1
  7007  0A81  1303               	movf	(mfrc522SetBit@lido)^080h,w
  7008  0A82  0829               	fcall	_spiSoftTxDat
  7009  0A83  120A  158A  22F1  120A  158A  	line	60
  7010                           	
  7011                           l3412:	
  7012  0A88                     ;rfid.c: 60:  PORTAbits.RA5 = 1;
  7013                           	bcf	status, 5	;RP0=0, select bank0
  7014  0A88  1283               	bcf	status, 6	;RP1=0, select bank0
  7015  0A89  1303               	bsf	(5),5	;volatile
  7016  0A8A  1685               	line	61
  7017                           	
  7018                           l299:	
  7019  0A8B                     	return
  7020  0A8B  0008               	opt stack 0
  7021                           GLOBAL	__end_of_mfrc522SetBit
  7022                           	__end_of_mfrc522SetBit:
  7023  0A8C                     	signat	_mfrc522SetBit,8313
  7024                           	global	_spiSoftTxCmd
  7025                           
  7026 ;; *************** function _spiSoftTxCmd *****************
  7027 ;; Defined at:
  7028 ;;		line 50 in file "spi.c"
  7029 ;; Parameters:    Size  Location     Type
  7030 ;;  end             1    wreg     unsigned char 
  7031 ;;  oper            1    0[BANK1 ] unsigned char 
  7032 ;; Auto vars:     Size  Location     Type
  7033 ;;  end             1    3[BANK1 ] unsigned char 
  7034 ;;  reg             1    5[BANK1 ] unsigned char 
  7035 ;;  a               1    4[BANK1 ] unsigned char 
  7036 ;; Return value:  Size  Location     Type
  7037 ;;                  1    wreg      void 
  7038 ;; Registers used:
  7039 ;;		wreg, status,2, status,0, pclath, cstack
  7040 ;; Tracked objects:
  7041 ;;		On entry : 0/0
  7042 ;;		On exit  : 0/0
  7043 ;;		Unchanged: 0/0
  7044 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7045 ;;      Params:         0       0       1       0       0
  7046 ;;      Locals:         0       0       3       0       0
  7047 ;;      Temps:          0       0       2       0       0
  7048 ;;      Totals:         0       0       6       0       0
  7049 ;;Total ram usage:        6 bytes
  7050 ;; Hardware stack levels used:    1
  7051 ;; Hardware stack levels required when called:    3
  7052 ;; This function calls:
  7053 ;;		_spiSoftClk
  7054 ;; This function is called by:
  7055 ;;		_mfrc522ClrBit
  7056 ;;		_mfrc522SetBit
  7057 ;;		_mfrc522Rst
  7058 ;;		_mfrc522Iniciar
  7059 ;;		_tagTxCmd
  7060 ;;		_procura_tag
  7061 ;; This function uses a non-reentrant model
  7062 ;;
  7063                           psect	text16,local,class=CODE,delta=2,merge=1,group=0
  7064                           	file	"spi.c"
  7065                           	line	50
  7066                           global __ptext16
  7067                           __ptext16:	;psect for function _spiSoftTxCmd
  7068  0C72                     psect	text16
  7069                           	file	"spi.c"
  7070                           	line	50
  7071                           	global	__size_of_spiSoftTxCmd
  7072                           	__size_of_spiSoftTxCmd	equ	__end_of_spiSoftTxCmd-_spiSoftTxCmd
  7073  004F                     	
  7074                           _spiSoftTxCmd:	
  7075  0C72                     ;incstack = 0
  7076                           	opt	stack 2
  7077                           ; Regs used in _spiSoftTxCmd: [wreg+status,2+status,0+pclath+cstack]
  7078                           ;spiSoftTxCmd@end stored from wreg
  7079                           	bsf	status, 5	;RP0=1, select bank1
  7080  0C72  1683               	bcf	status, 6	;RP1=0, select bank1
  7081  0C73  1303               	movwf	(spiSoftTxCmd@end)^080h
  7082  0C74  00A3               	line	53
  7083                           	
  7084                           l3310:	
  7085  0C75                     ;spi.c: 50: void spiSoftTxCmd(char end, char oper);spi.c: 51: {;spi.c: 52:  char reg, a;
                                 ;spi.c: 53:  PORTAbits.RA5 = 0;
  7086                           	bcf	status, 5	;RP0=0, select bank0
  7087  0C75  1283               	bcf	status, 6	;RP1=0, select bank0
  7088  0C76  1303               	bcf	(5),5	;volatile
  7089  0C77  1285               	line	54
  7090                           	
  7091                           l3312:	
  7092  0C78                     ;spi.c: 54:  reg = end << 1;
  7093                           	bsf	status, 5	;RP0=1, select bank1
  7094  0C78  1683               	bcf	status, 6	;RP1=0, select bank1
  7095  0C79  1303               	movf	(spiSoftTxCmd@end)^080h,w
  7096  0C7A  0823               	movwf	(??_spiSoftTxCmd+0)^080h+0
  7097  0C7B  00A1               	addwf	(??_spiSoftTxCmd+0)^080h+0,w
  7098  0C7C  0721               	movwf	(??_spiSoftTxCmd+1)^080h+0
  7099  0C7D  00A2               	movf	(??_spiSoftTxCmd+1)^080h+0,w
  7100  0C7E  0822               	movwf	(spiSoftTxCmd@reg)^080h
  7101  0C7F  00A5               	line	55
  7102                           ;spi.c: 55:  if (oper)reg = reg | 0x80;
  7103                           	movf	((spiSoftTxCmd@oper)^080h),w
  7104  0C80  0820               	btfsc	status,2
  7105  0C81  1903               	goto	u2501
  7106  0C82  2C84               	goto	u2500
  7107  0C83  2C85               u2501:
  7108  0C84                     	goto	l3316
  7109  0C84  2C8B               u2500:
  7110  0C85                     	
  7111                           l3314:	
  7112  0C85                     	movf	(spiSoftTxCmd@reg)^080h,w
  7113  0C85  0825               	iorlw	080h
  7114  0C86  3880               	movwf	(??_spiSoftTxCmd+0)^080h+0
  7115  0C87  00A1               	movf	(??_spiSoftTxCmd+0)^080h+0,w
  7116  0C88  0821               	movwf	(spiSoftTxCmd@reg)^080h
  7117  0C89  00A5               	goto	l3318
  7118  0C8A  2C91               	line	56
  7119                           ;spi.c: 56:  else reg = reg & 0x7E;
  7120                           	
  7121                           l437:	
  7122  0C8B                     	
  7123                           l3316:	
  7124  0C8B                     	movf	(spiSoftTxCmd@reg)^080h,w
  7125  0C8B  0825               	andlw	07Eh
  7126  0C8C  397E               	movwf	(??_spiSoftTxCmd+0)^080h+0
  7127  0C8D  00A1               	movf	(??_spiSoftTxCmd+0)^080h+0,w
  7128  0C8E  0821               	movwf	(spiSoftTxCmd@reg)^080h
  7129  0C8F  00A5               	goto	l3318
  7130  0C90  2C91               	
  7131                           l438:	
  7132  0C91                     	line	58
  7133                           	
  7134                           l3318:	
  7135  0C91                     ;spi.c: 58:  for (a = 0; a < 8; a++)
  7136                           	clrf	(spiSoftTxCmd@a)^080h
  7137  0C91  01A4               	movlw	low(08h)
  7138  0C92  3008               	subwf	(spiSoftTxCmd@a)^080h,w
  7139  0C93  0224               	skipc
  7140  0C94  1C03               	goto	u2511
  7141  0C95  2C97               	goto	u2510
  7142  0C96  2C98               u2511:
  7143  0C97                     	goto	l439
  7144  0C97  2C9A               u2510:
  7145  0C98                     	goto	l443
  7146  0C98  2CC0               	
  7147                           l3320:	
  7148  0C99                     	goto	l443
  7149  0C99  2CC0               	
  7150                           l439:	
  7151  0C9A                     	line	60
  7152                           ;spi.c: 59:  {;spi.c: 60:   if (reg & 0x80)PORTCbits.RC5 = 1;
  7153                           	btfss	(spiSoftTxCmd@reg)^080h,(7)&7
  7154  0C9A  1FA5               	goto	u2521
  7155  0C9B  2C9D               	goto	u2520
  7156  0C9C  2C9E               u2521:
  7157  0C9D                     	goto	l441
  7158  0C9D  2CA2               u2520:
  7159  0C9E                     	
  7160                           l3322:	
  7161  0C9E                     	bcf	status, 5	;RP0=0, select bank0
  7162  0C9E  1283               	bcf	status, 6	;RP1=0, select bank0
  7163  0C9F  1303               	bsf	(7),5	;volatile
  7164  0CA0  1687               	goto	l3324
  7165  0CA1  2CA6               	line	61
  7166                           ;spi.c: 61:   else PORTCbits.RC5 = 0;
  7167                           	
  7168                           l441:	
  7169  0CA2                     	bcf	status, 5	;RP0=0, select bank0
  7170  0CA2  1283               	bcf	status, 6	;RP1=0, select bank0
  7171  0CA3  1303               	bcf	(7),5	;volatile
  7172  0CA4  1287               	goto	l3324
  7173  0CA5  2CA6               	
  7174                           l442:	
  7175  0CA6                     	line	62
  7176                           	
  7177                           l3324:	
  7178  0CA6                     ;spi.c: 62:   reg = reg << 1;
  7179                           	bsf	status, 5	;RP0=1, select bank1
  7180  0CA6  1683               	bcf	status, 6	;RP1=0, select bank1
  7181  0CA7  1303               	movf	(spiSoftTxCmd@reg)^080h,w
  7182  0CA8  0825               	movwf	(??_spiSoftTxCmd+0)^080h+0
  7183  0CA9  00A1               	addwf	(??_spiSoftTxCmd+0)^080h+0,w
  7184  0CAA  0721               	movwf	(??_spiSoftTxCmd+1)^080h+0
  7185  0CAB  00A2               	movf	(??_spiSoftTxCmd+1)^080h+0,w
  7186  0CAC  0822               	movwf	(spiSoftTxCmd@reg)^080h
  7187  0CAD  00A5               	line	63
  7188                           	
  7189                           l3326:	
  7190  0CAE                     ;spi.c: 63:   spiSoftClk();
  7191                           	fcall	_spiSoftClk
  7192  0CAE  160A  118A  27E9  120A  158A  	line	64
  7193                           	
  7194                           l3328:	
  7195  0CB3                     ;spi.c: 64:  }
  7196                           	movlw	low(01h)
  7197  0CB3  3001               	bsf	status, 5	;RP0=1, select bank1
  7198  0CB4  1683               	bcf	status, 6	;RP1=0, select bank1
  7199  0CB5  1303               	movwf	(??_spiSoftTxCmd+0)^080h+0
  7200  0CB6  00A1               	movf	(??_spiSoftTxCmd+0)^080h+0,w
  7201  0CB7  0821               	addwf	(spiSoftTxCmd@a)^080h,f
  7202  0CB8  07A4               	
  7203                           l3330:	
  7204  0CB9                     	movlw	low(08h)
  7205  0CB9  3008               	subwf	(spiSoftTxCmd@a)^080h,w
  7206  0CBA  0224               	skipc
  7207  0CBB  1C03               	goto	u2531
  7208  0CBC  2CBE               	goto	u2530
  7209  0CBD  2CBF               u2531:
  7210  0CBE                     	goto	l439
  7211  0CBE  2C9A               u2530:
  7212  0CBF                     	goto	l443
  7213  0CBF  2CC0               	
  7214                           l440:	
  7215  0CC0                     	line	65
  7216                           	
  7217                           l443:	
  7218  0CC0                     	return
  7219  0CC0  0008               	opt stack 0
  7220                           GLOBAL	__end_of_spiSoftTxCmd
  7221                           	__end_of_spiSoftTxCmd:
  7222  0CC1                     	signat	_spiSoftTxCmd,8313
  7223                           	global	_lcd_print
  7224                           
  7225 ;; *************** function _lcd_print *****************
  7226 ;; Defined at:
  7227 ;;		line 173 in file "lcd.c"
  7228 ;; Parameters:    Size  Location     Type
  7229 ;;  lin             1    wreg     unsigned char 
  7230 ;;  col             1    6[BANK1 ] unsigned char 
  7231 ;;  str             2    7[BANK1 ] PTR const unsigned char 
  7232 ;;		 -> uidAsci(13), STR_15(2), STR_14(2), STR_13(6), 
  7233 ;;		 -> STR_12(9), STR_11(8), STR_10(7), STR_9(7), 
  7234 ;;		 -> STR_8(16), STR_7(9), STR_6(7), STR_5(6), 
  7235 ;;		 -> STR_4(7), STR_3(10), STR_2(7), STR_1(11), 
  7236 ;;		 -> main@uidAsci(13), 
  7237 ;; Auto vars:     Size  Location     Type
  7238 ;;  lin             1   11[BANK1 ] unsigned char 
  7239 ;;  pos             1   10[BANK1 ] unsigned char 
  7240 ;; Return value:  Size  Location     Type
  7241 ;;                  1    wreg      void 
  7242 ;; Registers used:
  7243 ;;		wreg, fsr0l, fsr0h, status,2, status,0, btemp+1, pclath, cstack
  7244 ;; Tracked objects:
  7245 ;;		On entry : 0/0
  7246 ;;		On exit  : 0/0
  7247 ;;		Unchanged: 0/0
  7248 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7249 ;;      Params:         0       0       3       0       0
  7250 ;;      Locals:         0       0       2       0       0
  7251 ;;      Temps:          0       0       1       0       0
  7252 ;;      Totals:         0       0       6       0       0
  7253 ;;Total ram usage:        6 bytes
  7254 ;; Hardware stack levels used:    1
  7255 ;; Hardware stack levels required when called:    4
  7256 ;; This function calls:
  7257 ;;		_lcd_data
  7258 ;;		_lcd_lincol
  7259 ;; This function is called by:
  7260 ;;		_main
  7261 ;;		_rfid_read
  7262 ;;		_rfid_display
  7263 ;; This function uses a non-reentrant model
  7264 ;;
  7265                           psect	text17,local,class=CODE,delta=2,merge=1,group=0
  7266                           	file	"lcd.c"
  7267                           	line	173
  7268                           global __ptext17
  7269                           __ptext17:	;psect for function _lcd_print
  7270  0C27                     psect	text17
  7271                           	file	"lcd.c"
  7272                           	line	173
  7273                           	global	__size_of_lcd_print
  7274                           	__size_of_lcd_print	equ	__end_of_lcd_print-_lcd_print
  7275  004B                     	
  7276                           _lcd_print:	
  7277  0C27                     ;incstack = 0
  7278                           	opt	stack 3
  7279                           ; Regs used in _lcd_print: [wreg-fsr0h+status,2+status,0+btemp+1+pclath+cstack]
  7280                           ;lcd_print@lin stored from wreg
  7281                           	bsf	status, 5	;RP0=1, select bank1
  7282  0C27  1683               	bcf	status, 6	;RP1=0, select bank1
  7283  0C28  1303               	movwf	(lcd_print@lin)^080h
  7284  0C29  00AB               	line	175
  7285                           	
  7286                           l3754:	
  7287  0C2A                     ;lcd.c: 173: void lcd_print( unsigned char lin, unsigned char col, const char * str );lc
                                 d.c: 174: {;lcd.c: 175:     char pos = col;
  7288                           	movf	(lcd_print@col)^080h,w
  7289  0C2A  0826               	movwf	(??_lcd_print+0)^080h+0
  7290  0C2B  00A9               	movf	(??_lcd_print+0)^080h+0,w
  7291  0C2C  0829               	movwf	(lcd_print@pos)^080h
  7292  0C2D  00AA               	line	176
  7293                           	
  7294                           l3756:	
  7295  0C2E                     ;lcd.c: 176:     lcd_lincol( lin, col );
  7296                           	movf	(lcd_print@col)^080h,w
  7297  0C2E  0826               	movwf	(??_lcd_print+0)^080h+0
  7298  0C2F  00A9               	movf	(??_lcd_print+0)^080h+0,w
  7299  0C30  0829               	movwf	(lcd_lincol@col)^080h
  7300  0C31  00A3               	movf	(lcd_print@lin)^080h,w
  7301  0C32  082B               	fcall	_lcd_lincol
  7302  0C33  120A  158A  20AF  120A  158A  	line	178
  7303                           ;lcd.c: 178:     while( *str )
  7304                           	goto	l3764
  7305  0C38  2C5A               	
  7306                           l120:	
  7307  0C39                     	line	180
  7308                           	
  7309                           l3758:	
  7310  0C39                     ;lcd.c: 179:     {;lcd.c: 180:         lcd_data( *str );
  7311                           	bsf	status, 5	;RP0=1, select bank1
  7312  0C39  1683               	bcf	status, 6	;RP1=0, select bank1
  7313  0C3A  1303               	movf	(lcd_print@str+1)^080h,w
  7314  0C3B  0828               	bcf	status, 5	;RP0=0, select bank0
  7315  0C3C  1283               	bcf	status, 6	;RP1=0, select bank0
  7316  0C3D  1303               	movwf	btemp+1
  7317  0C3E  00FF               	bsf	status, 5	;RP0=1, select bank1
  7318  0C3F  1683               	bcf	status, 6	;RP1=0, select bank1
  7319  0C40  1303               	movf	(lcd_print@str)^080h,w
  7320  0C41  0827               	movwf	fsr0
  7321  0C42  0084               	bcf	status, 5	;RP0=0, select bank0
  7322  0C43  1283               	bcf	status, 6	;RP1=0, select bank0
  7323  0C44  1303               	fcall	stringtab
  7324  0C45  120A  158A  2000  120A  158A  	fcall	_lcd_data
  7325  0C4A  120A  158A  2399  120A  158A  	line	181
  7326                           	
  7327                           l3760:	
  7328  0C4F                     ;lcd.c: 181:         ++str;
  7329                           	movlw	01h
  7330  0C4F  3001               	bsf	status, 5	;RP0=1, select bank1
  7331  0C50  1683               	bcf	status, 6	;RP1=0, select bank1
  7332  0C51  1303               	addwf	(lcd_print@str)^080h,f
  7333  0C52  07A7               	skipnc
  7334  0C53  1803               	incf	(lcd_print@str+1)^080h,f
  7335  0C54  0AA8               	line	182
  7336                           	
  7337                           l3762:	
  7338  0C55                     ;lcd.c: 182:         ++pos;
  7339                           	movlw	low(01h)
  7340  0C55  3001               	movwf	(??_lcd_print+0)^080h+0
  7341  0C56  00A9               	movf	(??_lcd_print+0)^080h+0,w
  7342  0C57  0829               	addwf	(lcd_print@pos)^080h,f
  7343  0C58  07AA               	goto	l3764
  7344  0C59  2C5A               	line	183
  7345                           ;lcd.c: 183:     }
  7346                           	
  7347                           l119:	
  7348  0C5A                     	line	178
  7349                           	
  7350                           l3764:	
  7351  0C5A                     ;lcd.c: 178:     while( *str )
  7352                           	bsf	status, 5	;RP0=1, select bank1
  7353  0C5A  1683               	bcf	status, 6	;RP1=0, select bank1
  7354  0C5B  1303               	movf	(lcd_print@str+1)^080h,w
  7355  0C5C  0828               	bcf	status, 5	;RP0=0, select bank0
  7356  0C5D  1283               	bcf	status, 6	;RP1=0, select bank0
  7357  0C5E  1303               	movwf	btemp+1
  7358  0C5F  00FF               	bsf	status, 5	;RP0=1, select bank1
  7359  0C60  1683               	bcf	status, 6	;RP1=0, select bank1
  7360  0C61  1303               	movf	(lcd_print@str)^080h,w
  7361  0C62  0827               	movwf	fsr0
  7362  0C63  0084               	bcf	status, 5	;RP0=0, select bank0
  7363  0C64  1283               	bcf	status, 6	;RP1=0, select bank0
  7364  0C65  1303               	fcall	stringtab
  7365  0C66  120A  158A  2000  120A  158A  	xorlw	0
  7366  0C6B  3A00               	skipz
  7367  0C6C  1D03               	goto	u2941
  7368  0C6D  2C6F               	goto	u2940
  7369  0C6E  2C70               u2941:
  7370  0C6F                     	goto	l3758
  7371  0C6F  2C39               u2940:
  7372  0C70                     	goto	l122
  7373  0C70  2C71               	
  7374                           l121:	
  7375  0C71                     	line	184
  7376                           	
  7377                           l122:	
  7378  0C71                     	return
  7379  0C71  0008               	opt stack 0
  7380                           GLOBAL	__end_of_lcd_print
  7381                           	__end_of_lcd_print:
  7382  0C72                     	signat	_lcd_print,12409
  7383                           	global	_lcd_lincol
  7384                           
  7385 ;; *************** function _lcd_lincol *****************
  7386 ;; Defined at:
  7387 ;;		line 118 in file "lcd.c"
  7388 ;; Parameters:    Size  Location     Type
  7389 ;;  lin             1    wreg     unsigned char 
  7390 ;;  col             1    3[BANK1 ] unsigned char 
  7391 ;; Auto vars:     Size  Location     Type
  7392 ;;  lin             1    5[BANK1 ] unsigned char 
  7393 ;; Return value:  Size  Location     Type
  7394 ;;                  1    wreg      void 
  7395 ;; Registers used:
  7396 ;;		wreg, status,2, status,0, pclath, cstack
  7397 ;; Tracked objects:
  7398 ;;		On entry : 0/0
  7399 ;;		On exit  : 0/0
  7400 ;;		Unchanged: 0/0
  7401 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7402 ;;      Params:         0       0       1       0       0
  7403 ;;      Locals:         0       0       1       0       0
  7404 ;;      Temps:          0       0       1       0       0
  7405 ;;      Totals:         0       0       3       0       0
  7406 ;;Total ram usage:        3 bytes
  7407 ;; Hardware stack levels used:    1
  7408 ;; Hardware stack levels required when called:    3
  7409 ;; This function calls:
  7410 ;;		_lcd_inst
  7411 ;; This function is called by:
  7412 ;;		_lcd_print
  7413 ;;		_lcd_num
  7414 ;; This function uses a non-reentrant model
  7415 ;;
  7416                           psect	text18,local,class=CODE,delta=2,merge=1,group=0
  7417                           	line	118
  7418                           global __ptext18
  7419                           __ptext18:	;psect for function _lcd_lincol
  7420  08AF                     psect	text18
  7421                           	file	"lcd.c"
  7422                           	line	118
  7423                           	global	__size_of_lcd_lincol
  7424                           	__size_of_lcd_lincol	equ	__end_of_lcd_lincol-_lcd_lincol
  7425  0015                     	
  7426                           _lcd_lincol:	
  7427  08AF                     ;incstack = 0
  7428                           	opt	stack 3
  7429                           ; Regs used in _lcd_lincol: [wreg+status,2+status,0+pclath+cstack]
  7430                           ;lcd_lincol@lin stored from wreg
  7431                           	bsf	status, 5	;RP0=1, select bank1
  7432  08AF  1683               	bcf	status, 6	;RP1=0, select bank1
  7433  08B0  1303               	movwf	(lcd_lincol@lin)^080h
  7434  08B1  00A5               	line	120
  7435                           	
  7436                           l3442:	
  7437  08B2                     ;lcd.c: 118: void lcd_lincol ( unsigned char lin, unsigned char col);lcd.c: 119: {;lcd.c
                                 : 120:     lcd_inst ( (0x80+((0x40 * lin) + (col + 0x00) & 0x7F)) );
  7438                           	movf	(lcd_lincol@lin)^080h,w
  7439  08B2  0825               	movwf	(??_lcd_lincol+0)^080h+0
  7440  08B3  00A4               	movlw	06h
  7441  08B4  3006               u2635:
  7442  08B5                     	clrc
  7443  08B5  1003               	rlf	(??_lcd_lincol+0)^080h+0,f
  7444  08B6  0DA4               	addlw	-1
  7445  08B7  3EFF               	skipz
  7446  08B8  1D03               	goto	u2635
  7447  08B9  28B5               	movf	(lcd_lincol@col)^080h,w
  7448  08BA  0823               	addwf	0+(??_lcd_lincol+0)^080h+0,w
  7449  08BB  0724               	andlw	07Fh
  7450  08BC  397F               	addlw	080h
  7451  08BD  3E80               	fcall	_lcd_inst
  7452  08BE  120A  158A  2756  120A  158A  	line	121
  7453                           	
  7454                           l110:	
  7455  08C3                     	return
  7456  08C3  0008               	opt stack 0
  7457                           GLOBAL	__end_of_lcd_lincol
  7458                           	__end_of_lcd_lincol:
  7459  08C4                     	signat	_lcd_lincol,8313
  7460                           	global	_lcd_data
  7461                           
  7462 ;; *************** function _lcd_data *****************
  7463 ;; Defined at:
  7464 ;;		line 102 in file "lcd.c"
  7465 ;; Parameters:    Size  Location     Type
  7466 ;;  d               1    wreg     unsigned char 
  7467 ;; Auto vars:     Size  Location     Type
  7468 ;;  d               1    2[BANK1 ] unsigned char 
  7469 ;; Return value:  Size  Location     Type
  7470 ;;                  1    wreg      void 
  7471 ;; Registers used:
  7472 ;;		wreg, status,2, status,0
  7473 ;; Tracked objects:
  7474 ;;		On entry : 0/0
  7475 ;;		On exit  : 0/0
  7476 ;;		Unchanged: 0/0
  7477 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7478 ;;      Params:         0       0       0       0       0
  7479 ;;      Locals:         0       0       1       0       0
  7480 ;;      Temps:          0       0       2       0       0
  7481 ;;      Totals:         0       0       3       0       0
  7482 ;;Total ram usage:        3 bytes
  7483 ;; Hardware stack levels used:    1
  7484 ;; Hardware stack levels required when called:    2
  7485 ;; This function calls:
  7486 ;;		Nothing
  7487 ;; This function is called by:
  7488 ;;		_lcd_print
  7489 ;;		_lcd_num
  7490 ;; This function uses a non-reentrant model
  7491 ;;
  7492                           psect	text19,local,class=CODE,delta=2,merge=1,group=0
  7493                           	line	102
  7494                           global __ptext19
  7495                           __ptext19:	;psect for function _lcd_data
  7496  0B99                     psect	text19
  7497                           	file	"lcd.c"
  7498                           	line	102
  7499                           	global	__size_of_lcd_data
  7500                           	__size_of_lcd_data	equ	__end_of_lcd_data-_lcd_data
  7501  0044                     	
  7502                           _lcd_data:	
  7503  0B99                     ;incstack = 0
  7504                           	opt	stack 4
  7505                           ; Regs used in _lcd_data: [wreg+status,2+status,0]
  7506                           ;lcd_data@d stored from wreg
  7507                           	bsf	status, 5	;RP0=1, select bank1
  7508  0B99  1683               	bcf	status, 6	;RP1=0, select bank1
  7509  0B9A  1303               	movwf	(lcd_data@d)^080h
  7510  0B9B  00A2               	line	104
  7511                           	
  7512                           l3424:	
  7513  0B9C                     ;lcd.c: 102: void lcd_data (unsigned char d);lcd.c: 103: {;lcd.c: 104:     PORTDbits.RD4
                                  = 1;
  7514                           	bcf	status, 5	;RP0=0, select bank0
  7515  0B9C  1283               	bcf	status, 6	;RP1=0, select bank0
  7516  0B9D  1303               	bsf	(8),4	;volatile
  7517  0B9E  1608               	line	105
  7518                           	
  7519                           l3426:	
  7520  0B9F                     ;lcd.c: 105:     PORTD = ((PORTD & 0xF0)|(d>>4 & 0x0F));
  7521                           	bsf	status, 5	;RP0=1, select bank1
  7522  0B9F  1683               	bcf	status, 6	;RP1=0, select bank1
  7523  0BA0  1303               	movf	(lcd_data@d)^080h,w
  7524  0BA1  0822               	movwf	(??_lcd_data+0)^080h+0
  7525  0BA2  00A0               	movlw	04h
  7526  0BA3  3004               u2625:
  7527  0BA4                     	clrc
  7528  0BA4  1003               	rrf	(??_lcd_data+0)^080h+0,f
  7529  0BA5  0CA0               	addlw	-1
  7530  0BA6  3EFF               	skipz
  7531  0BA7  1D03               	goto	u2625
  7532  0BA8  2BA4               	movlw	low(0Fh)
  7533  0BA9  300F               	andwf	0+(??_lcd_data+0)^080h+0,w
  7534  0BAA  0520               	movwf	(??_lcd_data+1)^080h+0
  7535  0BAB  00A1               	bcf	status, 5	;RP0=0, select bank0
  7536  0BAC  1283               	bcf	status, 6	;RP1=0, select bank0
  7537  0BAD  1303               	movf	(8),w	;volatile
  7538  0BAE  0808               	andlw	0F0h
  7539  0BAF  39F0               	bsf	status, 5	;RP0=1, select bank1
  7540  0BB0  1683               	bcf	status, 6	;RP1=0, select bank1
  7541  0BB1  1303               	iorwf	0+(??_lcd_data+1)^080h+0,w
  7542  0BB2  0421               	bcf	status, 5	;RP0=0, select bank0
  7543  0BB3  1283               	bcf	status, 6	;RP1=0, select bank0
  7544  0BB4  1303               	movwf	(8)	;volatile
  7545  0BB5  0088               	line	106
  7546                           	
  7547                           l3428:	
  7548  0BB6                     ;lcd.c: 106:     PORTDbits.RD5 = 0;
  7549                           	bcf	(8),5	;volatile
  7550  0BB6  1288               	line	107
  7551                           	
  7552                           l3430:	
  7553  0BB7                     ;lcd.c: 107:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  7554                           	opt asmopt_push
  7555                           opt asmopt_off
  7556                           	movlw	65
  7557  0BB7  3041               	bsf	status, 5	;RP0=1, select bank1
  7558  0BB8  1683               	bcf	status, 6	;RP1=0, select bank1
  7559  0BB9  1303               movwf	((??_lcd_data+0)^080h+0),f
  7560  0BBA  00A0               	u4427:
  7561  0BBB                     decfsz	(??_lcd_data+0)^080h+0,f
  7562  0BBB  0BA0               	goto	u4427
  7563  0BBC  2BBB               	nop2
  7564  0BBD  2BBE               opt asmopt_pop
  7565                           
  7566                           	line	108
  7567                           	
  7568                           l3432:	
  7569  0BBE                     ;lcd.c: 108:     PORTDbits.RD5 = 1;
  7570                           	bcf	status, 5	;RP0=0, select bank0
  7571  0BBE  1283               	bcf	status, 6	;RP1=0, select bank0
  7572  0BBF  1303               	bsf	(8),5	;volatile
  7573  0BC0  1688               	line	110
  7574                           	
  7575                           l3434:	
  7576  0BC1                     ;lcd.c: 110:     PORTDbits.RD4 = 1;
  7577                           	bsf	(8),4	;volatile
  7578  0BC1  1608               	line	111
  7579                           	
  7580                           l3436:	
  7581  0BC2                     ;lcd.c: 111:     PORTD = ((PORTD & 0xF0)|(d & 0x0F));
  7582                           	movlw	low(0Fh)
  7583  0BC2  300F               	bsf	status, 5	;RP0=1, select bank1
  7584  0BC3  1683               	bcf	status, 6	;RP1=0, select bank1
  7585  0BC4  1303               	andwf	(lcd_data@d)^080h,w
  7586  0BC5  0522               	movwf	(??_lcd_data+0)^080h+0
  7587  0BC6  00A0               	bcf	status, 5	;RP0=0, select bank0
  7588  0BC7  1283               	bcf	status, 6	;RP1=0, select bank0
  7589  0BC8  1303               	movf	(8),w	;volatile
  7590  0BC9  0808               	andlw	0F0h
  7591  0BCA  39F0               	bsf	status, 5	;RP0=1, select bank1
  7592  0BCB  1683               	bcf	status, 6	;RP1=0, select bank1
  7593  0BCC  1303               	iorwf	0+(??_lcd_data+0)^080h+0,w
  7594  0BCD  0420               	bcf	status, 5	;RP0=0, select bank0
  7595  0BCE  1283               	bcf	status, 6	;RP1=0, select bank0
  7596  0BCF  1303               	movwf	(8)	;volatile
  7597  0BD0  0088               	line	112
  7598                           	
  7599                           l3438:	
  7600  0BD1                     ;lcd.c: 112:     PORTDbits.RD5 = 0;
  7601                           	bcf	(8),5	;volatile
  7602  0BD1  1288               	line	113
  7603                           ;lcd.c: 113:     _delay((unsigned long)((40)*(20000000/4000000.0)));
  7604                           	opt asmopt_push
  7605                           opt asmopt_off
  7606                           	movlw	65
  7607  0BD2  3041               	bsf	status, 5	;RP0=1, select bank1
  7608  0BD3  1683               	bcf	status, 6	;RP1=0, select bank1
  7609  0BD4  1303               movwf	((??_lcd_data+0)^080h+0),f
  7610  0BD5  00A0               	u4437:
  7611  0BD6                     decfsz	(??_lcd_data+0)^080h+0,f
  7612  0BD6  0BA0               	goto	u4437
  7613  0BD7  2BD6               	nop2
  7614  0BD8  2BD9               opt asmopt_pop
  7615                           
  7616                           	line	114
  7617                           	
  7618                           l3440:	
  7619  0BD9                     ;lcd.c: 114:     PORTDbits.RD5 = 1;
  7620                           	bcf	status, 5	;RP0=0, select bank0
  7621  0BD9  1283               	bcf	status, 6	;RP1=0, select bank0
  7622  0BDA  1303               	bsf	(8),5	;volatile
  7623  0BDB  1688               	line	115
  7624                           	
  7625                           l107:	
  7626  0BDC                     	return
  7627  0BDC  0008               	opt stack 0
  7628                           GLOBAL	__end_of_lcd_data
  7629                           	__end_of_lcd_data:
  7630  0BDD                     	signat	_lcd_data,4217
  7631                           	global	_lcd_init
  7632                           
  7633 ;; *************** function _lcd_init *****************
  7634 ;; Defined at:
  7635 ;;		line 124 in file "lcd.c"
  7636 ;; Parameters:    Size  Location     Type
  7637 ;;		None
  7638 ;; Auto vars:     Size  Location     Type
  7639 ;;		None
  7640 ;; Return value:  Size  Location     Type
  7641 ;;                  1    wreg      void 
  7642 ;; Registers used:
  7643 ;;		wreg, status,2, status,0, pclath, cstack
  7644 ;; Tracked objects:
  7645 ;;		On entry : 0/0
  7646 ;;		On exit  : 0/0
  7647 ;;		Unchanged: 0/0
  7648 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7649 ;;      Params:         0       0       0       0       0
  7650 ;;      Locals:         0       0       0       0       0
  7651 ;;      Temps:          0       0       3       0       0
  7652 ;;      Totals:         0       0       3       0       0
  7653 ;;Total ram usage:        3 bytes
  7654 ;; Hardware stack levels used:    1
  7655 ;; Hardware stack levels required when called:    3
  7656 ;; This function calls:
  7657 ;;		_lcd_inst
  7658 ;; This function is called by:
  7659 ;;		_main
  7660 ;; This function uses a non-reentrant model
  7661 ;;
  7662                           psect	text20,local,class=CODE,delta=2,merge=1,group=0
  7663                           	line	124
  7664                           global __ptext20
  7665                           __ptext20:	;psect for function _lcd_init
  7666  07AB                     psect	text20
  7667                           	file	"lcd.c"
  7668                           	line	124
  7669                           	global	__size_of_lcd_init
  7670                           	__size_of_lcd_init	equ	__end_of_lcd_init-_lcd_init
  7671  0050                     	
  7672                           _lcd_init:	
  7673  07AB                     ;incstack = 0
  7674                           	opt	stack 4
  7675                           ; Regs used in _lcd_init: [wreg+status,2+status,0+pclath+cstack]
  7676                           	line	126
  7677                           	
  7678                           l3680:	
  7679  07AB                     ;lcd.c: 126:     _delay((unsigned long)((100)*(20000000/4000.0)));
  7680                           	opt asmopt_push
  7681                           opt asmopt_off
  7682                           movlw  3
  7683  07AB  3003               	bsf	status, 5	;RP0=1, select bank1
  7684  07AC  1683               	bcf	status, 6	;RP1=0, select bank1
  7685  07AD  1303               movwf	((??_lcd_init+0)^080h+0+2),f
  7686  07AE  00A5               movlw	138
  7687  07AF  308A               movwf	((??_lcd_init+0)^080h+0+1),f
  7688  07B0  00A4               	movlw	85
  7689  07B1  3055               movwf	((??_lcd_init+0)^080h+0),f
  7690  07B2  00A3               	u4447:
  7691  07B3                     decfsz	((??_lcd_init+0)^080h+0),f
  7692  07B3  0BA3               	goto	u4447
  7693  07B4  2FB3               	decfsz	((??_lcd_init+0)^080h+0+1),f
  7694  07B5  0BA4               	goto	u4447
  7695  07B6  2FB3               	decfsz	((??_lcd_init+0)^080h+0+2),f
  7696  07B7  0BA5               	goto	u4447
  7697  07B8  2FB3               opt asmopt_pop
  7698                           
  7699                           	line	132
  7700                           	
  7701                           l3682:	
  7702  07B9                     ;lcd.c: 132:        TRISDbits.TRISD0 = 0;
  7703                           	bsf	status, 5	;RP0=1, select bank1
  7704  07B9  1683               	bcf	status, 6	;RP1=0, select bank1
  7705  07BA  1303               	bcf	(136)^080h,0	;volatile
  7706  07BB  1008               	line	133
  7707                           	
  7708                           l3684:	
  7709  07BC                     ;lcd.c: 133:        TRISDbits.TRISD1 = 0;
  7710                           	bcf	(136)^080h,1	;volatile
  7711  07BC  1088               	line	134
  7712                           	
  7713                           l3686:	
  7714  07BD                     ;lcd.c: 134:        TRISDbits.TRISD2 = 0;
  7715                           	bcf	(136)^080h,2	;volatile
  7716  07BD  1108               	line	135
  7717                           	
  7718                           l3688:	
  7719  07BE                     ;lcd.c: 135:        TRISDbits.TRISD3 = 0;
  7720                           	bcf	(136)^080h,3	;volatile
  7721  07BE  1188               	line	136
  7722                           	
  7723                           l3690:	
  7724  07BF                     ;lcd.c: 136:        TRISDbits.TRISD4 = 0;
  7725                           	bcf	(136)^080h,4	;volatile
  7726  07BF  1208               	line	137
  7727                           	
  7728                           l3692:	
  7729  07C0                     ;lcd.c: 137:        TRISDbits.TRISD5 = 0;
  7730                           	bcf	(136)^080h,5	;volatile
  7731  07C0  1288               	line	138
  7732                           	
  7733                           l3694:	
  7734  07C1                     ;lcd.c: 138:        TRISDbits.TRISD6 = 0;
  7735                           	bcf	(136)^080h,6	;volatile
  7736  07C1  1308               	line	139
  7737                           	
  7738                           l3696:	
  7739  07C2                     ;lcd.c: 139:        TRISDbits.TRISD7 = 0;
  7740                           	bcf	(136)^080h,7	;volatile
  7741  07C2  1388               	line	156
  7742                           ;lcd.c: 156:     _delay((unsigned long)((100)*(20000000/4000.0)));
  7743                           	opt asmopt_push
  7744                           opt asmopt_off
  7745                           movlw  3
  7746  07C3  3003               	bsf	status, 5	;RP0=1, select bank1
  7747  07C4  1683               	bcf	status, 6	;RP1=0, select bank1
  7748  07C5  1303               movwf	((??_lcd_init+0)^080h+0+2),f
  7749  07C6  00A5               movlw	138
  7750  07C7  308A               movwf	((??_lcd_init+0)^080h+0+1),f
  7751  07C8  00A4               	movlw	85
  7752  07C9  3055               movwf	((??_lcd_init+0)^080h+0),f
  7753  07CA  00A3               	u4457:
  7754  07CB                     decfsz	((??_lcd_init+0)^080h+0),f
  7755  07CB  0BA3               	goto	u4457
  7756  07CC  2FCB               	decfsz	((??_lcd_init+0)^080h+0+1),f
  7757  07CD  0BA4               	goto	u4457
  7758  07CE  2FCB               	decfsz	((??_lcd_init+0)^080h+0+2),f
  7759  07CF  0BA5               	goto	u4457
  7760  07D0  2FCB               opt asmopt_pop
  7761                           
  7762                           	line	157
  7763                           	
  7764                           l3698:	
  7765  07D1                     ;lcd.c: 157:     PORTDbits.RD5 = 1;
  7766                           	bcf	status, 5	;RP0=0, select bank0
  7767  07D1  1283               	bcf	status, 6	;RP1=0, select bank0
  7768  07D2  1303               	bsf	(8),5	;volatile
  7769  07D3  1688               	line	158
  7770                           	
  7771                           l3700:	
  7772  07D4                     ;lcd.c: 158:     lcd_inst( 0x20|0x00|0x08 );
  7773                           	movlw	low(028h)
  7774  07D4  3028               	fcall	_lcd_inst
  7775  07D5  120A  158A  2756  120A  118A  	line	159
  7776                           	
  7777                           l3702:	
  7778  07DA                     ;lcd.c: 159:     lcd_inst( 0x08|0x04|0x00|0x00 );
  7779                           	movlw	low(0Ch)
  7780  07DA  300C               	fcall	_lcd_inst
  7781  07DB  120A  158A  2756  120A  118A  	line	160
  7782                           	
  7783                           l3704:	
  7784  07E0                     ;lcd.c: 160:     lcd_inst( 0x01 );
  7785                           	movlw	low(01h)
  7786  07E0  3001               	fcall	_lcd_inst
  7787  07E1  120A  158A  2756  120A  118A  	line	161
  7788                           	
  7789                           l3706:	
  7790  07E6                     ;lcd.c: 161:     lcd_inst( 0x02 );
  7791                           	movlw	low(02h)
  7792  07E6  3002               	fcall	_lcd_inst
  7793  07E7  120A  158A  2756  120A  118A  	line	162
  7794                           ;lcd.c: 162:     _delay((unsigned long)((100)*(20000000/4000.0)));
  7795                           	opt asmopt_push
  7796                           opt asmopt_off
  7797                           movlw  3
  7798  07EC  3003               	bsf	status, 5	;RP0=1, select bank1
  7799  07ED  1683               	bcf	status, 6	;RP1=0, select bank1
  7800  07EE  1303               movwf	((??_lcd_init+0)^080h+0+2),f
  7801  07EF  00A5               movlw	138
  7802  07F0  308A               movwf	((??_lcd_init+0)^080h+0+1),f
  7803  07F1  00A4               	movlw	85
  7804  07F2  3055               movwf	((??_lcd_init+0)^080h+0),f
  7805  07F3  00A3               	u4467:
  7806  07F4                     decfsz	((??_lcd_init+0)^080h+0),f
  7807  07F4  0BA3               	goto	u4467
  7808  07F5  2FF4               	decfsz	((??_lcd_init+0)^080h+0+1),f
  7809  07F6  0BA4               	goto	u4467
  7810  07F7  2FF4               	decfsz	((??_lcd_init+0)^080h+0+2),f
  7811  07F8  0BA5               	goto	u4467
  7812  07F9  2FF4               opt asmopt_pop
  7813                           
  7814                           	line	163
  7815                           	
  7816                           l113:	
  7817  07FA                     	return
  7818  07FA  0008               	opt stack 0
  7819                           GLOBAL	__end_of_lcd_init
  7820                           	__end_of_lcd_init:
  7821  07FB                     	signat	_lcd_init,89
  7822                           	global	_lcd_clr
  7823                           
  7824 ;; *************** function _lcd_clr *****************
  7825 ;; Defined at:
  7826 ;;		line 166 in file "lcd.c"
  7827 ;; Parameters:    Size  Location     Type
  7828 ;;		None
  7829 ;; Auto vars:     Size  Location     Type
  7830 ;;		None
  7831 ;; Return value:  Size  Location     Type
  7832 ;;                  1    wreg      void 
  7833 ;; Registers used:
  7834 ;;		wreg, status,2, status,0, pclath, cstack
  7835 ;; Tracked objects:
  7836 ;;		On entry : 0/0
  7837 ;;		On exit  : 0/0
  7838 ;;		Unchanged: 0/0
  7839 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7840 ;;      Params:         0       0       0       0       0
  7841 ;;      Locals:         0       0       0       0       0
  7842 ;;      Temps:          0       0       0       0       0
  7843 ;;      Totals:         0       0       0       0       0
  7844 ;;Total ram usage:        0 bytes
  7845 ;; Hardware stack levels used:    1
  7846 ;; Hardware stack levels required when called:    3
  7847 ;; This function calls:
  7848 ;;		_lcd_inst
  7849 ;; This function is called by:
  7850 ;;		_main
  7851 ;; This function uses a non-reentrant model
  7852 ;;
  7853                           psect	text21,local,class=CODE,delta=2,merge=1,group=0
  7854                           	line	166
  7855                           global __ptext21
  7856                           __ptext21:	;psect for function _lcd_clr
  7857  17DA                     psect	text21
  7858                           	file	"lcd.c"
  7859                           	line	166
  7860                           	global	__size_of_lcd_clr
  7861                           	__size_of_lcd_clr	equ	__end_of_lcd_clr-_lcd_clr
  7862  0007                     	
  7863                           _lcd_clr:	
  7864  17DA                     ;incstack = 0
  7865                           	opt	stack 4
  7866                           ; Regs used in _lcd_clr: [wreg+status,2+status,0+pclath+cstack]
  7867                           	line	168
  7868                           	
  7869                           l3766:	
  7870  17DA                     ;lcd.c: 168:     lcd_inst(0x01);
  7871                           	movlw	low(01h)
  7872  17DA  3001               	fcall	_lcd_inst
  7873  17DB  120A  158A  2756  160A  118A  	line	169
  7874                           	
  7875                           l116:	
  7876  17E0                     	return
  7877  17E0  0008               	opt stack 0
  7878                           GLOBAL	__end_of_lcd_clr
  7879                           	__end_of_lcd_clr:
  7880  17E1                     	signat	_lcd_clr,89
  7881                           	global	_lcd_inst
  7882                           
  7883 ;; *************** function _lcd_inst *****************
  7884 ;; Defined at:
  7885 ;;		line 70 in file "lcd.c"
  7886 ;; Parameters:    Size  Location     Type
  7887 ;;  i               1    wreg     unsigned char 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  i               1    2[BANK1 ] unsigned char 
  7890 ;; Return value:  Size  Location     Type
  7891 ;;                  1    wreg      void 
  7892 ;; Registers used:
  7893 ;;		wreg, status,2, status,0
  7894 ;; Tracked objects:
  7895 ;;		On entry : 0/0
  7896 ;;		On exit  : 0/0
  7897 ;;		Unchanged: 0/0
  7898 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  7899 ;;      Params:         0       0       0       0       0
  7900 ;;      Locals:         0       0       1       0       0
  7901 ;;      Temps:          0       0       2       0       0
  7902 ;;      Totals:         0       0       3       0       0
  7903 ;;Total ram usage:        3 bytes
  7904 ;; Hardware stack levels used:    1
  7905 ;; Hardware stack levels required when called:    2
  7906 ;; This function calls:
  7907 ;;		Nothing
  7908 ;; This function is called by:
  7909 ;;		_lcd_lincol
  7910 ;;		_lcd_init
  7911 ;;		_lcd_clr
  7912 ;; This function uses a non-reentrant model
  7913 ;;
  7914                           psect	text22,local,class=CODE,delta=2,merge=1,group=0
  7915                           	line	70
  7916                           global __ptext22
  7917                           __ptext22:	;psect for function _lcd_inst
  7918  0F56                     psect	text22
  7919                           	file	"lcd.c"
  7920                           	line	70
  7921                           	global	__size_of_lcd_inst
  7922                           	__size_of_lcd_inst	equ	__end_of_lcd_inst-_lcd_inst
  7923  00AA                     	
  7924                           _lcd_inst:	
  7925  0F56                     ;incstack = 0
  7926                           	opt	stack 3
  7927                           ; Regs used in _lcd_inst: [wreg+status,2+status,0]
  7928                           ;lcd_inst@i stored from wreg
  7929                           	bsf	status, 5	;RP0=1, select bank1
  7930  0F56  1683               	bcf	status, 6	;RP1=0, select bank1
  7931  0F57  1303               	movwf	(lcd_inst@i)^080h
  7932  0F58  00A2               	line	72
  7933                           	
  7934                           l3348:	
  7935  0F59                     ;lcd.c: 70: void lcd_inst (unsigned char i);lcd.c: 71: {;lcd.c: 72:     PORTDbits.RD4 = 
                                 0;
  7936                           	bcf	status, 5	;RP0=0, select bank0
  7937  0F59  1283               	bcf	status, 6	;RP1=0, select bank0
  7938  0F5A  1303               	bcf	(8),4	;volatile
  7939  0F5B  1208               	line	73
  7940                           	
  7941                           l3350:	
  7942  0F5C                     ;lcd.c: 73:     PORTD = ((PORTD & 0xF0)|(i>>4 & 0x0F));
  7943                           	bsf	status, 5	;RP0=1, select bank1
  7944  0F5C  1683               	bcf	status, 6	;RP1=0, select bank1
  7945  0F5D  1303               	movf	(lcd_inst@i)^080h,w
  7946  0F5E  0822               	movwf	(??_lcd_inst+0)^080h+0
  7947  0F5F  00A0               	movlw	04h
  7948  0F60  3004               u2545:
  7949  0F61                     	clrc
  7950  0F61  1003               	rrf	(??_lcd_inst+0)^080h+0,f
  7951  0F62  0CA0               	addlw	-1
  7952  0F63  3EFF               	skipz
  7953  0F64  1D03               	goto	u2545
  7954  0F65  2F61               	movlw	low(0Fh)
  7955  0F66  300F               	andwf	0+(??_lcd_inst+0)^080h+0,w
  7956  0F67  0520               	movwf	(??_lcd_inst+1)^080h+0
  7957  0F68  00A1               	bcf	status, 5	;RP0=0, select bank0
  7958  0F69  1283               	bcf	status, 6	;RP1=0, select bank0
  7959  0F6A  1303               	movf	(8),w	;volatile
  7960  0F6B  0808               	andlw	0F0h
  7961  0F6C  39F0               	bsf	status, 5	;RP0=1, select bank1
  7962  0F6D  1683               	bcf	status, 6	;RP1=0, select bank1
  7963  0F6E  1303               	iorwf	0+(??_lcd_inst+1)^080h+0,w
  7964  0F6F  0421               	bcf	status, 5	;RP0=0, select bank0
  7965  0F70  1283               	bcf	status, 6	;RP1=0, select bank0
  7966  0F71  1303               	movwf	(8)	;volatile
  7967  0F72  0088               	line	75
  7968                           	
  7969                           l3352:	
  7970  0F73                     ;lcd.c: 75:     PORTDbits.RD5 =0;
  7971                           	bcf	(8),5	;volatile
  7972  0F73  1288               	line	76
  7973                           ;lcd.c: 76:     if ( i == 0x01 || i == 0x02 )
  7974                           	bsf	status, 5	;RP0=1, select bank1
  7975  0F74  1683               	bcf	status, 6	;RP1=0, select bank1
  7976  0F75  1303               		decf	((lcd_inst@i)^080h),w
  7977  0F76  0322               	btfsc	status,2
  7978  0F77  1903               	goto	u2551
  7979  0F78  2F7A               	goto	u2550
  7980  0F79  2F7B               u2551:
  7981  0F7A                     	goto	l3356
  7982  0F7A  2F82               u2550:
  7983  0F7B                     	
  7984                           l3354:	
  7985  0F7B                     		movlw	2
  7986  0F7B  3002               	xorwf	((lcd_inst@i)^080h),w
  7987  0F7C  0622               	btfss	status,2
  7988  0F7D  1D03               	goto	u2561
  7989  0F7E  2F80               	goto	u2560
  7990  0F7F  2F81               u2561:
  7991  0F80                     	goto	l3358
  7992  0F80  2F8D               u2560:
  7993  0F81                     	goto	l3356
  7994  0F81  2F82               	
  7995                           l97:	
  7996  0F82                     	line	77
  7997                           	
  7998                           l3356:	
  7999  0F82                     ;lcd.c: 77:         _delay((unsigned long)((2)*(20000000/4000.0)));
  8000                           	opt asmopt_push
  8001                           opt asmopt_off
  8002                           movlw	13
  8003  0F82  300D               	bsf	status, 5	;RP0=1, select bank1
  8004  0F83  1683               	bcf	status, 6	;RP1=0, select bank1
  8005  0F84  1303               movwf	((??_lcd_inst+0)^080h+0+1),f
  8006  0F85  00A1               	movlw	251
  8007  0F86  30FB               movwf	((??_lcd_inst+0)^080h+0),f
  8008  0F87  00A0               	u4477:
  8009  0F88                     decfsz	((??_lcd_inst+0)^080h+0),f
  8010  0F88  0BA0               	goto	u4477
  8011  0F89  2F88               	decfsz	((??_lcd_inst+0)^080h+0+1),f
  8012  0F8A  0BA1               	goto	u4477
  8013  0F8B  2F88               opt asmopt_pop
  8014                           
  8015                           	goto	l3360
  8016  0F8C  2F95               	line	78
  8017                           ;lcd.c: 78:     else
  8018                           	
  8019                           l95:	
  8020  0F8D                     	line	79
  8021                           	
  8022                           l3358:	
  8023  0F8D                     ;lcd.c: 79:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  8024                           	opt asmopt_push
  8025                           opt asmopt_off
  8026                           	movlw	65
  8027  0F8D  3041               	bsf	status, 5	;RP0=1, select bank1
  8028  0F8E  1683               	bcf	status, 6	;RP1=0, select bank1
  8029  0F8F  1303               movwf	((??_lcd_inst+0)^080h+0),f
  8030  0F90  00A0               	u4487:
  8031  0F91                     decfsz	(??_lcd_inst+0)^080h+0,f
  8032  0F91  0BA0               	goto	u4487
  8033  0F92  2F91               	nop2
  8034  0F93  2F94               opt asmopt_pop
  8035                           
  8036                           	goto	l3360
  8037  0F94  2F95               	
  8038                           l98:	
  8039  0F95                     	line	80
  8040                           	
  8041                           l3360:	
  8042  0F95                     ;lcd.c: 80:     PORTDbits.RD5 = 1;
  8043                           	bcf	status, 5	;RP0=0, select bank0
  8044  0F95  1283               	bcf	status, 6	;RP1=0, select bank0
  8045  0F96  1303               	bsf	(8),5	;volatile
  8046  0F97  1688               	line	82
  8047                           	
  8048                           l3362:	
  8049  0F98                     ;lcd.c: 82:     if ( (i & 0xF0) == (0x20 | 0x00) )
  8050                           	movlw	low(0F0h)
  8051  0F98  30F0               	bsf	status, 5	;RP0=1, select bank1
  8052  0F99  1683               	bcf	status, 6	;RP1=0, select bank1
  8053  0F9A  1303               	andwf	(lcd_inst@i)^080h,w
  8054  0F9B  0522               	movwf	(??_lcd_inst+0)^080h+0
  8055  0F9C  00A0               		movlw	32
  8056  0F9D  3020               	xorwf	((??_lcd_inst+0)^080h+0),w
  8057  0F9E  0620               	btfss	status,2
  8058  0F9F  1D03               	goto	u2571
  8059  0FA0  2FA2               	goto	u2570
  8060  0FA1  2FA3               u2571:
  8061  0FA2                     	goto	l3374
  8062  0FA2  2FC9               u2570:
  8063  0FA3                     	line	84
  8064                           	
  8065                           l3364:	
  8066  0FA3                     ;lcd.c: 83:     {;lcd.c: 84:         PORTDbits.RD4 = 0;
  8067                           	bcf	status, 5	;RP0=0, select bank0
  8068  0FA3  1283               	bcf	status, 6	;RP1=0, select bank0
  8069  0FA4  1303               	bcf	(8),4	;volatile
  8070  0FA5  1208               	line	85
  8071                           	
  8072                           l3366:	
  8073  0FA6                     ;lcd.c: 85:         PORTD = ((PORTD & 0xF0)|(i>>4 & 0x0F));
  8074                           	bsf	status, 5	;RP0=1, select bank1
  8075  0FA6  1683               	bcf	status, 6	;RP1=0, select bank1
  8076  0FA7  1303               	movf	(lcd_inst@i)^080h,w
  8077  0FA8  0822               	movwf	(??_lcd_inst+0)^080h+0
  8078  0FA9  00A0               	movlw	04h
  8079  0FAA  3004               u2585:
  8080  0FAB                     	clrc
  8081  0FAB  1003               	rrf	(??_lcd_inst+0)^080h+0,f
  8082  0FAC  0CA0               	addlw	-1
  8083  0FAD  3EFF               	skipz
  8084  0FAE  1D03               	goto	u2585
  8085  0FAF  2FAB               	movlw	low(0Fh)
  8086  0FB0  300F               	andwf	0+(??_lcd_inst+0)^080h+0,w
  8087  0FB1  0520               	movwf	(??_lcd_inst+1)^080h+0
  8088  0FB2  00A1               	bcf	status, 5	;RP0=0, select bank0
  8089  0FB3  1283               	bcf	status, 6	;RP1=0, select bank0
  8090  0FB4  1303               	movf	(8),w	;volatile
  8091  0FB5  0808               	andlw	0F0h
  8092  0FB6  39F0               	bsf	status, 5	;RP0=1, select bank1
  8093  0FB7  1683               	bcf	status, 6	;RP1=0, select bank1
  8094  0FB8  1303               	iorwf	0+(??_lcd_inst+1)^080h+0,w
  8095  0FB9  0421               	bcf	status, 5	;RP0=0, select bank0
  8096  0FBA  1283               	bcf	status, 6	;RP1=0, select bank0
  8097  0FBB  1303               	movwf	(8)	;volatile
  8098  0FBC  0088               	line	86
  8099                           	
  8100                           l3368:	
  8101  0FBD                     ;lcd.c: 86:         PORTDbits.RD5 = 0;
  8102                           	bcf	(8),5	;volatile
  8103  0FBD  1288               	line	87
  8104                           	
  8105                           l3370:	
  8106  0FBE                     ;lcd.c: 87:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  8107                           	opt asmopt_push
  8108                           opt asmopt_off
  8109                           	movlw	65
  8110  0FBE  3041               	bsf	status, 5	;RP0=1, select bank1
  8111  0FBF  1683               	bcf	status, 6	;RP1=0, select bank1
  8112  0FC0  1303               movwf	((??_lcd_inst+0)^080h+0),f
  8113  0FC1  00A0               	u4497:
  8114  0FC2                     decfsz	(??_lcd_inst+0)^080h+0,f
  8115  0FC2  0BA0               	goto	u4497
  8116  0FC3  2FC2               	nop2
  8117  0FC4  2FC5               opt asmopt_pop
  8118                           
  8119                           	line	88
  8120                           	
  8121                           l3372:	
  8122  0FC5                     ;lcd.c: 88:         PORTDbits.RD5 = 1;
  8123                           	bcf	status, 5	;RP0=0, select bank0
  8124  0FC5  1283               	bcf	status, 6	;RP1=0, select bank0
  8125  0FC6  1303               	bsf	(8),5	;volatile
  8126  0FC7  1688               	goto	l3374
  8127  0FC8  2FC9               	line	89
  8128                           ;lcd.c: 89:     }
  8129                           	
  8130                           l99:	
  8131  0FC9                     	line	91
  8132                           	
  8133                           l3374:	
  8134  0FC9                     ;lcd.c: 91:     PORTDbits.RD4 = 0;
  8135                           	bcf	status, 5	;RP0=0, select bank0
  8136  0FC9  1283               	bcf	(8),4	;volatile
  8137  0FCA  1208               	line	92
  8138                           	
  8139                           l3376:	
  8140  0FCB                     ;lcd.c: 92:     PORTD = ((PORTD & 0xF0)|(i & 0x0F));
  8141                           	movlw	low(0Fh)
  8142  0FCB  300F               	bsf	status, 5	;RP0=1, select bank1
  8143  0FCC  1683               	bcf	status, 6	;RP1=0, select bank1
  8144  0FCD  1303               	andwf	(lcd_inst@i)^080h,w
  8145  0FCE  0522               	movwf	(??_lcd_inst+0)^080h+0
  8146  0FCF  00A0               	bcf	status, 5	;RP0=0, select bank0
  8147  0FD0  1283               	bcf	status, 6	;RP1=0, select bank0
  8148  0FD1  1303               	movf	(8),w	;volatile
  8149  0FD2  0808               	andlw	0F0h
  8150  0FD3  39F0               	bsf	status, 5	;RP0=1, select bank1
  8151  0FD4  1683               	bcf	status, 6	;RP1=0, select bank1
  8152  0FD5  1303               	iorwf	0+(??_lcd_inst+0)^080h+0,w
  8153  0FD6  0420               	bcf	status, 5	;RP0=0, select bank0
  8154  0FD7  1283               	bcf	status, 6	;RP1=0, select bank0
  8155  0FD8  1303               	movwf	(8)	;volatile
  8156  0FD9  0088               	line	93
  8157                           	
  8158                           l3378:	
  8159  0FDA                     ;lcd.c: 93:     PORTDbits.RD5 = 0;
  8160                           	bcf	(8),5	;volatile
  8161  0FDA  1288               	line	94
  8162                           	
  8163                           l3380:	
  8164  0FDB                     ;lcd.c: 94:     if ( i==0x01 || i == 0x02 )
  8165                           	bsf	status, 5	;RP0=1, select bank1
  8166  0FDB  1683               	bcf	status, 6	;RP1=0, select bank1
  8167  0FDC  1303               		decf	((lcd_inst@i)^080h),w
  8168  0FDD  0322               	btfsc	status,2
  8169  0FDE  1903               	goto	u2591
  8170  0FDF  2FE1               	goto	u2590
  8171  0FE0  2FE2               u2591:
  8172  0FE1                     	goto	l3384
  8173  0FE1  2FE9               u2590:
  8174  0FE2                     	
  8175                           l3382:	
  8176  0FE2                     		movlw	2
  8177  0FE2  3002               	xorwf	((lcd_inst@i)^080h),w
  8178  0FE3  0622               	btfss	status,2
  8179  0FE4  1D03               	goto	u2601
  8180  0FE5  2FE7               	goto	u2600
  8181  0FE6  2FE8               u2601:
  8182  0FE7                     	goto	l3386
  8183  0FE7  2FF4               u2600:
  8184  0FE8                     	goto	l3384
  8185  0FE8  2FE9               	
  8186                           l102:	
  8187  0FE9                     	line	95
  8188                           	
  8189                           l3384:	
  8190  0FE9                     ;lcd.c: 95:         _delay((unsigned long)((2)*(20000000/4000.0)));
  8191                           	opt asmopt_push
  8192                           opt asmopt_off
  8193                           movlw	13
  8194  0FE9  300D               	bsf	status, 5	;RP0=1, select bank1
  8195  0FEA  1683               	bcf	status, 6	;RP1=0, select bank1
  8196  0FEB  1303               movwf	((??_lcd_inst+0)^080h+0+1),f
  8197  0FEC  00A1               	movlw	251
  8198  0FED  30FB               movwf	((??_lcd_inst+0)^080h+0),f
  8199  0FEE  00A0               	u4507:
  8200  0FEF                     decfsz	((??_lcd_inst+0)^080h+0),f
  8201  0FEF  0BA0               	goto	u4507
  8202  0FF0  2FEF               	decfsz	((??_lcd_inst+0)^080h+0+1),f
  8203  0FF1  0BA1               	goto	u4507
  8204  0FF2  2FEF               opt asmopt_pop
  8205                           
  8206                           	goto	l3388
  8207  0FF3  2FFC               	line	96
  8208                           ;lcd.c: 96:     else
  8209                           	
  8210                           l100:	
  8211  0FF4                     	line	97
  8212                           	
  8213                           l3386:	
  8214  0FF4                     ;lcd.c: 97:         _delay((unsigned long)((40)*(20000000/4000000.0)));
  8215                           	opt asmopt_push
  8216                           opt asmopt_off
  8217                           	movlw	65
  8218  0FF4  3041               	bsf	status, 5	;RP0=1, select bank1
  8219  0FF5  1683               	bcf	status, 6	;RP1=0, select bank1
  8220  0FF6  1303               movwf	((??_lcd_inst+0)^080h+0),f
  8221  0FF7  00A0               	u4517:
  8222  0FF8                     decfsz	(??_lcd_inst+0)^080h+0,f
  8223  0FF8  0BA0               	goto	u4517
  8224  0FF9  2FF8               	nop2
  8225  0FFA  2FFB               opt asmopt_pop
  8226                           
  8227                           	goto	l3388
  8228  0FFB  2FFC               	
  8229                           l103:	
  8230  0FFC                     	line	98
  8231                           	
  8232                           l3388:	
  8233  0FFC                     ;lcd.c: 98:     PORTDbits.RD5 = 1;
  8234                           	bcf	status, 5	;RP0=0, select bank0
  8235  0FFC  1283               	bcf	status, 6	;RP1=0, select bank0
  8236  0FFD  1303               	bsf	(8),5	;volatile
  8237  0FFE  1688               	line	99
  8238                           	
  8239                           l104:	
  8240  0FFF                     	return
  8241  0FFF  0008               	opt stack 0
  8242                           GLOBAL	__end_of_lcd_inst
  8243                           	__end_of_lcd_inst:
  8244  1000                     	signat	_lcd_inst,4217
  8245                           	global	_hex2Ascii
  8246                           
  8247 ;; *************** function _hex2Ascii *****************
  8248 ;; Defined at:
  8249 ;;		line 762 in file "rfid.c"
  8250 ;; Parameters:    Size  Location     Type
  8251 ;;  strIn           2    0[BANK1 ] PTR unsigned char 
  8252 ;;		 -> UID(7), main@UID(7), 
  8253 ;;  strOut          1    2[BANK1 ] PTR unsigned char 
  8254 ;;		 -> uidAsci(13), main@uidAsci(13), 
  8255 ;;  cntDig          1    3[BANK1 ] unsigned char 
  8256 ;; Auto vars:     Size  Location     Type
  8257 ;;  dez             1   11[BANK1 ] unsigned char 
  8258 ;;  uni             1   10[BANK1 ] unsigned char 
  8259 ;;  a               1    9[BANK1 ] unsigned char 
  8260 ;;  b               1    8[BANK1 ] unsigned char 
  8261 ;; Return value:  Size  Location     Type
  8262 ;;                  1    wreg      void 
  8263 ;; Registers used:
  8264 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  8265 ;; Tracked objects:
  8266 ;;		On entry : 0/0
  8267 ;;		On exit  : 0/0
  8268 ;;		Unchanged: 0/0
  8269 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8270 ;;      Params:         0       0       4       0       0
  8271 ;;      Locals:         0       0       4       0       0
  8272 ;;      Temps:          0       0       4       0       0
  8273 ;;      Totals:         0       0      12       0       0
  8274 ;;Total ram usage:       12 bytes
  8275 ;; Hardware stack levels used:    1
  8276 ;; Hardware stack levels required when called:    2
  8277 ;; This function calls:
  8278 ;;		Nothing
  8279 ;; This function is called by:
  8280 ;;		_main
  8281 ;;		_rfid_display
  8282 ;; This function uses a non-reentrant model
  8283 ;;
  8284                           psect	text23,local,class=CODE,delta=2,merge=1,group=0
  8285                           	file	"rfid.c"
  8286                           	line	762
  8287                           global __ptext23
  8288                           __ptext23:	;psect for function _hex2Ascii
  8289  0D88                     psect	text23
  8290                           	file	"rfid.c"
  8291                           	line	762
  8292                           	global	__size_of_hex2Ascii
  8293                           	__size_of_hex2Ascii	equ	__end_of_hex2Ascii-_hex2Ascii
  8294  008D                     	
  8295                           _hex2Ascii:	
  8296  0D88                     ;incstack = 0
  8297                           	opt	stack 5
  8298                           ; Regs used in _hex2Ascii: [wreg-fsr0h+status,2+status,0]
  8299                           	line	765
  8300                           	
  8301                           l4610:	
  8302  0D88                     ;rfid.c: 762: void hex2Ascii(char *strIn, char *strOut, char cntDig);rfid.c: 763: {;rfid
                                 .c: 764:  char a,b,uni,dez;;rfid.c: 765:  for(a=0;a<cntDig;a++)
  8303                           	bsf	status, 5	;RP0=1, select bank1
  8304  0D88  1683               	bcf	status, 6	;RP1=0, select bank1
  8305  0D89  1303               	clrf	(hex2Ascii@a)^080h
  8306  0D8A  01A9               	goto	l4642
  8307  0D8B  2E0D               	
  8308                           l399:	
  8309  0D8C                     	line	767
  8310                           	
  8311                           l4612:	
  8312  0D8C                     ;rfid.c: 766:  {;rfid.c: 767:   b=a*2;
  8313                           	movf	(hex2Ascii@a)^080h,w
  8314  0D8C  0829               	movwf	(??_hex2Ascii+0)^080h+0
  8315  0D8D  00A4               	addwf	(??_hex2Ascii+0)^080h+0,w
  8316  0D8E  0724               	movwf	(??_hex2Ascii+1)^080h+0
  8317  0D8F  00A5               	movf	(??_hex2Ascii+1)^080h+0,w
  8318  0D90  0825               	movwf	(hex2Ascii@b)^080h
  8319  0D91  00A8               	line	768
  8320                           	
  8321                           l4614:	
  8322  0D92                     ;rfid.c: 768:   uni= strIn[a] & 0x0F;
  8323                           	movf	(hex2Ascii@a)^080h,w
  8324  0D92  0829               	addwf	(hex2Ascii@strIn)^080h,w
  8325  0D93  0720               	movwf	(??_hex2Ascii+0)^080h+0
  8326  0D94  00A4               	movf	(hex2Ascii@strIn+1)^080h,w
  8327  0D95  0821               	skipnc
  8328  0D96  1803               	addlw	1
  8329  0D97  3E01               	movwf	1+((??_hex2Ascii+0)^080h+0)
  8330  0D98  00A5               	movf	0+(??_hex2Ascii+0)^080h+0,w
  8331  0D99  0824               	movwf	fsr0
  8332  0D9A  0084               	bsf	status,7
  8333  0D9B  1783               	btfss	1+(??_hex2Ascii+0)^080h+0,0
  8334  0D9C  1C25               	bcf	status,7
  8335  0D9D  1383               	movf	indf,w
  8336  0D9E  0800               	andlw	0Fh
  8337  0D9F  390F               	movwf	(??_hex2Ascii+2)^080h+0
  8338  0DA0  00A6               	movf	(??_hex2Ascii+2)^080h+0,w
  8339  0DA1  0826               	movwf	(hex2Ascii@uni)^080h
  8340  0DA2  00AA               	line	769
  8341                           	
  8342                           l4616:	
  8343  0DA3                     ;rfid.c: 769:   dez=(strIn[a] & 0xF0)>>4;
  8344                           	movf	(hex2Ascii@a)^080h,w
  8345  0DA3  0829               	addwf	(hex2Ascii@strIn)^080h,w
  8346  0DA4  0720               	movwf	(??_hex2Ascii+0)^080h+0
  8347  0DA5  00A4               	movf	(hex2Ascii@strIn+1)^080h,w
  8348  0DA6  0821               	skipnc
  8349  0DA7  1803               	addlw	1
  8350  0DA8  3E01               	movwf	1+((??_hex2Ascii+0)^080h+0)
  8351  0DA9  00A5               	movf	0+(??_hex2Ascii+0)^080h+0,w
  8352  0DAA  0824               	movwf	fsr0
  8353  0DAB  0084               	bsf	status,7
  8354  0DAC  1783               	btfss	1+(??_hex2Ascii+0)^080h+0,0
  8355  0DAD  1C25               	bcf	status,7
  8356  0DAE  1383               	movf	indf,w
  8357  0DAF  0800               	movwf	(??_hex2Ascii+2)^080h+0
  8358  0DB0  00A6               	movlw	04h
  8359  0DB1  3004               u4095:
  8360  0DB2                     	clrc
  8361  0DB2  1003               	rrf	(??_hex2Ascii+2)^080h+0,f
  8362  0DB3  0CA6               	addlw	-1
  8363  0DB4  3EFF               	skipz
  8364  0DB5  1D03               	goto	u4095
  8365  0DB6  2DB2               	movf	0+(??_hex2Ascii+2)^080h+0,w
  8366  0DB7  0826               	andlw	0Fh
  8367  0DB8  390F               	movwf	(??_hex2Ascii+3)^080h+0
  8368  0DB9  00A7               	movf	(??_hex2Ascii+3)^080h+0,w
  8369  0DBA  0827               	movwf	(hex2Ascii@dez)^080h
  8370  0DBB  00AB               	line	770
  8371                           	
  8372                           l4618:	
  8373  0DBC                     ;rfid.c: 770:   if (uni <10) uni += '0';
  8374                           	movlw	low(0Ah)
  8375  0DBC  300A               	subwf	(hex2Ascii@uni)^080h,w
  8376  0DBD  022A               	skipnc
  8377  0DBE  1803               	goto	u4101
  8378  0DBF  2DC1               	goto	u4100
  8379  0DC0  2DC2               u4101:
  8380  0DC1                     	goto	l4622
  8381  0DC1  2DC7               u4100:
  8382  0DC2                     	
  8383                           l4620:	
  8384  0DC2                     	movlw	low(030h)
  8385  0DC2  3030               	movwf	(??_hex2Ascii+0)^080h+0
  8386  0DC3  00A4               	movf	(??_hex2Ascii+0)^080h+0,w
  8387  0DC4  0824               	addwf	(hex2Ascii@uni)^080h,f
  8388  0DC5  07AA               	goto	l4622
  8389  0DC6  2DC7               	
  8390                           l400:	
  8391  0DC7                     	line	771
  8392                           	
  8393                           l4622:	
  8394  0DC7                     ;rfid.c: 771:   if (uni > 9 && uni < 16) uni += 0x37;
  8395                           	movlw	low(0Ah)
  8396  0DC7  300A               	subwf	(hex2Ascii@uni)^080h,w
  8397  0DC8  022A               	skipc
  8398  0DC9  1C03               	goto	u4111
  8399  0DCA  2DCC               	goto	u4110
  8400  0DCB  2DCD               u4111:
  8401  0DCC                     	goto	l4628
  8402  0DCC  2DD8               u4110:
  8403  0DCD                     	
  8404                           l4624:	
  8405  0DCD                     	movlw	low(010h)
  8406  0DCD  3010               	subwf	(hex2Ascii@uni)^080h,w
  8407  0DCE  022A               	skipnc
  8408  0DCF  1803               	goto	u4121
  8409  0DD0  2DD2               	goto	u4120
  8410  0DD1  2DD3               u4121:
  8411  0DD2                     	goto	l4628
  8412  0DD2  2DD8               u4120:
  8413  0DD3                     	
  8414                           l4626:	
  8415  0DD3                     	movlw	low(037h)
  8416  0DD3  3037               	movwf	(??_hex2Ascii+0)^080h+0
  8417  0DD4  00A4               	movf	(??_hex2Ascii+0)^080h+0,w
  8418  0DD5  0824               	addwf	(hex2Ascii@uni)^080h,f
  8419  0DD6  07AA               	goto	l4628
  8420  0DD7  2DD8               	
  8421                           l401:	
  8422  0DD8                     	line	772
  8423                           	
  8424                           l4628:	
  8425  0DD8                     ;rfid.c: 772:   if (dez <10) dez += '0';
  8426                           	movlw	low(0Ah)
  8427  0DD8  300A               	subwf	(hex2Ascii@dez)^080h,w
  8428  0DD9  022B               	skipnc
  8429  0DDA  1803               	goto	u4131
  8430  0DDB  2DDD               	goto	u4130
  8431  0DDC  2DDE               u4131:
  8432  0DDD                     	goto	l4632
  8433  0DDD  2DE3               u4130:
  8434  0DDE                     	
  8435                           l4630:	
  8436  0DDE                     	movlw	low(030h)
  8437  0DDE  3030               	movwf	(??_hex2Ascii+0)^080h+0
  8438  0DDF  00A4               	movf	(??_hex2Ascii+0)^080h+0,w
  8439  0DE0  0824               	addwf	(hex2Ascii@dez)^080h,f
  8440  0DE1  07AB               	goto	l4632
  8441  0DE2  2DE3               	
  8442                           l402:	
  8443  0DE3                     	line	773
  8444                           	
  8445                           l4632:	
  8446  0DE3                     ;rfid.c: 773:   if (dez > 9 && dez < 16) dez += 0x37;
  8447                           	movlw	low(0Ah)
  8448  0DE3  300A               	subwf	(hex2Ascii@dez)^080h,w
  8449  0DE4  022B               	skipc
  8450  0DE5  1C03               	goto	u4141
  8451  0DE6  2DE8               	goto	u4140
  8452  0DE7  2DE9               u4141:
  8453  0DE8                     	goto	l4638
  8454  0DE8  2DF4               u4140:
  8455  0DE9                     	
  8456                           l4634:	
  8457  0DE9                     	movlw	low(010h)
  8458  0DE9  3010               	subwf	(hex2Ascii@dez)^080h,w
  8459  0DEA  022B               	skipnc
  8460  0DEB  1803               	goto	u4151
  8461  0DEC  2DEE               	goto	u4150
  8462  0DED  2DEF               u4151:
  8463  0DEE                     	goto	l4638
  8464  0DEE  2DF4               u4150:
  8465  0DEF                     	
  8466                           l4636:	
  8467  0DEF                     	movlw	low(037h)
  8468  0DEF  3037               	movwf	(??_hex2Ascii+0)^080h+0
  8469  0DF0  00A4               	movf	(??_hex2Ascii+0)^080h+0,w
  8470  0DF1  0824               	addwf	(hex2Ascii@dez)^080h,f
  8471  0DF2  07AB               	goto	l4638
  8472  0DF3  2DF4               	
  8473                           l403:	
  8474  0DF4                     	line	774
  8475                           	
  8476                           l4638:	
  8477  0DF4                     ;rfid.c: 774:   strOut[b]=dez;
  8478                           	movf	(hex2Ascii@dez)^080h,w
  8479  0DF4  082B               	movwf	(??_hex2Ascii+0)^080h+0
  8480  0DF5  00A4               	movf	(hex2Ascii@b)^080h,w
  8481  0DF6  0828               	addwf	(hex2Ascii@strOut)^080h,w
  8482  0DF7  0722               	movwf	(??_hex2Ascii+1)^080h+0
  8483  0DF8  00A5               	movf	0+(??_hex2Ascii+1)^080h+0,w
  8484  0DF9  0825               	movwf	fsr0
  8485  0DFA  0084               	movf	(??_hex2Ascii+0)^080h+0,w
  8486  0DFB  0824               	bsf	status, 7	;select IRP bank2
  8487  0DFC  1783               	movwf	indf
  8488  0DFD  0080               	line	775
  8489                           	
  8490                           l4640:	
  8491  0DFE                     ;rfid.c: 775:   strOut[b+1]=uni;
  8492                           	movf	(hex2Ascii@uni)^080h,w
  8493  0DFE  082A               	movwf	(??_hex2Ascii+0)^080h+0
  8494  0DFF  00A4               	movf	(hex2Ascii@b)^080h,w
  8495  0E00  0828               	addlw	01h
  8496  0E01  3E01               	addwf	(hex2Ascii@strOut)^080h,w
  8497  0E02  0722               	movwf	(??_hex2Ascii+1)^080h+0
  8498  0E03  00A5               	movf	0+(??_hex2Ascii+1)^080h+0,w
  8499  0E04  0825               	movwf	fsr0
  8500  0E05  0084               	movf	(??_hex2Ascii+0)^080h+0,w
  8501  0E06  0824               	movwf	indf
  8502  0E07  0080               	line	776
  8503                           ;rfid.c: 776:  }
  8504                           	movlw	low(01h)
  8505  0E08  3001               	movwf	(??_hex2Ascii+0)^080h+0
  8506  0E09  00A4               	movf	(??_hex2Ascii+0)^080h+0,w
  8507  0E0A  0824               	addwf	(hex2Ascii@a)^080h,f
  8508  0E0B  07A9               	goto	l4642
  8509  0E0C  2E0D               	
  8510                           l398:	
  8511  0E0D                     	
  8512                           l4642:	
  8513  0E0D                     	movf	(hex2Ascii@cntDig)^080h,w
  8514  0E0D  0823               	subwf	(hex2Ascii@a)^080h,w
  8515  0E0E  0229               	skipc
  8516  0E0F  1C03               	goto	u4161
  8517  0E10  2E12               	goto	u4160
  8518  0E11  2E13               u4161:
  8519  0E12                     	goto	l4612
  8520  0E12  2D8C               u4160:
  8521  0E13                     	goto	l405
  8522  0E13  2E14               	
  8523                           l404:	
  8524  0E14                     	line	777
  8525                           	
  8526                           l405:	
  8527  0E14                     	return
  8528  0E14  0008               	opt stack 0
  8529                           GLOBAL	__end_of_hex2Ascii
  8530                           	__end_of_hex2Ascii:
  8531  0E15                     	signat	_hex2Ascii,12409
  8532                           	global	_MFRC522_AntiColl
  8533                           
  8534 ;; *************** function _MFRC522_AntiColl *****************
  8535 ;; Defined at:
  8536 ;;		line 718 in file "rfid.c"
  8537 ;; Parameters:    Size  Location     Type
  8538 ;;  serNum          2   32[BANK1 ] PTR unsigned char 
  8539 ;;		 -> UID(7), main@UID(7), 
  8540 ;; Auto vars:     Size  Location     Type
  8541 ;;  i               1   42[BANK1 ] unsigned char 
  8542 ;;  _status         1   41[BANK1 ] unsigned char 
  8543 ;;  unLen           1   40[BANK1 ] unsigned char 
  8544 ;;  serNumCheck     1   39[BANK1 ] unsigned char 
  8545 ;; Return value:  Size  Location     Type
  8546 ;;                  1    wreg      unsigned char 
  8547 ;; Registers used:
  8548 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8549 ;; Tracked objects:
  8550 ;;		On entry : 0/0
  8551 ;;		On exit  : 0/0
  8552 ;;		Unchanged: 0/0
  8553 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8554 ;;      Params:         0       0       2       0       0
  8555 ;;      Locals:         0       0       4       0       0
  8556 ;;      Temps:          0       0       5       0       0
  8557 ;;      Totals:         0       0      11       0       0
  8558 ;;Total ram usage:       11 bytes
  8559 ;; Hardware stack levels used:    1
  8560 ;; Hardware stack levels required when called:    7
  8561 ;; This function calls:
  8562 ;;		_MFRC522_Clear_Bit
  8563 ;;		_MFRC522_ToCard
  8564 ;;		_MFRC522_Wr
  8565 ;; This function is called by:
  8566 ;;		_main
  8567 ;;		_rfid_read
  8568 ;; This function uses a non-reentrant model
  8569 ;;
  8570                           psect	text24,local,class=CODE,delta=2,merge=1,group=0
  8571                           	line	718
  8572                           global __ptext24
  8573                           __ptext24:	;psect for function _MFRC522_AntiColl
  8574  0E15                     psect	text24
  8575                           	file	"rfid.c"
  8576                           	line	718
  8577                           	global	__size_of_MFRC522_AntiColl
  8578                           	__size_of_MFRC522_AntiColl	equ	__end_of_MFRC522_AntiColl-_MFRC522_AntiColl
  8579  009B                     	
  8580                           _MFRC522_AntiColl:	
  8581  0E15                     ;incstack = 0
  8582                           	opt	stack 0
  8583                           ; Regs used in _MFRC522_AntiColl: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8584                           	line	722
  8585                           	
  8586                           l4578:	
  8587  0E15                     ;rfid.c: 718: char MFRC522_AntiColl(char *serNum);rfid.c: 719: {;rfid.c: 720:  char _sta
                                 tus;;rfid.c: 721:  char i;;rfid.c: 722:  char serNumCheck = 0;
  8588                           	bsf	status, 5	;RP0=1, select bank1
  8589  0E15  1683               	bcf	status, 6	;RP1=0, select bank1
  8590  0E16  1303               	clrf	(MFRC522_AntiColl@serNumCheck)^080h
  8591  0E17  01C7               	line	725
  8592                           	
  8593                           l4580:	
  8594  0E18                     ;rfid.c: 723:  char unLen;;rfid.c: 725:  MFRC522_Wr(0x0D, 0x00);
  8595                           	clrf	(MFRC522_Wr@value)^080h
  8596  0E18  01A8               	movlw	low(0Dh)
  8597  0E19  300D               	fcall	_MFRC522_Wr
  8598  0E1A  120A  158A  2151  120A  158A  	line	727
  8599                           	
  8600                           l4582:	
  8601  0E1F                     ;rfid.c: 727:  serNum[0] = 0x93;
  8602                           	movlw	low(093h)
  8603  0E1F  3093               	bsf	status, 5	;RP0=1, select bank1
  8604  0E20  1683               	bcf	status, 6	;RP1=0, select bank1
  8605  0E21  1303               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8606  0E22  00C2               	movf	(MFRC522_AntiColl@serNum)^080h,w
  8607  0E23  0840               	movwf	fsr0
  8608  0E24  0084               	bsf	status,7
  8609  0E25  1783               	btfss	(MFRC522_AntiColl@serNum+1)^080h,0
  8610  0E26  1C41               	bcf	status,7
  8611  0E27  1383               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8612  0E28  0842               	movwf	indf
  8613  0E29  0080               	line	728
  8614                           	
  8615                           l4584:	
  8616  0E2A                     ;rfid.c: 728:  serNum[1] = 0x20;
  8617                           	movlw	low(020h)
  8618  0E2A  3020               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8619  0E2B  00C2               	movlw	low(01h)
  8620  0E2C  3001               	movwf	(??_MFRC522_AntiColl+1)^080h+0
  8621  0E2D  00C3               	movf	(??_MFRC522_AntiColl+1)^080h+0,w
  8622  0E2E  0843               	addwf	(MFRC522_AntiColl@serNum)^080h,w
  8623  0E2F  0740               	movwf	(??_MFRC522_AntiColl+3)^080h+0
  8624  0E30  00C5               	movf	(MFRC522_AntiColl@serNum+1)^080h,w
  8625  0E31  0841               	movwf	(??_MFRC522_AntiColl+2)^080h+0
  8626  0E32  00C4               	skipnc
  8627  0E33  1803               	incf	(??_MFRC522_AntiColl+2)^080h+0,f
  8628  0E34  0AC4               	btfsc	(??_MFRC522_AntiColl+1)^080h+0,7
  8629  0E35  1BC3               	decf	(??_MFRC522_AntiColl+2)^080h+0,f
  8630  0E36  03C4               	movf	(??_MFRC522_AntiColl+2)^080h+0,w
  8631  0E37  0844               	movwf	((??_MFRC522_AntiColl+3)^080h+0)+1
  8632  0E38  00C6               	movf	0+(??_MFRC522_AntiColl+3)^080h+0,w
  8633  0E39  0845               	movwf	fsr0
  8634  0E3A  0084               	bsf	status,7
  8635  0E3B  1783               	btfss	1+(??_MFRC522_AntiColl+3)^080h+0,0
  8636  0E3C  1C46               	bcf	status,7
  8637  0E3D  1383               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8638  0E3E  0842               	movwf	indf
  8639  0E3F  0080               	line	729
  8640                           	
  8641                           l4586:	
  8642  0E40                     ;rfid.c: 729:  MFRC522_Clear_Bit(0x08, 0x08);
  8643                           	movlw	low(08h)
  8644  0E40  3008               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8645  0E41  00C2               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8646  0E42  0842               	movwf	(MFRC522_Clear_Bit@mask)^080h
  8647  0E43  00AB               	movlw	low(08h)
  8648  0E44  3008               	fcall	_MFRC522_Clear_Bit
  8649  0E45  120A  158A  2104  120A  158A  	line	730
  8650                           	
  8651                           l4588:	
  8652  0E4A                     ;rfid.c: 730:  _status = MFRC522_ToCard(0x0C, serNum, 2, serNum, &unLen);
  8653                           	bsf	status, 5	;RP0=1, select bank1
  8654  0E4A  1683               	bcf	status, 6	;RP1=0, select bank1
  8655  0E4B  1303               		movf	(MFRC522_AntiColl@serNum)^080h,w
  8656  0E4C  0840               	movwf	(MFRC522_ToCard@sendData)^080h
  8657  0E4D  00AF               movf	(MFRC522_AntiColl@serNum+1)^080h,w
  8658  0E4E  0841               movwf	(MFRC522_ToCard@sendData+1)^080h
  8659  0E4F  00B0               
  8660                           	movlw	low(02h)
  8661  0E50  3002               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8662  0E51  00C2               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8663  0E52  0842               	movwf	(MFRC522_ToCard@sendLen)^080h
  8664  0E53  00B1               		movf	(MFRC522_AntiColl@serNum)^080h,w
  8665  0E54  0840               	movwf	(MFRC522_ToCard@backData)^080h
  8666  0E55  00B2               movf	(MFRC522_AntiColl@serNum+1)^080h,w
  8667  0E56  0841               movwf	(MFRC522_ToCard@backData+1)^080h
  8668  0E57  00B3               
  8669                           	movlw	(low(MFRC522_AntiColl@unLen|((0x0)<<8)))&0ffh
  8670  0E58  30C8               	movwf	(??_MFRC522_AntiColl+1)^080h+0
  8671  0E59  00C3               	movf	(??_MFRC522_AntiColl+1)^080h+0,w
  8672  0E5A  0843               	movwf	(MFRC522_ToCard@backLen)^080h
  8673  0E5B  00B4               	movlw	low(0Ch)
  8674  0E5C  300C               	fcall	_MFRC522_ToCard
  8675  0E5D  120A  118A  2555  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  8676  0E62  1683               	bcf	status, 6	;RP1=0, select bank1
  8677  0E63  1303               	movwf	(??_MFRC522_AntiColl+2)^080h+0
  8678  0E64  00C4               	movf	(??_MFRC522_AntiColl+2)^080h+0,w
  8679  0E65  0844               	movwf	(MFRC522_AntiColl@_status)^080h
  8680  0E66  00C9               	line	732
  8681                           	
  8682                           l4590:	
  8683  0E67                     ;rfid.c: 732:  if (_status == 0)
  8684                           	movf	((MFRC522_AntiColl@_status)^080h),w
  8685  0E67  0849               	btfss	status,2
  8686  0E68  1D03               	goto	u4051
  8687  0E69  2E6B               	goto	u4050
  8688  0E6A  2E6C               u4051:
  8689  0E6B                     	goto	l391
  8690  0E6B  2EAD               u4050:
  8691  0E6C                     	line	734
  8692                           	
  8693                           l4592:	
  8694  0E6C                     ;rfid.c: 733:  {;rfid.c: 734:   for (i = 0; i < 4; i++) serNumCheck ^= serNum[i];
  8695                           	clrf	(MFRC522_AntiColl@i)^080h
  8696  0E6C  01CA               	
  8697                           l4594:	
  8698  0E6D                     	movlw	low(04h)
  8699  0E6D  3004               	subwf	(MFRC522_AntiColl@i)^080h,w
  8700  0E6E  024A               	skipc
  8701  0E6F  1C03               	goto	u4061
  8702  0E70  2E72               	goto	u4060
  8703  0E71  2E73               u4061:
  8704  0E72                     	goto	l4598
  8705  0E72  2E75               u4060:
  8706  0E73                     	goto	l4604
  8707  0E73  2E90               	
  8708                           l4596:	
  8709  0E74                     	goto	l4604
  8710  0E74  2E90               	
  8711                           l392:	
  8712  0E75                     	
  8713                           l4598:	
  8714  0E75                     	movf	(MFRC522_AntiColl@i)^080h,w
  8715  0E75  084A               	addwf	(MFRC522_AntiColl@serNum)^080h,w
  8716  0E76  0740               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8717  0E77  00C2               	movf	(MFRC522_AntiColl@serNum+1)^080h,w
  8718  0E78  0841               	skipnc
  8719  0E79  1803               	addlw	1
  8720  0E7A  3E01               	movwf	1+((??_MFRC522_AntiColl+0)^080h+0)
  8721  0E7B  00C3               	movf	0+(??_MFRC522_AntiColl+0)^080h+0,w
  8722  0E7C  0842               	movwf	fsr0
  8723  0E7D  0084               	bsf	status,7
  8724  0E7E  1783               	btfss	1+(??_MFRC522_AntiColl+0)^080h+0,0
  8725  0E7F  1C43               	bcf	status,7
  8726  0E80  1383               	movf	indf,w
  8727  0E81  0800               	movwf	(??_MFRC522_AntiColl+2)^080h+0
  8728  0E82  00C4               	movf	(??_MFRC522_AntiColl+2)^080h+0,w
  8729  0E83  0844               	xorwf	(MFRC522_AntiColl@serNumCheck)^080h,f
  8730  0E84  06C7               	
  8731                           l4600:	
  8732  0E85                     	movlw	low(01h)
  8733  0E85  3001               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8734  0E86  00C2               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8735  0E87  0842               	addwf	(MFRC522_AntiColl@i)^080h,f
  8736  0E88  07CA               	
  8737                           l4602:	
  8738  0E89                     	movlw	low(04h)
  8739  0E89  3004               	subwf	(MFRC522_AntiColl@i)^080h,w
  8740  0E8A  024A               	skipc
  8741  0E8B  1C03               	goto	u4071
  8742  0E8C  2E8E               	goto	u4070
  8743  0E8D  2E8F               u4071:
  8744  0E8E                     	goto	l4598
  8745  0E8E  2E75               u4070:
  8746  0E8F                     	goto	l4604
  8747  0E8F  2E90               	
  8748                           l393:	
  8749  0E90                     	line	735
  8750                           	
  8751                           l4604:	
  8752  0E90                     ;rfid.c: 735:   if (serNumCheck != serNum[4])_status = 2;
  8753                           	movlw	low(04h)
  8754  0E90  3004               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8755  0E91  00C2               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8756  0E92  0842               	addwf	(MFRC522_AntiColl@serNum)^080h,w
  8757  0E93  0740               	movwf	(??_MFRC522_AntiColl+2)^080h+0
  8758  0E94  00C4               	movf	(MFRC522_AntiColl@serNum+1)^080h,w
  8759  0E95  0841               	movwf	(??_MFRC522_AntiColl+1)^080h+0
  8760  0E96  00C3               	skipnc
  8761  0E97  1803               	incf	(??_MFRC522_AntiColl+1)^080h+0,f
  8762  0E98  0AC3               	btfsc	(??_MFRC522_AntiColl+0)^080h+0,7
  8763  0E99  1BC2               	decf	(??_MFRC522_AntiColl+1)^080h+0,f
  8764  0E9A  03C3               	movf	(??_MFRC522_AntiColl+1)^080h+0,w
  8765  0E9B  0843               	movwf	((??_MFRC522_AntiColl+2)^080h+0)+1
  8766  0E9C  00C5               	movf	0+(??_MFRC522_AntiColl+2)^080h+0,w
  8767  0E9D  0844               	movwf	fsr0
  8768  0E9E  0084               	bsf	status,7
  8769  0E9F  1783               	btfss	1+(??_MFRC522_AntiColl+2)^080h+0,0
  8770  0EA0  1C45               	bcf	status,7
  8771  0EA1  1383               	movf	indf,w
  8772  0EA2  0800               	xorwf	(MFRC522_AntiColl@serNumCheck)^080h,w
  8773  0EA3  0647               	skipnz
  8774  0EA4  1903               	goto	u4081
  8775  0EA5  2EA7               	goto	u4080
  8776  0EA6  2EA8               u4081:
  8777  0EA7                     	goto	l391
  8778  0EA7  2EAD               u4080:
  8779  0EA8                     	
  8780                           l4606:	
  8781  0EA8                     	movlw	low(02h)
  8782  0EA8  3002               	movwf	(??_MFRC522_AntiColl+0)^080h+0
  8783  0EA9  00C2               	movf	(??_MFRC522_AntiColl+0)^080h+0,w
  8784  0EAA  0842               	movwf	(MFRC522_AntiColl@_status)^080h
  8785  0EAB  00C9               	goto	l391
  8786  0EAC  2EAD               	
  8787                           l394:	
  8788  0EAD                     	line	736
  8789                           ;rfid.c: 736:  }
  8790                           	
  8791                           l391:	
  8792  0EAD                     	line	738
  8793                           ;rfid.c: 738:  return (_status);
  8794                           	movf	(MFRC522_AntiColl@_status)^080h,w
  8795  0EAD  0849               	goto	l395
  8796  0EAE  2EAF               	
  8797                           l4608:	
  8798  0EAF                     	line	739
  8799                           	
  8800                           l395:	
  8801  0EAF                     	return
  8802  0EAF  0008               	opt stack 0
  8803                           GLOBAL	__end_of_MFRC522_AntiColl
  8804                           	__end_of_MFRC522_AntiColl:
  8805  0EB0                     	signat	_MFRC522_AntiColl,4217
  8806                           	global	_MFRC522_ToCard
  8807                           
  8808 ;; *************** function _MFRC522_ToCard *****************
  8809 ;; Defined at:
  8810 ;;		line 486 in file "rfid.c"
  8811 ;; Parameters:    Size  Location     Type
  8812 ;;  command         1    wreg     unsigned char 
  8813 ;;  sendData        2   15[BANK1 ] PTR unsigned char 
  8814 ;;		 -> UID(7), main@UID(7), 
  8815 ;;  sendLen         1   17[BANK1 ] unsigned char 
  8816 ;;  backData        2   18[BANK1 ] PTR unsigned char 
  8817 ;;		 -> UID(7), main@UID(7), 
  8818 ;;  backLen         1   20[BANK1 ] PTR unsigned char 
  8819 ;;		 -> MFRC522_AntiColl@unLen(1), 
  8820 ;; Auto vars:     Size  Location     Type
  8821 ;;  command         1   28[BANK1 ] unsigned char 
  8822 ;;  i               2   29[BANK1 ] unsigned int 
  8823 ;;  n               1   31[BANK1 ] unsigned char 
  8824 ;;  lastBits        1   27[BANK1 ] unsigned char 
  8825 ;;  _status         1   26[BANK1 ] unsigned char 
  8826 ;;  waitIRq         1   25[BANK1 ] unsigned char 
  8827 ;;  irqEn           1   24[BANK1 ] unsigned char 
  8828 ;; Return value:  Size  Location     Type
  8829 ;;                  1    wreg      unsigned char 
  8830 ;; Registers used:
  8831 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
  8832 ;; Tracked objects:
  8833 ;;		On entry : 0/0
  8834 ;;		On exit  : 0/0
  8835 ;;		Unchanged: 0/0
  8836 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  8837 ;;      Params:         0       0       6       0       0
  8838 ;;      Locals:         0       0       8       0       0
  8839 ;;      Temps:          0       0       3       0       0
  8840 ;;      Totals:         0       0      17       0       0
  8841 ;;Total ram usage:       17 bytes
  8842 ;; Hardware stack levels used:    1
  8843 ;; Hardware stack levels required when called:    6
  8844 ;; This function calls:
  8845 ;;		_MFRC522_Clear_Bit
  8846 ;;		_MFRC522_Rd
  8847 ;;		_MFRC522_Set_Bit
  8848 ;;		_MFRC522_Wr
  8849 ;; This function is called by:
  8850 ;;		_MFRC522_AntiColl
  8851 ;; This function uses a non-reentrant model
  8852 ;;
  8853                           psect	text25,local,class=CODE,delta=2,merge=1,group=0
  8854                           	line	486
  8855                           global __ptext25
  8856                           __ptext25:	;psect for function _MFRC522_ToCard
  8857  0555                     psect	text25
  8858                           	file	"rfid.c"
  8859                           	line	486
  8860                           	global	__size_of_MFRC522_ToCard
  8861                           	__size_of_MFRC522_ToCard	equ	__end_of_MFRC522_ToCard-_MFRC522_ToCard
  8862  016F                     	
  8863                           _MFRC522_ToCard:	
  8864  0555                     ;incstack = 0
  8865                           	opt	stack 0
  8866                           ; Regs used in _MFRC522_ToCard: [wreg-fsr0h+status,2+status,0+pclath+cstack]
  8867                           ;MFRC522_ToCard@command stored from wreg
  8868                           	bsf	status, 5	;RP0=1, select bank1
  8869  0555  1683               	bcf	status, 6	;RP1=0, select bank1
  8870  0556  1303               	movwf	(MFRC522_ToCard@command)^080h
  8871  0557  00BC               	line	488
  8872                           	
  8873                           l4476:	
  8874  0558                     ;rfid.c: 486: char MFRC522_ToCard(char command, char *sendData, char sendLen, char *back
                                 Data, char *backLen);rfid.c: 487: {;rfid.c: 488:  char _status = 2;
  8875                           	movlw	low(02h)
  8876  0558  3002               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8877  0559  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  8878  055A  0835               	movwf	(MFRC522_ToCard@_status)^080h
  8879  055B  00BA               	line	489
  8880                           	
  8881                           l4478:	
  8882  055C                     ;rfid.c: 489:  char irqEn = 0x00;
  8883                           	clrf	(MFRC522_ToCard@irqEn)^080h
  8884  055C  01B8               	line	490
  8885                           	
  8886                           l4480:	
  8887  055D                     ;rfid.c: 490:  char waitIRq = 0x00;
  8888                           	clrf	(MFRC522_ToCard@waitIRq)^080h
  8889  055D  01B9               	line	495
  8890                           ;rfid.c: 491:  char lastBits;;rfid.c: 492:  char n;;rfid.c: 493:  unsigned int i;;rfid.c
                                 : 495:  switch (command)
  8891                           	goto	l4488
  8892  055E  2D73               	line	497
  8893                           ;rfid.c: 496:  {;rfid.c: 497:   case 0x0E:
  8894                           	
  8895                           l358:	
  8896  055F                     	line	499
  8897                           	
  8898                           l4482:	
  8899  055F                     ;rfid.c: 498:   {;rfid.c: 499:    irqEn = 0x12;
  8900                           	movlw	low(012h)
  8901  055F  3012               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8902  0560  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  8903  0561  0835               	movwf	(MFRC522_ToCard@irqEn)^080h
  8904  0562  00B8               	line	500
  8905                           ;rfid.c: 500:    waitIRq = 0x10;
  8906                           	movlw	low(010h)
  8907  0563  3010               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8908  0564  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  8909  0565  0835               	movwf	(MFRC522_ToCard@waitIRq)^080h
  8910  0566  00B9               	line	501
  8911                           ;rfid.c: 501:    break;
  8912                           	goto	l4490
  8913  0567  2D83               	line	503
  8914                           ;rfid.c: 502:   };rfid.c: 503:   case 0x0C:
  8915                           	
  8916                           l360:	
  8917  0568                     	line	505
  8918                           	
  8919                           l4484:	
  8920  0568                     ;rfid.c: 504:   {;rfid.c: 505:    irqEn = 0x77;
  8921                           	movlw	low(077h)
  8922  0568  3077               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8923  0569  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  8924  056A  0835               	movwf	(MFRC522_ToCard@irqEn)^080h
  8925  056B  00B8               	line	506
  8926                           ;rfid.c: 506:    waitIRq = 0x30;
  8927                           	movlw	low(030h)
  8928  056C  3030               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8929  056D  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  8930  056E  0835               	movwf	(MFRC522_ToCard@waitIRq)^080h
  8931  056F  00B9               	line	507
  8932                           ;rfid.c: 507:    break;
  8933                           	goto	l4490
  8934  0570  2D83               	line	509
  8935                           ;rfid.c: 508:   };rfid.c: 509:   default:
  8936                           	
  8937                           l361:	
  8938  0571                     	line	510
  8939                           ;rfid.c: 510:    break;
  8940                           	goto	l4490
  8941  0571  2D83               	line	511
  8942                           	
  8943                           l4486:	
  8944  0572                     ;rfid.c: 511:  }
  8945                           	goto	l4490
  8946  0572  2D83               	
  8947                           l357:	
  8948  0573                     	
  8949                           l4488:	
  8950  0573                     	movf	(MFRC522_ToCard@command)^080h,w
  8951  0573  083C               	movwf	(??_MFRC522_ToCard+0)^080h+0
  8952  0574  00B5               	clrf	(??_MFRC522_ToCard+0)^080h+0+1
  8953  0575  01B6               	; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-s
                                 witches
  8954                           ; Switch size 1, requested type "space"
  8955                           ; Number of cases is 1, Range of values is 0 to 0
  8956                           ; switch strategies available:
  8957                           ; Name         Instructions Cycles
  8958                           ; simple_byte            4     3 (average)
  8959                           ; direct_byte           11     8 (fixed)
  8960                           ; jumptable            260     6 (fixed)
  8961                           ;	Chosen strategy is simple_byte
  8962                           
  8963                           	movf 1+(??_MFRC522_ToCard+0)^080h+0,w
  8964  0576  0836               	opt asmopt_push
  8965                           	opt asmopt_off
  8966                           	xorlw	0^0	; case 0
  8967  0577  3A00               	skipnz
  8968  0578  1903               	goto	l4928
  8969  0579  2D7B               	goto	l4490
  8970  057A  2D83               	opt asmopt_pop
  8971                           	
  8972                           l4928:	
  8973  057B                     ; Switch size 1, requested type "space"
  8974                           ; Number of cases is 2, Range of values is 12 to 14
  8975                           ; switch strategies available:
  8976                           ; Name         Instructions Cycles
  8977                           ; simple_byte            7     4 (average)
  8978                           ; direct_byte           20    11 (fixed)
  8979                           ; jumptable            263     9 (fixed)
  8980                           ;	Chosen strategy is simple_byte
  8981                           
  8982                           	movf 0+(??_MFRC522_ToCard+0)^080h+0,w
  8983  057B  0835               	opt asmopt_push
  8984                           	opt asmopt_off
  8985                           	xorlw	12^0	; case 12
  8986  057C  3A0C               	skipnz
  8987  057D  1903               	goto	l4484
  8988  057E  2D68               	xorlw	14^12	; case 14
  8989  057F  3A02               	skipnz
  8990  0580  1903               	goto	l4482
  8991  0581  2D5F               	goto	l4490
  8992  0582  2D83               	opt asmopt_pop
  8993                           
  8994                           	
  8995                           l359:	
  8996  0583                     	line	514
  8997                           	
  8998                           l4490:	
  8999  0583                     ;rfid.c: 514:  for (i = 0; i < sendLen; i++) MFRC522_Wr(0x09, sendData[i]);
  9000                           	clrf	(MFRC522_ToCard@i)^080h
  9001  0583  01BD               	clrf	(MFRC522_ToCard@i+1)^080h
  9002  0584  01BE               	goto	l4496
  9003  0585  2DA5               	
  9004                           l363:	
  9005  0586                     	
  9006                           l4492:	
  9007  0586                     	movf	(MFRC522_ToCard@i)^080h,w
  9008  0586  083D               	addwf	(MFRC522_ToCard@sendData)^080h,w
  9009  0587  072F               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9010  0588  00B5               	movf	(MFRC522_ToCard@sendData+1)^080h,w
  9011  0589  0830               	skipnc
  9012  058A  1803               	addlw	1
  9013  058B  3E01               	movwf	1+((??_MFRC522_ToCard+0)^080h+0)
  9014  058C  00B6               	movf	0+(??_MFRC522_ToCard+0)^080h+0,w
  9015  058D  0835               	movwf	fsr0
  9016  058E  0084               	bsf	status,7
  9017  058F  1783               	btfss	1+(??_MFRC522_ToCard+0)^080h+0,0
  9018  0590  1C36               	bcf	status,7
  9019  0591  1383               	movf	indf,w
  9020  0592  0800               	movwf	(??_MFRC522_ToCard+2)^080h+0
  9021  0593  00B7               	movf	(??_MFRC522_ToCard+2)^080h+0,w
  9022  0594  0837               	movwf	(MFRC522_Wr@value)^080h
  9023  0595  00A8               	movlw	low(09h)
  9024  0596  3009               	fcall	_MFRC522_Wr
  9025  0597  120A  158A  2151  120A  118A  	
  9026                           l4494:	
  9027  059C                     	movlw	01h
  9028  059C  3001               	bsf	status, 5	;RP0=1, select bank1
  9029  059D  1683               	bcf	status, 6	;RP1=0, select bank1
  9030  059E  1303               	addwf	(MFRC522_ToCard@i)^080h,f
  9031  059F  07BD               	skipnc
  9032  05A0  1803               	incf	(MFRC522_ToCard@i+1)^080h,f
  9033  05A1  0ABE               	movlw	0
  9034  05A2  3000               	addwf	(MFRC522_ToCard@i+1)^080h,f
  9035  05A3  07BE               	goto	l4496
  9036  05A4  2DA5               	
  9037                           l362:	
  9038  05A5                     	
  9039                           l4496:	
  9040  05A5                     	movf	(MFRC522_ToCard@sendLen)^080h,w
  9041  05A5  0831               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9042  05A6  00B5               	clrf	(??_MFRC522_ToCard+0)^080h+0+1
  9043  05A7  01B6               	movf	1+(??_MFRC522_ToCard+0)^080h+0,w
  9044  05A8  0836               	subwf	(MFRC522_ToCard@i+1)^080h,w
  9045  05A9  023E               	skipz
  9046  05AA  1D03               	goto	u3885
  9047  05AB  2DAE               	movf	0+(??_MFRC522_ToCard+0)^080h+0,w
  9048  05AC  0835               	subwf	(MFRC522_ToCard@i)^080h,w
  9049  05AD  023D               u3885:
  9050  05AE                     	skipc
  9051  05AE  1C03               	goto	u3881
  9052  05AF  2DB1               	goto	u3880
  9053  05B0  2DB2               u3881:
  9054  05B1                     	goto	l4492
  9055  05B1  2D86               u3880:
  9056  05B2                     	goto	l4498
  9057  05B2  2DB3               	
  9058                           l364:	
  9059  05B3                     	line	517
  9060                           	
  9061                           l4498:	
  9062  05B3                     ;rfid.c: 517:  MFRC522_Wr(0x01, command);
  9063                           	movf	(MFRC522_ToCard@command)^080h,w
  9064  05B3  083C               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9065  05B4  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9066  05B5  0835               	movwf	(MFRC522_Wr@value)^080h
  9067  05B6  00A8               	movlw	low(01h)
  9068  05B7  3001               	fcall	_MFRC522_Wr
  9069  05B8  120A  158A  2151  120A  118A  	line	520
  9070                           	
  9071                           l4500:	
  9072  05BD                     ;rfid.c: 520:  if (command == 0x0C) MFRC522_Set_Bit(0x0D, 0x80);
  9073                           		movlw	12
  9074  05BD  300C               	bsf	status, 5	;RP0=1, select bank1
  9075  05BE  1683               	bcf	status, 6	;RP1=0, select bank1
  9076  05BF  1303               	xorwf	((MFRC522_ToCard@command)^080h),w
  9077  05C0  063C               	btfss	status,2
  9078  05C1  1D03               	goto	u3891
  9079  05C2  2DC4               	goto	u3890
  9080  05C3  2DC5               u3891:
  9081  05C4                     	goto	l4504
  9082  05C4  2DD0               u3890:
  9083  05C5                     	
  9084                           l4502:	
  9085  05C5                     	movlw	low(080h)
  9086  05C5  3080               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9087  05C6  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9088  05C7  0835               	movwf	(MFRC522_Set_Bit@mask)^080h
  9089  05C8  00AB               	movlw	low(0Dh)
  9090  05C9  300D               	fcall	_MFRC522_Set_Bit
  9091  05CA  120A  158A  20EE  120A  118A  	goto	l4504
  9092  05CF  2DD0               	
  9093                           l365:	
  9094  05D0                     	line	524
  9095                           	
  9096                           l4504:	
  9097  05D0                     ;rfid.c: 524:  i = 0xFFFF;
  9098                           	movlw	0FFh
  9099  05D0  30FF               	bsf	status, 5	;RP0=1, select bank1
  9100  05D1  1683               	bcf	status, 6	;RP1=0, select bank1
  9101  05D2  1303               	movwf	(MFRC522_ToCard@i)^080h
  9102  05D3  00BD               	movlw	0FFh
  9103  05D4  30FF               	movwf	((MFRC522_ToCard@i)^080h)+1
  9104  05D5  00BE               	goto	l4506
  9105  05D6  2DD7               	line	525
  9106                           ;rfid.c: 525:  do
  9107                           	
  9108                           l366:	
  9109  05D7                     	line	529
  9110                           	
  9111                           l4506:	
  9112  05D7                     ;rfid.c: 526:  {;rfid.c: 529:   n = MFRC522_Rd(0x04);
  9113                           	movlw	low(04h)
  9114  05D7  3004               	fcall	_MFRC522_Rd
  9115  05D8  120A  158A  21AB  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  9116  05DD  1683               	bcf	status, 6	;RP1=0, select bank1
  9117  05DE  1303               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9118  05DF  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9119  05E0  0835               	movwf	(MFRC522_ToCard@n)^080h
  9120  05E1  00BF               	line	530
  9121                           ;rfid.c: 530:   i--;
  9122                           	movlw	01h
  9123  05E2  3001               	subwf	(MFRC522_ToCard@i)^080h,f
  9124  05E3  02BD               	movlw	0
  9125  05E4  3000               	skipc
  9126  05E5  1C03               	decf	(MFRC522_ToCard@i+1)^080h,f
  9127  05E6  03BE               	subwf	(MFRC522_ToCard@i+1)^080h,f
  9128  05E7  02BE               	line	531
  9129                           	
  9130                           l4508:	
  9131  05E8                     ;rfid.c: 531:  } while (i && !(n & 0x01) && !(n & waitIRq));
  9132                           	movf	((MFRC522_ToCard@i)^080h),w
  9133  05E8  083D               iorwf	((MFRC522_ToCard@i+1)^080h),w
  9134  05E9  043E               	btfsc	status,2
  9135  05EA  1903               	goto	u3901
  9136  05EB  2DED               	goto	u3900
  9137  05EC  2DEE               u3901:
  9138  05ED                     	goto	l4514
  9139  05ED  2DFA               u3900:
  9140  05EE                     	
  9141                           l4510:	
  9142  05EE                     	btfsc	(MFRC522_ToCard@n)^080h,(0)&7
  9143  05EE  183F               	goto	u3911
  9144  05EF  2DF1               	goto	u3910
  9145  05F0  2DF2               u3911:
  9146  05F1                     	goto	l4514
  9147  05F1  2DFA               u3910:
  9148  05F2                     	
  9149                           l4512:	
  9150  05F2                     	movf	(MFRC522_ToCard@n)^080h,w
  9151  05F2  083F               	andwf	(MFRC522_ToCard@waitIRq)^080h,w
  9152  05F3  0539               	btfsc	status,2
  9153  05F4  1903               	goto	u3921
  9154  05F5  2DF7               	goto	u3920
  9155  05F6  2DF8               u3921:
  9156  05F7                     	goto	l4506
  9157  05F7  2DD7               u3920:
  9158  05F8                     	goto	l4514
  9159  05F8  2DFA               	
  9160                           l368:	
  9161  05F9                     	goto	l4514
  9162  05F9  2DFA               	
  9163                           l369:	
  9164  05FA                     	line	533
  9165                           	
  9166                           l4514:	
  9167  05FA                     ;rfid.c: 533:  MFRC522_Clear_Bit(0x0D, 0x80);
  9168                           	movlw	low(080h)
  9169  05FA  3080               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9170  05FB  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9171  05FC  0835               	movwf	(MFRC522_Clear_Bit@mask)^080h
  9172  05FD  00AB               	movlw	low(0Dh)
  9173  05FE  300D               	fcall	_MFRC522_Clear_Bit
  9174  05FF  120A  158A  2104  120A  118A  	line	535
  9175                           	
  9176                           l4516:	
  9177  0604                     ;rfid.c: 535:  if (i != 0)
  9178                           	bsf	status, 5	;RP0=1, select bank1
  9179  0604  1683               	bcf	status, 6	;RP1=0, select bank1
  9180  0605  1303               	movf	((MFRC522_ToCard@i)^080h),w
  9181  0606  083D               iorwf	((MFRC522_ToCard@i+1)^080h),w
  9182  0607  043E               	btfsc	status,2
  9183  0608  1903               	goto	u3931
  9184  0609  2E0B               	goto	u3930
  9185  060A  2E0C               u3931:
  9186  060B                     	goto	l370
  9187  060B  2EC1               u3930:
  9188  060C                     	line	537
  9189                           	
  9190                           l4518:	
  9191  060C                     ;rfid.c: 536:  {;rfid.c: 537:   if (!(MFRC522_Rd(0x06) & 0x1B))
  9192                           	movlw	low(06h)
  9193  060C  3006               	fcall	_MFRC522_Rd
  9194  060D  120A  158A  21AB  120A  118A  	andlw	01Bh
  9195  0612  391B               	btfss	status,2
  9196  0613  1D03               	goto	u3941
  9197  0614  2E16               	goto	u3940
  9198  0615  2E17               u3941:
  9199  0616                     	goto	l4554
  9200  0616  2EBA               u3940:
  9201  0617                     	line	539
  9202                           	
  9203                           l4520:	
  9204  0617                     ;rfid.c: 538:   {;rfid.c: 539:    _status = 0;
  9205                           	bsf	status, 5	;RP0=1, select bank1
  9206  0617  1683               	bcf	status, 6	;RP1=0, select bank1
  9207  0618  1303               	clrf	(MFRC522_ToCard@_status)^080h
  9208  0619  01BA               	line	540
  9209                           	
  9210                           l4522:	
  9211  061A                     ;rfid.c: 540:    if (n & irqEn & 0x01) _status = 1;
  9212                           	movf	(MFRC522_ToCard@irqEn)^080h,w
  9213  061A  0838               	andwf	(MFRC522_ToCard@n)^080h,w
  9214  061B  053F               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9215  061C  00B5               	btfss	0+(??_MFRC522_ToCard+0)^080h+0,(0)&7
  9216  061D  1C35               	goto	u3951
  9217  061E  2E20               	goto	u3950
  9218  061F  2E21               u3951:
  9219  0620                     	goto	l4526
  9220  0620  2E24               u3950:
  9221  0621                     	
  9222                           l4524:	
  9223  0621                     	clrf	(MFRC522_ToCard@_status)^080h
  9224  0621  01BA               	incf	(MFRC522_ToCard@_status)^080h,f
  9225  0622  0ABA               	goto	l4526
  9226  0623  2E24               	
  9227                           l372:	
  9228  0624                     	line	542
  9229                           	
  9230                           l4526:	
  9231  0624                     ;rfid.c: 542:    if (command == 0x0C)
  9232                           		movlw	12
  9233  0624  300C               	xorwf	((MFRC522_ToCard@command)^080h),w
  9234  0625  063C               	btfss	status,2
  9235  0626  1D03               	goto	u3961
  9236  0627  2E29               	goto	u3960
  9237  0628  2E2A               u3961:
  9238  0629                     	goto	l370
  9239  0629  2EC1               u3960:
  9240  062A                     	line	544
  9241                           	
  9242                           l4528:	
  9243  062A                     ;rfid.c: 543:    {;rfid.c: 544:     n = MFRC522_Rd(0x0A);
  9244                           	movlw	low(0Ah)
  9245  062A  300A               	fcall	_MFRC522_Rd
  9246  062B  120A  158A  21AB  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  9247  0630  1683               	bcf	status, 6	;RP1=0, select bank1
  9248  0631  1303               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9249  0632  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9250  0633  0835               	movwf	(MFRC522_ToCard@n)^080h
  9251  0634  00BF               	line	545
  9252                           ;rfid.c: 545:     lastBits = MFRC522_Rd(0x0C) & 0x07;
  9253                           	movlw	low(0Ch)
  9254  0635  300C               	fcall	_MFRC522_Rd
  9255  0636  120A  158A  21AB  120A  118A  	andlw	07h
  9256  063B  3907               	bsf	status, 5	;RP0=1, select bank1
  9257  063C  1683               	bcf	status, 6	;RP1=0, select bank1
  9258  063D  1303               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9259  063E  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9260  063F  0835               	movwf	(MFRC522_ToCard@lastBits)^080h
  9261  0640  00BB               	line	547
  9262                           	
  9263                           l4530:	
  9264  0641                     ;rfid.c: 547:     if (lastBits) *backLen = (n - 1) * 8 + lastBits;
  9265                           	movf	((MFRC522_ToCard@lastBits)^080h),w
  9266  0641  083B               	btfsc	status,2
  9267  0642  1903               	goto	u3971
  9268  0643  2E45               	goto	u3970
  9269  0644  2E46               u3971:
  9270  0645                     	goto	l4534
  9271  0645  2E58               u3970:
  9272  0646                     	
  9273                           l4532:	
  9274  0646                     	movf	(MFRC522_ToCard@n)^080h,w
  9275  0646  083F               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9276  0647  00B5               	movlw	03h
  9277  0648  3003               u3985:
  9278  0649                     	clrc
  9279  0649  1003               	rlf	(??_MFRC522_ToCard+0)^080h+0,f
  9280  064A  0DB5               	addlw	-1
  9281  064B  3EFF               	skipz
  9282  064C  1D03               	goto	u3985
  9283  064D  2E49               	movf	(MFRC522_ToCard@lastBits)^080h,w
  9284  064E  083B               	addwf	0+(??_MFRC522_ToCard+0)^080h+0,w
  9285  064F  0735               	addlw	0F8h
  9286  0650  3EF8               	movwf	(??_MFRC522_ToCard+1)^080h+0
  9287  0651  00B6               	movf	(MFRC522_ToCard@backLen)^080h,w
  9288  0652  0834               	movwf	fsr0
  9289  0653  0084               	movf	(??_MFRC522_ToCard+1)^080h+0,w
  9290  0654  0836               	bcf	status, 7	;select IRP bank0
  9291  0655  1383               	movwf	indf
  9292  0656  0080               	goto	l4536
  9293  0657  2E69               	line	548
  9294                           ;rfid.c: 548:     else *backLen = n * 8;
  9295                           	
  9296                           l374:	
  9297  0658                     	
  9298                           l4534:	
  9299  0658                     	movf	(MFRC522_ToCard@n)^080h,w
  9300  0658  083F               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9301  0659  00B5               	movlw	(03h)-1
  9302  065A  3002               u3995:
  9303  065B                     	clrc
  9304  065B  1003               	rlf	(??_MFRC522_ToCard+0)^080h+0,f
  9305  065C  0DB5               	addlw	-1
  9306  065D  3EFF               	skipz
  9307  065E  1D03               	goto	u3995
  9308  065F  2E5B               	clrc
  9309  0660  1003               	rlf	(??_MFRC522_ToCard+0)^080h+0,w
  9310  0661  0D35               	movwf	(??_MFRC522_ToCard+1)^080h+0
  9311  0662  00B6               	movf	(MFRC522_ToCard@backLen)^080h,w
  9312  0663  0834               	movwf	fsr0
  9313  0664  0084               	movf	(??_MFRC522_ToCard+1)^080h+0,w
  9314  0665  0836               	bcf	status, 7	;select IRP bank0
  9315  0666  1383               	movwf	indf
  9316  0667  0080               	goto	l4536
  9317  0668  2E69               	
  9318                           l375:	
  9319  0669                     	line	550
  9320                           	
  9321                           l4536:	
  9322  0669                     ;rfid.c: 550:     if (n == 0) n = 1;
  9323                           	movf	((MFRC522_ToCard@n)^080h),w
  9324  0669  083F               	btfss	status,2
  9325  066A  1D03               	goto	u4001
  9326  066B  2E6D               	goto	u4000
  9327  066C  2E6E               u4001:
  9328  066D                     	goto	l4540
  9329  066D  2E71               u4000:
  9330  066E                     	
  9331                           l4538:	
  9332  066E                     	clrf	(MFRC522_ToCard@n)^080h
  9333  066E  01BF               	incf	(MFRC522_ToCard@n)^080h,f
  9334  066F  0ABF               	goto	l4540
  9335  0670  2E71               	
  9336                           l376:	
  9337  0671                     	line	551
  9338                           	
  9339                           l4540:	
  9340  0671                     ;rfid.c: 551:     if (n > 16) n = 16;
  9341                           	movlw	low(011h)
  9342  0671  3011               	subwf	(MFRC522_ToCard@n)^080h,w
  9343  0672  023F               	skipc
  9344  0673  1C03               	goto	u4011
  9345  0674  2E76               	goto	u4010
  9346  0675  2E77               u4011:
  9347  0676                     	goto	l4544
  9348  0676  2E7C               u4010:
  9349  0677                     	
  9350                           l4542:	
  9351  0677                     	movlw	low(010h)
  9352  0677  3010               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9353  0678  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9354  0679  0835               	movwf	(MFRC522_ToCard@n)^080h
  9355  067A  00BF               	goto	l4544
  9356  067B  2E7C               	
  9357                           l377:	
  9358  067C                     	line	554
  9359                           	
  9360                           l4544:	
  9361  067C                     ;rfid.c: 554:     for (i = 0; i < n; i++) backData[i] = MFRC522_Rd(0x09);
  9362                           	clrf	(MFRC522_ToCard@i)^080h
  9363  067C  01BD               	clrf	(MFRC522_ToCard@i+1)^080h
  9364  067D  01BE               	goto	l4550
  9365  067E  2E9D               	
  9366                           l379:	
  9367  067F                     	
  9368                           l4546:	
  9369  067F                     	movlw	low(09h)
  9370  067F  3009               	fcall	_MFRC522_Rd
  9371  0680  120A  158A  21AB  120A  118A  	bsf	status, 5	;RP0=1, select bank1
  9372  0685  1683               	bcf	status, 6	;RP1=0, select bank1
  9373  0686  1303               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9374  0687  00B5               	movf	(MFRC522_ToCard@i)^080h,w
  9375  0688  083D               	addwf	(MFRC522_ToCard@backData)^080h,w
  9376  0689  0732               	movwf	(??_MFRC522_ToCard+1)^080h+0
  9377  068A  00B6               	movf	(MFRC522_ToCard@backData+1)^080h,w
  9378  068B  0833               	skipnc
  9379  068C  1803               	addlw	1
  9380  068D  3E01               	movwf	1+((??_MFRC522_ToCard+1)^080h+0)
  9381  068E  00B7               	movf	0+(??_MFRC522_ToCard+1)^080h+0,w
  9382  068F  0836               	movwf	fsr0
  9383  0690  0084               	bsf	status,7
  9384  0691  1783               	btfss	1+(??_MFRC522_ToCard+1)^080h+0,0
  9385  0692  1C37               	bcf	status,7
  9386  0693  1383               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9387  0694  0835               	movwf	indf
  9388  0695  0080               	
  9389                           l4548:	
  9390  0696                     	movlw	01h
  9391  0696  3001               	addwf	(MFRC522_ToCard@i)^080h,f
  9392  0697  07BD               	skipnc
  9393  0698  1803               	incf	(MFRC522_ToCard@i+1)^080h,f
  9394  0699  0ABE               	movlw	0
  9395  069A  3000               	addwf	(MFRC522_ToCard@i+1)^080h,f
  9396  069B  07BE               	goto	l4550
  9397  069C  2E9D               	
  9398                           l378:	
  9399  069D                     	
  9400                           l4550:	
  9401  069D                     	movf	(MFRC522_ToCard@n)^080h,w
  9402  069D  083F               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9403  069E  00B5               	clrf	(??_MFRC522_ToCard+0)^080h+0+1
  9404  069F  01B6               	movf	1+(??_MFRC522_ToCard+0)^080h+0,w
  9405  06A0  0836               	subwf	(MFRC522_ToCard@i+1)^080h,w
  9406  06A1  023E               	skipz
  9407  06A2  1D03               	goto	u4025
  9408  06A3  2EA6               	movf	0+(??_MFRC522_ToCard+0)^080h+0,w
  9409  06A4  0835               	subwf	(MFRC522_ToCard@i)^080h,w
  9410  06A5  023D               u4025:
  9411  06A6                     	skipc
  9412  06A6  1C03               	goto	u4021
  9413  06A7  2EA9               	goto	u4020
  9414  06A8  2EAA               u4021:
  9415  06A9                     	goto	l4546
  9416  06A9  2E7F               u4020:
  9417  06AA                     	goto	l4552
  9418  06AA  2EAB               	
  9419                           l380:	
  9420  06AB                     	line	555
  9421                           	
  9422                           l4552:	
  9423  06AB                     ;rfid.c: 555:     backData[i] = 0;
  9424                           	movf	(MFRC522_ToCard@i)^080h,w
  9425  06AB  083D               	addwf	(MFRC522_ToCard@backData)^080h,w
  9426  06AC  0732               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9427  06AD  00B5               	movf	(MFRC522_ToCard@backData+1)^080h,w
  9428  06AE  0833               	skipnc
  9429  06AF  1803               	addlw	1
  9430  06B0  3E01               	movwf	1+((??_MFRC522_ToCard+0)^080h+0)
  9431  06B1  00B6               	movf	0+(??_MFRC522_ToCard+0)^080h+0,w
  9432  06B2  0835               	movwf	fsr0
  9433  06B3  0084               	bsf	status,7
  9434  06B4  1783               	btfss	1+(??_MFRC522_ToCard+0)^080h+0,0
  9435  06B5  1C36               	bcf	status,7
  9436  06B6  1383               	clrf	indf
  9437  06B7  0180               	goto	l370
  9438  06B8  2EC1               	line	556
  9439                           ;rfid.c: 556:    }
  9440                           	
  9441                           l373:	
  9442  06B9                     	line	557
  9443                           ;rfid.c: 557:   } else _status = 2;
  9444                           	goto	l370
  9445  06B9  2EC1               	
  9446                           l371:	
  9447  06BA                     	
  9448                           l4554:	
  9449  06BA                     	movlw	low(02h)
  9450  06BA  3002               	bsf	status, 5	;RP0=1, select bank1
  9451  06BB  1683               	bcf	status, 6	;RP1=0, select bank1
  9452  06BC  1303               	movwf	(??_MFRC522_ToCard+0)^080h+0
  9453  06BD  00B5               	movf	(??_MFRC522_ToCard+0)^080h+0,w
  9454  06BE  0835               	movwf	(MFRC522_ToCard@_status)^080h
  9455  06BF  00BA               	goto	l370
  9456  06C0  2EC1               	
  9457                           l381:	
  9458  06C1                     	line	558
  9459                           ;rfid.c: 558:  }
  9460                           	
  9461                           l370:	
  9462  06C1                     	line	563
  9463                           ;rfid.c: 563:  return (_status);
  9464                           	movf	(MFRC522_ToCard@_status)^080h,w
  9465  06C1  083A               	goto	l382
  9466  06C2  2EC3               	
  9467                           l4556:	
  9468  06C3                     	line	564
  9469                           	
  9470                           l382:	
  9471  06C3                     	return
  9472  06C3  0008               	opt stack 0
  9473                           GLOBAL	__end_of_MFRC522_ToCard
  9474                           	__end_of_MFRC522_ToCard:
  9475  06C4                     	signat	_MFRC522_ToCard,20601
  9476                           	global	_MFRC522_Set_Bit
  9477                           
  9478 ;; *************** function _MFRC522_Set_Bit *****************
  9479 ;; Defined at:
  9480 ;;		line 441 in file "rfid.c"
  9481 ;; Parameters:    Size  Location     Type
  9482 ;;  addr            1    wreg     unsigned char 
  9483 ;;  mask            1   11[BANK1 ] unsigned char 
  9484 ;; Auto vars:     Size  Location     Type
  9485 ;;  addr            1   13[BANK1 ] unsigned char 
  9486 ;; Return value:  Size  Location     Type
  9487 ;;                  1    wreg      void 
  9488 ;; Registers used:
  9489 ;;		wreg, status,2, status,0, pclath, cstack
  9490 ;; Tracked objects:
  9491 ;;		On entry : 0/0
  9492 ;;		On exit  : 0/0
  9493 ;;		Unchanged: 0/0
  9494 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9495 ;;      Params:         0       0       1       0       0
  9496 ;;      Locals:         0       0       1       0       0
  9497 ;;      Temps:          0       0       1       0       0
  9498 ;;      Totals:         0       0       3       0       0
  9499 ;;Total ram usage:        3 bytes
  9500 ;; Hardware stack levels used:    1
  9501 ;; Hardware stack levels required when called:    5
  9502 ;; This function calls:
  9503 ;;		_MFRC522_Rd
  9504 ;;		_MFRC522_Wr
  9505 ;; This function is called by:
  9506 ;;		_MFRC522_ToCard
  9507 ;; This function uses a non-reentrant model
  9508 ;;
  9509                           psect	text26,local,class=CODE,delta=2,merge=1,group=0
  9510                           	line	441
  9511                           global __ptext26
  9512                           __ptext26:	;psect for function _MFRC522_Set_Bit
  9513  08EE                     psect	text26
  9514                           	file	"rfid.c"
  9515                           	line	441
  9516                           	global	__size_of_MFRC522_Set_Bit
  9517                           	__size_of_MFRC522_Set_Bit	equ	__end_of_MFRC522_Set_Bit-_MFRC522_Set_Bit
  9518  0016                     	
  9519                           _MFRC522_Set_Bit:	
  9520  08EE                     ;incstack = 0
  9521                           	opt	stack 0
  9522                           ; Regs used in _MFRC522_Set_Bit: [wreg+status,2+status,0+pclath+cstack]
  9523                           ;MFRC522_Set_Bit@addr stored from wreg
  9524                           	bsf	status, 5	;RP0=1, select bank1
  9525  08EE  1683               	bcf	status, 6	;RP1=0, select bank1
  9526  08EF  1303               	movwf	(MFRC522_Set_Bit@addr)^080h
  9527  08F0  00AD               	line	443
  9528                           	
  9529                           l3416:	
  9530  08F1                     ;rfid.c: 441: static void MFRC522_Set_Bit(char addr, char mask);rfid.c: 442: {;rfid.c: 4
                                 43:  MFRC522_Wr(addr, MFRC522_Rd(addr) | mask);
  9531                           	movf	(MFRC522_Set_Bit@addr)^080h,w
  9532  08F1  082D               	fcall	_MFRC522_Rd
  9533  08F2  120A  158A  21AB  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  9534  08F7  1683               	bcf	status, 6	;RP1=0, select bank1
  9535  08F8  1303               	iorwf	(MFRC522_Set_Bit@mask)^080h,w
  9536  08F9  042B               	movwf	(??_MFRC522_Set_Bit+0)^080h+0
  9537  08FA  00AC               	movf	(??_MFRC522_Set_Bit+0)^080h+0,w
  9538  08FB  082C               	movwf	(MFRC522_Wr@value)^080h
  9539  08FC  00A8               	movf	(MFRC522_Set_Bit@addr)^080h,w
  9540  08FD  082D               	fcall	_MFRC522_Wr
  9541  08FE  120A  158A  2151  120A  158A  	line	444
  9542                           	
  9543                           l354:	
  9544  0903                     	return
  9545  0903  0008               	opt stack 0
  9546                           GLOBAL	__end_of_MFRC522_Set_Bit
  9547                           	__end_of_MFRC522_Set_Bit:
  9548  0904                     	signat	_MFRC522_Set_Bit,8313
  9549                           	global	_MFRC522_Clear_Bit
  9550                           
  9551 ;; *************** function _MFRC522_Clear_Bit *****************
  9552 ;; Defined at:
  9553 ;;		line 436 in file "rfid.c"
  9554 ;; Parameters:    Size  Location     Type
  9555 ;;  addr            1    wreg     unsigned char 
  9556 ;;  mask            1   11[BANK1 ] unsigned char 
  9557 ;; Auto vars:     Size  Location     Type
  9558 ;;  addr            1   14[BANK1 ] unsigned char 
  9559 ;; Return value:  Size  Location     Type
  9560 ;;                  1    wreg      void 
  9561 ;; Registers used:
  9562 ;;		wreg, status,2, status,0, pclath, cstack
  9563 ;; Tracked objects:
  9564 ;;		On entry : 0/0
  9565 ;;		On exit  : 0/0
  9566 ;;		Unchanged: 0/0
  9567 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9568 ;;      Params:         0       0       1       0       0
  9569 ;;      Locals:         0       0       1       0       0
  9570 ;;      Temps:          0       0       2       0       0
  9571 ;;      Totals:         0       0       4       0       0
  9572 ;;Total ram usage:        4 bytes
  9573 ;; Hardware stack levels used:    1
  9574 ;; Hardware stack levels required when called:    5
  9575 ;; This function calls:
  9576 ;;		_MFRC522_Rd
  9577 ;;		_MFRC522_Wr
  9578 ;; This function is called by:
  9579 ;;		_MFRC522_ToCard
  9580 ;;		_MFRC522_AntiColl
  9581 ;; This function uses a non-reentrant model
  9582 ;;
  9583                           psect	text27,local,class=CODE,delta=2,merge=1,group=0
  9584                           	line	436
  9585                           global __ptext27
  9586                           __ptext27:	;psect for function _MFRC522_Clear_Bit
  9587  0904                     psect	text27
  9588                           	file	"rfid.c"
  9589                           	line	436
  9590                           	global	__size_of_MFRC522_Clear_Bit
  9591                           	__size_of_MFRC522_Clear_Bit	equ	__end_of_MFRC522_Clear_Bit-_MFRC522_Clear_Bit
  9592  0018                     	
  9593                           _MFRC522_Clear_Bit:	
  9594  0904                     ;incstack = 0
  9595                           	opt	stack 0
  9596                           ; Regs used in _MFRC522_Clear_Bit: [wreg+status,2+status,0+pclath+cstack]
  9597                           ;MFRC522_Clear_Bit@addr stored from wreg
  9598                           	bsf	status, 5	;RP0=1, select bank1
  9599  0904  1683               	bcf	status, 6	;RP1=0, select bank1
  9600  0905  1303               	movwf	(MFRC522_Clear_Bit@addr)^080h
  9601  0906  00AE               	line	438
  9602                           	
  9603                           l3414:	
  9604  0907                     ;rfid.c: 436: static void MFRC522_Clear_Bit(char addr, char mask);rfid.c: 437: {;rfid.c:
                                  438:  MFRC522_Wr(addr, MFRC522_Rd(addr) & (~mask));
  9605                           	comf	(MFRC522_Clear_Bit@mask)^080h,w
  9606  0907  092B               	movwf	(??_MFRC522_Clear_Bit+0)^080h+0
  9607  0908  00AC               	movf	(MFRC522_Clear_Bit@addr)^080h,w
  9608  0909  082E               	fcall	_MFRC522_Rd
  9609  090A  120A  158A  21AB  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  9610  090F  1683               	bcf	status, 6	;RP1=0, select bank1
  9611  0910  1303               	andwf	(??_MFRC522_Clear_Bit+0)^080h+0,w
  9612  0911  052C               	movwf	(??_MFRC522_Clear_Bit+1)^080h+0
  9613  0912  00AD               	movf	(??_MFRC522_Clear_Bit+1)^080h+0,w
  9614  0913  082D               	movwf	(MFRC522_Wr@value)^080h
  9615  0914  00A8               	movf	(MFRC522_Clear_Bit@addr)^080h,w
  9616  0915  082E               	fcall	_MFRC522_Wr
  9617  0916  120A  158A  2151  120A  158A  	line	439
  9618                           	
  9619                           l351:	
  9620  091B                     	return
  9621  091B  0008               	opt stack 0
  9622                           GLOBAL	__end_of_MFRC522_Clear_Bit
  9623                           	__end_of_MFRC522_Clear_Bit:
  9624  091C                     	signat	_MFRC522_Clear_Bit,8313
  9625                           	global	_MFRC522_Wr
  9626                           
  9627 ;; *************** function _MFRC522_Wr *****************
  9628 ;; Defined at:
  9629 ;;		line 416 in file "rfid.c"
  9630 ;; Parameters:    Size  Location     Type
  9631 ;;  addr            1    wreg     unsigned char 
  9632 ;;  value           1    8[BANK1 ] unsigned char 
  9633 ;; Auto vars:     Size  Location     Type
  9634 ;;  addr            1   10[BANK1 ] unsigned char 
  9635 ;; Return value:  Size  Location     Type
  9636 ;;                  1    wreg      void 
  9637 ;; Registers used:
  9638 ;;		wreg, status,2, status,0, pclath, cstack
  9639 ;; Tracked objects:
  9640 ;;		On entry : 0/0
  9641 ;;		On exit  : 0/0
  9642 ;;		Unchanged: 0/0
  9643 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9644 ;;      Params:         0       0       1       0       0
  9645 ;;      Locals:         0       0       1       0       0
  9646 ;;      Temps:          0       0       1       0       0
  9647 ;;      Totals:         0       0       3       0       0
  9648 ;;Total ram usage:        3 bytes
  9649 ;; Hardware stack levels used:    1
  9650 ;; Hardware stack levels required when called:    4
  9651 ;; This function calls:
  9652 ;;		_spiSoftTxDat
  9653 ;; This function is called by:
  9654 ;;		_MFRC522_Clear_Bit
  9655 ;;		_MFRC522_Set_Bit
  9656 ;;		_MFRC522_ToCard
  9657 ;;		_MFRC522_AntiColl
  9658 ;; This function uses a non-reentrant model
  9659 ;;
  9660                           psect	text28,local,class=CODE,delta=2,merge=1,group=0
  9661                           	line	416
  9662                           global __ptext28
  9663                           __ptext28:	;psect for function _MFRC522_Wr
  9664  0951                     psect	text28
  9665                           	file	"rfid.c"
  9666                           	line	416
  9667                           	global	__size_of_MFRC522_Wr
  9668                           	__size_of_MFRC522_Wr	equ	__end_of_MFRC522_Wr-_MFRC522_Wr
  9669  001D                     	
  9670                           _MFRC522_Wr:	
  9671  0951                     ;incstack = 0
  9672                           	opt	stack 2
  9673                           ; Regs used in _MFRC522_Wr: [wreg+status,2+status,0+pclath+cstack]
  9674                           ;MFRC522_Wr@addr stored from wreg
  9675                           	bsf	status, 5	;RP0=1, select bank1
  9676  0951  1683               	bcf	status, 6	;RP1=0, select bank1
  9677  0952  1303               	movwf	(MFRC522_Wr@addr)^080h
  9678  0953  00AA               	line	418
  9679                           	
  9680                           l3332:	
  9681  0954                     ;rfid.c: 416: static void MFRC522_Wr(char addr, char value);rfid.c: 417: {;rfid.c: 418: 
                                  PORTAbits.RA5 = 0;
  9682                           	bcf	status, 5	;RP0=0, select bank0
  9683  0954  1283               	bcf	status, 6	;RP1=0, select bank0
  9684  0955  1303               	bcf	(5),5	;volatile
  9685  0956  1285               	line	419
  9686                           	
  9687                           l3334:	
  9688  0957                     ;rfid.c: 419:  spiSoftTxDat((addr << 1) & 0x7E);
  9689                           	bsf	status, 5	;RP0=1, select bank1
  9690  0957  1683               	bcf	status, 6	;RP1=0, select bank1
  9691  0958  1303               	movf	(MFRC522_Wr@addr)^080h,w
  9692  0959  082A               	movwf	(??_MFRC522_Wr+0)^080h+0
  9693  095A  00A9               	addwf	(??_MFRC522_Wr+0)^080h+0,w
  9694  095B  0729               	andlw	07Eh
  9695  095C  397E               	fcall	_spiSoftTxDat
  9696  095D  120A  158A  22F1  120A  158A  	line	420
  9697                           ;rfid.c: 420:  spiSoftTxDat(value);
  9698                           	bsf	status, 5	;RP0=1, select bank1
  9699  0962  1683               	bcf	status, 6	;RP1=0, select bank1
  9700  0963  1303               	movf	(MFRC522_Wr@value)^080h,w
  9701  0964  0828               	fcall	_spiSoftTxDat
  9702  0965  120A  158A  22F1  120A  158A  	line	421
  9703                           	
  9704                           l3336:	
  9705  096A                     ;rfid.c: 421:  PORTAbits.RA5 = 1;
  9706                           	bcf	status, 5	;RP0=0, select bank0
  9707  096A  1283               	bcf	status, 6	;RP1=0, select bank0
  9708  096B  1303               	bsf	(5),5	;volatile
  9709  096C  1685               	line	422
  9710                           	
  9711                           l345:	
  9712  096D                     	return
  9713  096D  0008               	opt stack 0
  9714                           GLOBAL	__end_of_MFRC522_Wr
  9715                           	__end_of_MFRC522_Wr:
  9716  096E                     	signat	_MFRC522_Wr,8313
  9717                           	global	_MFRC522_Rd
  9718                           
  9719 ;; *************** function _MFRC522_Rd *****************
  9720 ;; Defined at:
  9721 ;;		line 424 in file "rfid.c"
  9722 ;; Parameters:    Size  Location     Type
  9723 ;;  addr            1    wreg     unsigned char 
  9724 ;; Auto vars:     Size  Location     Type
  9725 ;;  addr            1    6[BANK1 ] unsigned char 
  9726 ;;  value           1    7[BANK1 ] unsigned char 
  9727 ;; Return value:  Size  Location     Type
  9728 ;;                  1    wreg      unsigned char 
  9729 ;; Registers used:
  9730 ;;		wreg, status,2, status,0, pclath, cstack
  9731 ;; Tracked objects:
  9732 ;;		On entry : 0/0
  9733 ;;		On exit  : 0/0
  9734 ;;		Unchanged: 0/0
  9735 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9736 ;;      Params:         0       0       0       0       0
  9737 ;;      Locals:         0       0       2       0       0
  9738 ;;      Temps:          0       0       1       0       0
  9739 ;;      Totals:         0       0       3       0       0
  9740 ;;Total ram usage:        3 bytes
  9741 ;; Hardware stack levels used:    1
  9742 ;; Hardware stack levels required when called:    4
  9743 ;; This function calls:
  9744 ;;		_spiSoftRxDat
  9745 ;;		_spiSoftTxDat
  9746 ;; This function is called by:
  9747 ;;		_MFRC522_Clear_Bit
  9748 ;;		_MFRC522_Set_Bit
  9749 ;;		_MFRC522_ToCard
  9750 ;; This function uses a non-reentrant model
  9751 ;;
  9752                           psect	text29,local,class=CODE,delta=2,merge=1,group=0
  9753                           	line	424
  9754                           global __ptext29
  9755                           __ptext29:	;psect for function _MFRC522_Rd
  9756  09AB                     psect	text29
  9757                           	file	"rfid.c"
  9758                           	line	424
  9759                           	global	__size_of_MFRC522_Rd
  9760                           	__size_of_MFRC522_Rd	equ	__end_of_MFRC522_Rd-_MFRC522_Rd
  9761  0024                     	
  9762                           _MFRC522_Rd:	
  9763  09AB                     ;incstack = 0
  9764                           	opt	stack 0
  9765                           ; Regs used in _MFRC522_Rd: [wreg+status,2+status,0+pclath+cstack]
  9766                           ;MFRC522_Rd@addr stored from wreg
  9767                           	bsf	status, 5	;RP0=1, select bank1
  9768  09AB  1683               	bcf	status, 6	;RP1=0, select bank1
  9769  09AC  1303               	movwf	(MFRC522_Rd@addr)^080h
  9770  09AD  00A6               	line	427
  9771                           	
  9772                           l3338:	
  9773  09AE                     ;rfid.c: 424: static char MFRC522_Rd(char addr);rfid.c: 425: {;rfid.c: 426:  char value;
                                 ;rfid.c: 427:  PORTAbits.RA5 = 0;
  9774                           	bcf	status, 5	;RP0=0, select bank0
  9775  09AE  1283               	bcf	status, 6	;RP1=0, select bank0
  9776  09AF  1303               	bcf	(5),5	;volatile
  9777  09B0  1285               	line	428
  9778                           	
  9779                           l3340:	
  9780  09B1                     ;rfid.c: 428:  spiSoftTxDat(((addr << 1) & 0x7E) | 0x80);
  9781                           	bsf	status, 5	;RP0=1, select bank1
  9782  09B1  1683               	bcf	status, 6	;RP1=0, select bank1
  9783  09B2  1303               	movf	(MFRC522_Rd@addr)^080h,w
  9784  09B3  0826               	movwf	(??_MFRC522_Rd+0)^080h+0
  9785  09B4  00A5               	addwf	(??_MFRC522_Rd+0)^080h+0,w
  9786  09B5  0725               	andlw	07Eh
  9787  09B6  397E               	iorlw	080h
  9788  09B7  3880               	fcall	_spiSoftTxDat
  9789  09B8  120A  158A  22F1  120A  158A  	line	431
  9790                           ;rfid.c: 431:  value = spiSoftRxDat();
  9791                           	fcall	_spiSoftRxDat
  9792  09BD  120A  158A  22BE  120A  158A  	bsf	status, 5	;RP0=1, select bank1
  9793  09C2  1683               	bcf	status, 6	;RP1=0, select bank1
  9794  09C3  1303               	movwf	(??_MFRC522_Rd+0)^080h+0
  9795  09C4  00A5               	movf	(??_MFRC522_Rd+0)^080h+0,w
  9796  09C5  0825               	movwf	(MFRC522_Rd@value)^080h
  9797  09C6  00A7               	line	432
  9798                           	
  9799                           l3342:	
  9800  09C7                     ;rfid.c: 432:  PORTAbits.RA5 = 1;
  9801                           	bcf	status, 5	;RP0=0, select bank0
  9802  09C7  1283               	bcf	status, 6	;RP1=0, select bank0
  9803  09C8  1303               	bsf	(5),5	;volatile
  9804  09C9  1685               	line	433
  9805                           	
  9806                           l3344:	
  9807  09CA                     ;rfid.c: 433:  return value;
  9808                           	bsf	status, 5	;RP0=1, select bank1
  9809  09CA  1683               	bcf	status, 6	;RP1=0, select bank1
  9810  09CB  1303               	movf	(MFRC522_Rd@value)^080h,w
  9811  09CC  0827               	goto	l348
  9812  09CD  29CE               	
  9813                           l3346:	
  9814  09CE                     	line	434
  9815                           	
  9816                           l348:	
  9817  09CE                     	return
  9818  09CE  0008               	opt stack 0
  9819                           GLOBAL	__end_of_MFRC522_Rd
  9820                           	__end_of_MFRC522_Rd:
  9821  09CF                     	signat	_MFRC522_Rd,4217
  9822                           	global	_spiSoftTxDat
  9823                           
  9824 ;; *************** function _spiSoftTxDat *****************
  9825 ;; Defined at:
  9826 ;;		line 67 in file "spi.c"
  9827 ;; Parameters:    Size  Location     Type
  9828 ;;  dado            1    wreg     unsigned char 
  9829 ;; Auto vars:     Size  Location     Type
  9830 ;;  dado            1    2[BANK1 ] unsigned char 
  9831 ;;  a               1    4[BANK1 ] unsigned char 
  9832 ;;  reg             1    3[BANK1 ] unsigned char 
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  1    wreg      void 
  9835 ;; Registers used:
  9836 ;;		wreg, status,2, status,0, pclath, cstack
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  9842 ;;      Params:         0       0       0       0       0
  9843 ;;      Locals:         0       0       3       0       0
  9844 ;;      Temps:          0       0       2       0       0
  9845 ;;      Totals:         0       0       5       0       0
  9846 ;;Total ram usage:        5 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:    3
  9849 ;; This function calls:
  9850 ;;		_spiSoftClk
  9851 ;; This function is called by:
  9852 ;;		_mfrc522ClrBit
  9853 ;;		_mfrc522SetBit
  9854 ;;		_mfrc522Rst
  9855 ;;		_mfrc522Iniciar
  9856 ;;		_tagTxCmd
  9857 ;;		_procura_tag
  9858 ;;		_MFRC522_Wr
  9859 ;;		_MFRC522_Rd
  9860 ;; This function uses a non-reentrant model
  9861 ;;
  9862                           psect	text30,local,class=CODE,delta=2,merge=1,group=0
  9863                           	file	"spi.c"
  9864                           	line	67
  9865                           global __ptext30
  9866                           __ptext30:	;psect for function _spiSoftTxDat
  9867  0AF1                     psect	text30
  9868                           	file	"spi.c"
  9869                           	line	67
  9870                           	global	__size_of_spiSoftTxDat
  9871                           	__size_of_spiSoftTxDat	equ	__end_of_spiSoftTxDat-_spiSoftTxDat
  9872  0037                     	
  9873                           _spiSoftTxDat:	
  9874  0AF1                     ;incstack = 0
  9875                           	opt	stack 2
  9876                           ; Regs used in _spiSoftTxDat: [wreg+status,2+status,0+pclath+cstack]
  9877                           ;spiSoftTxDat@dado stored from wreg
  9878                           	bsf	status, 5	;RP0=1, select bank1
  9879  0AF1  1683               	bcf	status, 6	;RP1=0, select bank1
  9880  0AF2  1303               	movwf	(spiSoftTxDat@dado)^080h
  9881  0AF3  00A2               	line	70
  9882                           	
  9883                           l3292:	
  9884  0AF4                     ;spi.c: 67: void spiSoftTxDat(char dado);spi.c: 68: {;spi.c: 69:  char reg, a;;spi.c: 70
                                 :  reg = dado;
  9885                           	movf	(spiSoftTxDat@dado)^080h,w
  9886  0AF4  0822               	movwf	(??_spiSoftTxDat+0)^080h+0
  9887  0AF5  00A0               	movf	(??_spiSoftTxDat+0)^080h+0,w
  9888  0AF6  0820               	movwf	(spiSoftTxDat@reg)^080h
  9889  0AF7  00A3               	line	71
  9890                           	
  9891                           l3294:	
  9892  0AF8                     ;spi.c: 71:  for (a = 0; a < 8; a++)
  9893                           	clrf	(spiSoftTxDat@a)^080h
  9894  0AF8  01A4               	
  9895                           l3296:	
  9896  0AF9                     	movlw	low(08h)
  9897  0AF9  3008               	subwf	(spiSoftTxDat@a)^080h,w
  9898  0AFA  0224               	skipc
  9899  0AFB  1C03               	goto	u2471
  9900  0AFC  2AFE               	goto	u2470
  9901  0AFD  2AFF               u2471:
  9902  0AFE                     	goto	l446
  9903  0AFE  2B01               u2470:
  9904  0AFF                     	goto	l450
  9905  0AFF  2B27               	
  9906                           l3298:	
  9907  0B00                     	goto	l450
  9908  0B00  2B27               	
  9909                           l446:	
  9910  0B01                     	line	73
  9911                           ;spi.c: 72:  {;spi.c: 73:   if (reg & 0x80)PORTCbits.RC5 = 1;
  9912                           	btfss	(spiSoftTxDat@reg)^080h,(7)&7
  9913  0B01  1FA3               	goto	u2481
  9914  0B02  2B04               	goto	u2480
  9915  0B03  2B05               u2481:
  9916  0B04                     	goto	l448
  9917  0B04  2B09               u2480:
  9918  0B05                     	
  9919                           l3300:	
  9920  0B05                     	bcf	status, 5	;RP0=0, select bank0
  9921  0B05  1283               	bcf	status, 6	;RP1=0, select bank0
  9922  0B06  1303               	bsf	(7),5	;volatile
  9923  0B07  1687               	goto	l3302
  9924  0B08  2B0D               	line	74
  9925                           ;spi.c: 74:   else PORTCbits.RC5 = 0;
  9926                           	
  9927                           l448:	
  9928  0B09                     	bcf	status, 5	;RP0=0, select bank0
  9929  0B09  1283               	bcf	status, 6	;RP1=0, select bank0
  9930  0B0A  1303               	bcf	(7),5	;volatile
  9931  0B0B  1287               	goto	l3302
  9932  0B0C  2B0D               	
  9933                           l449:	
  9934  0B0D                     	line	75
  9935                           	
  9936                           l3302:	
  9937  0B0D                     ;spi.c: 75:   reg = reg << 1;
  9938                           	bsf	status, 5	;RP0=1, select bank1
  9939  0B0D  1683               	bcf	status, 6	;RP1=0, select bank1
  9940  0B0E  1303               	movf	(spiSoftTxDat@reg)^080h,w
  9941  0B0F  0823               	movwf	(??_spiSoftTxDat+0)^080h+0
  9942  0B10  00A0               	addwf	(??_spiSoftTxDat+0)^080h+0,w
  9943  0B11  0720               	movwf	(??_spiSoftTxDat+1)^080h+0
  9944  0B12  00A1               	movf	(??_spiSoftTxDat+1)^080h+0,w
  9945  0B13  0821               	movwf	(spiSoftTxDat@reg)^080h
  9946  0B14  00A3               	line	76
  9947                           	
  9948                           l3304:	
  9949  0B15                     ;spi.c: 76:   spiSoftClk();
  9950                           	fcall	_spiSoftClk
  9951  0B15  160A  118A  27E9  120A  158A  	line	77
  9952                           	
  9953                           l3306:	
  9954  0B1A                     ;spi.c: 77:  }
  9955                           	movlw	low(01h)
  9956  0B1A  3001               	bsf	status, 5	;RP0=1, select bank1
  9957  0B1B  1683               	bcf	status, 6	;RP1=0, select bank1
  9958  0B1C  1303               	movwf	(??_spiSoftTxDat+0)^080h+0
  9959  0B1D  00A0               	movf	(??_spiSoftTxDat+0)^080h+0,w
  9960  0B1E  0820               	addwf	(spiSoftTxDat@a)^080h,f
  9961  0B1F  07A4               	
  9962                           l3308:	
  9963  0B20                     	movlw	low(08h)
  9964  0B20  3008               	subwf	(spiSoftTxDat@a)^080h,w
  9965  0B21  0224               	skipc
  9966  0B22  1C03               	goto	u2491
  9967  0B23  2B25               	goto	u2490
  9968  0B24  2B26               u2491:
  9969  0B25                     	goto	l446
  9970  0B25  2B01               u2490:
  9971  0B26                     	goto	l450
  9972  0B26  2B27               	
  9973                           l447:	
  9974  0B27                     	line	78
  9975                           	
  9976                           l450:	
  9977  0B27                     	return
  9978  0B27  0008               	opt stack 0
  9979                           GLOBAL	__end_of_spiSoftTxDat
  9980                           	__end_of_spiSoftTxDat:
  9981  0B28                     	signat	_spiSoftTxDat,4217
  9982                           	global	_spiSoftRxDat
  9983                           
  9984 ;; *************** function _spiSoftRxDat *****************
  9985 ;; Defined at:
  9986 ;;		line 80 in file "spi.c"
  9987 ;; Parameters:    Size  Location     Type
  9988 ;;		None
  9989 ;; Auto vars:     Size  Location     Type
  9990 ;;  a               1    3[BANK1 ] unsigned char 
  9991 ;;  rc              1    2[BANK1 ] unsigned char 
  9992 ;; Return value:  Size  Location     Type
  9993 ;;                  1    wreg      unsigned char 
  9994 ;; Registers used:
  9995 ;;		wreg, status,2, status,0, pclath, cstack
  9996 ;; Tracked objects:
  9997 ;;		On entry : 0/0
  9998 ;;		On exit  : 0/0
  9999 ;;		Unchanged: 0/0
 10000 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10001 ;;      Params:         0       0       0       0       0
 10002 ;;      Locals:         0       0       2       0       0
 10003 ;;      Temps:          0       0       2       0       0
 10004 ;;      Totals:         0       0       4       0       0
 10005 ;;Total ram usage:        4 bytes
 10006 ;; Hardware stack levels used:    1
 10007 ;; Hardware stack levels required when called:    3
 10008 ;; This function calls:
 10009 ;;		_spiSoftClk
 10010 ;; This function is called by:
 10011 ;;		_mfrc522ClrBit
 10012 ;;		_mfrc522SetBit
 10013 ;;		_tagTxCmd
 10014 ;;		_MFRC522_Rd
 10015 ;; This function uses a non-reentrant model
 10016 ;;
 10017                           psect	text31,local,class=CODE,delta=2,merge=1,group=0
 10018                           	line	80
 10019                           global __ptext31
 10020                           __ptext31:	;psect for function _spiSoftRxDat
 10021  0ABE                     psect	text31
 10022                           	file	"spi.c"
 10023                           	line	80
 10024                           	global	__size_of_spiSoftRxDat
 10025                           	__size_of_spiSoftRxDat	equ	__end_of_spiSoftRxDat-_spiSoftRxDat
 10026  0033                     	
 10027                           _spiSoftRxDat:	
 10028  0ABE                     ;incstack = 0
 10029                           	opt	stack 2
 10030                           ; Regs used in _spiSoftRxDat: [wreg+status,2+status,0+pclath+cstack]
 10031                           	line	83
 10032                           	
 10033                           l3270:	
 10034  0ABE                     ;spi.c: 82:  char rc, a;;spi.c: 83:  for (a = 0; a < 8; a++)
 10035                           	bsf	status, 5	;RP0=1, select bank1
 10036  0ABE  1683               	bcf	status, 6	;RP1=0, select bank1
 10037  0ABF  1303               	clrf	(spiSoftRxDat@a)^080h
 10038  0AC0  01A3               	
 10039                           l3272:	
 10040  0AC1                     	movlw	low(08h)
 10041  0AC1  3008               	subwf	(spiSoftRxDat@a)^080h,w
 10042  0AC2  0223               	skipc
 10043  0AC3  1C03               	goto	u2441
 10044  0AC4  2AC6               	goto	u2440
 10045  0AC5  2AC7               u2441:
 10046  0AC6                     	goto	l3276
 10047  0AC6  2AC9               u2440:
 10048  0AC7                     	goto	l3288
 10049  0AC7  2AEE               	
 10050                           l3274:	
 10051  0AC8                     	goto	l3288
 10052  0AC8  2AEE               	
 10053                           l453:	
 10054  0AC9                     	line	85
 10055                           	
 10056                           l3276:	
 10057  0AC9                     ;spi.c: 84:  {;spi.c: 85:   rc = rc << 1;
 10058                           	movf	(spiSoftRxDat@rc)^080h,w
 10059  0AC9  0822               	movwf	(??_spiSoftRxDat+0)^080h+0
 10060  0ACA  00A0               	addwf	(??_spiSoftRxDat+0)^080h+0,w
 10061  0ACB  0720               	movwf	(??_spiSoftRxDat+1)^080h+0
 10062  0ACC  00A1               	movf	(??_spiSoftRxDat+1)^080h+0,w
 10063  0ACD  0821               	movwf	(spiSoftRxDat@rc)^080h
 10064  0ACE  00A2               	line	86
 10065                           	
 10066                           l3278:	
 10067  0ACF                     ;spi.c: 86:   if (PORTCbits.RC4)rc++;
 10068                           	bcf	status, 5	;RP0=0, select bank0
 10069  0ACF  1283               	bcf	status, 6	;RP1=0, select bank0
 10070  0AD0  1303               	btfss	(7),4	;volatile
 10071  0AD1  1E07               	goto	u2451
 10072  0AD2  2AD4               	goto	u2450
 10073  0AD3  2AD5               u2451:
 10074  0AD4                     	goto	l3282
 10075  0AD4  2ADC               u2450:
 10076  0AD5                     	
 10077                           l3280:	
 10078  0AD5                     	movlw	low(01h)
 10079  0AD5  3001               	bsf	status, 5	;RP0=1, select bank1
 10080  0AD6  1683               	bcf	status, 6	;RP1=0, select bank1
 10081  0AD7  1303               	movwf	(??_spiSoftRxDat+0)^080h+0
 10082  0AD8  00A0               	movf	(??_spiSoftRxDat+0)^080h+0,w
 10083  0AD9  0820               	addwf	(spiSoftRxDat@rc)^080h,f
 10084  0ADA  07A2               	goto	l3282
 10085  0ADB  2ADC               	
 10086                           l455:	
 10087  0ADC                     	line	87
 10088                           	
 10089                           l3282:	
 10090  0ADC                     ;spi.c: 87:   spiSoftClk();
 10091                           	fcall	_spiSoftClk
 10092  0ADC  160A  118A  27E9  120A  158A  	line	88
 10093                           	
 10094                           l3284:	
 10095  0AE1                     ;spi.c: 88:  }
 10096                           	movlw	low(01h)
 10097  0AE1  3001               	bsf	status, 5	;RP0=1, select bank1
 10098  0AE2  1683               	bcf	status, 6	;RP1=0, select bank1
 10099  0AE3  1303               	movwf	(??_spiSoftRxDat+0)^080h+0
 10100  0AE4  00A0               	movf	(??_spiSoftRxDat+0)^080h+0,w
 10101  0AE5  0820               	addwf	(spiSoftRxDat@a)^080h,f
 10102  0AE6  07A3               	
 10103                           l3286:	
 10104  0AE7                     	movlw	low(08h)
 10105  0AE7  3008               	subwf	(spiSoftRxDat@a)^080h,w
 10106  0AE8  0223               	skipc
 10107  0AE9  1C03               	goto	u2461
 10108  0AEA  2AEC               	goto	u2460
 10109  0AEB  2AED               u2461:
 10110  0AEC                     	goto	l3276
 10111  0AEC  2AC9               u2460:
 10112  0AED                     	goto	l3288
 10113  0AED  2AEE               	
 10114                           l454:	
 10115  0AEE                     	line	89
 10116                           	
 10117                           l3288:	
 10118  0AEE                     ;spi.c: 89:  return (rc);
 10119                           	movf	(spiSoftRxDat@rc)^080h,w
 10120  0AEE  0822               	goto	l456
 10121  0AEF  2AF0               	
 10122                           l3290:	
 10123  0AF0                     	line	90
 10124                           	
 10125                           l456:	
 10126  0AF0                     	return
 10127  0AF0  0008               	opt stack 0
 10128                           GLOBAL	__end_of_spiSoftRxDat
 10129                           	__end_of_spiSoftRxDat:
 10130  0AF1                     	signat	_spiSoftRxDat,89
 10131                           	global	_spiSoftClk
 10132                           
 10133 ;; *************** function _spiSoftClk *****************
 10134 ;; Defined at:
 10135 ;;		line 17 in file "spi.c"
 10136 ;; Parameters:    Size  Location     Type
 10137 ;;		None
 10138 ;; Auto vars:     Size  Location     Type
 10139 ;;		None
 10140 ;; Return value:  Size  Location     Type
 10141 ;;                  1    wreg      void 
 10142 ;; Registers used:
 10143 ;;		None
 10144 ;; Tracked objects:
 10145 ;;		On entry : 0/0
 10146 ;;		On exit  : 0/0
 10147 ;;		Unchanged: 0/0
 10148 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10149 ;;      Params:         0       0       0       0       0
 10150 ;;      Locals:         0       0       0       0       0
 10151 ;;      Temps:          0       0       0       0       0
 10152 ;;      Totals:         0       0       0       0       0
 10153 ;;Total ram usage:        0 bytes
 10154 ;; Hardware stack levels used:    1
 10155 ;; Hardware stack levels required when called:    2
 10156 ;; This function calls:
 10157 ;;		Nothing
 10158 ;; This function is called by:
 10159 ;;		_spiSoftTxCmd
 10160 ;;		_spiSoftTxDat
 10161 ;;		_spiSoftRxDat
 10162 ;; This function uses a non-reentrant model
 10163 ;;
 10164                           psect	text32,local,class=CODE,delta=2,merge=1,group=0
 10165                           	line	17
 10166                           global __ptext32
 10167                           __ptext32:	;psect for function _spiSoftClk
 10168  17E9                     psect	text32
 10169                           	file	"spi.c"
 10170                           	line	17
 10171                           	global	__size_of_spiSoftClk
 10172                           	__size_of_spiSoftClk	equ	__end_of_spiSoftClk-_spiSoftClk
 10173  000A                     	
 10174                           _spiSoftClk:	
 10175  17E9                     ;incstack = 0
 10176                           	opt	stack 2
 10177                           ; Regs used in _spiSoftClk: []
 10178                           	line	19
 10179                           	
 10180                           l3268:	
 10181  17E9                     ;spi.c: 19:  PORTCbits.RC3 = 1;
 10182                           	bcf	status, 5	;RP0=0, select bank0
 10183  17E9  1283               	bcf	status, 6	;RP1=0, select bank0
 10184  17EA  1303               	bsf	(7),3	;volatile
 10185  17EB  1587               	line	20
 10186                           ;spi.c: 20:  _delay((unsigned long)((1)*(20000000/4000000.0)));
 10187                           		opt asmopt_push
 10188                           	opt asmopt_off
 10189                           	nop2	;2 cycle nop
 10190  17EC  2FED               	nop2	;2 cycle nop
 10191  17ED  2FEE               	nop
 10192  17EE  0000               	opt asmopt_pop
 10193                           
 10194                           	line	21
 10195                           ;spi.c: 21:  PORTCbits.RC3 = 0;
 10196                           	bcf	status, 5	;RP0=0, select bank0
 10197  17EF  1283               	bcf	status, 6	;RP1=0, select bank0
 10198  17F0  1303               	bcf	(7),3	;volatile
 10199  17F1  1187               	line	22
 10200                           	
 10201                           l428:	
 10202  17F2                     	return
 10203  17F2  0008               	opt stack 0
 10204                           GLOBAL	__end_of_spiSoftClk
 10205                           	__end_of_spiSoftClk:
 10206  17F3                     	signat	_spiSoftClk,89
 10207                           	global	_isr
 10208                           
 10209 ;; *************** function _isr *****************
 10210 ;; Defined at:
 10211 ;;		line 15 in file "interrupt.c"
 10212 ;; Parameters:    Size  Location     Type
 10213 ;;		None
 10214 ;; Auto vars:     Size  Location     Type
 10215 ;;		None
 10216 ;; Return value:  Size  Location     Type
 10217 ;;                  1    wreg      void 
 10218 ;; Registers used:
 10219 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
 10220 ;; Tracked objects:
 10221 ;;		On entry : 0/0
 10222 ;;		On exit  : 0/0
 10223 ;;		Unchanged: 0/0
 10224 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10225 ;;      Params:         0       0       0       0       0
 10226 ;;      Locals:         0       8       0       0       0
 10227 ;;      Temps:          0       7       0       0       0
 10228 ;;      Totals:         0      15       0       0       0
 10229 ;;Total ram usage:       15 bytes
 10230 ;; Hardware stack levels used:    1
 10231 ;; Hardware stack levels required when called:    1
 10232 ;; This function calls:
 10233 ;;		___aldiv
 10234 ;;		___lmul
 10235 ;;		_tmr_tick_int
 10236 ;; This function is called by:
 10237 ;;		Interrupt level 1
 10238 ;; This function uses a non-reentrant model
 10239 ;;
 10240                           psect	text33,local,class=CODE,delta=2,merge=1,group=0
 10241                           	file	"interrupt.c"
 10242                           	line	15
 10243                           global __ptext33
 10244                           __ptext33:	;psect for function _isr
 10245  06C4                     psect	text33
 10246                           	file	"interrupt.c"
 10247                           	line	15
 10248                           	global	__size_of_isr
 10249                           	__size_of_isr	equ	__end_of_isr-_isr
 10250  00E7                     	
 10251                           _isr:	
 10252  06C4                     ;incstack = 0
 10253                           	opt	stack 0
 10254                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0+pclath+cstack]
 10255                           psect	intentry,class=CODE,delta=2
 10256                           global __pintentry
 10257                           __pintentry:
 10258  0004                     global interrupt_function
 10259                           interrupt_function:
 10260  0004                     	global saved_w
 10261                           	saved_w	set	btemp+0
 10262  007E                     	movwf	saved_w
 10263  0004  00FE               	swapf	status,w
 10264  0005  0E03               	bcf	status, 5	;RP0=0, select bank0
 10265  0006  1283               	bcf	status, 6	;RP1=0, select bank0
 10266  0007  1303               	movwf	(??_isr+4)
 10267  0008  00B6               	movf	fsr0,w
 10268  0009  0804               	movwf	(??_isr+5)
 10269  000A  00B7               	movf	pclath,w
 10270  000B  080A               	movwf	(??_isr+6)
 10271  000C  00B8               	ljmp	_isr
 10272  000D  120A  118A  2EC4   psect	text33
 10273                           	line	17
 10274                           	
 10275                           i1l4794:	
 10276  06C4                     ;interrupt.c: 17:     if ( INTCONbits.RBIE && INTCONbits.RBIF )
 10277                           	btfss	(11),3	;volatile
 10278  06C4  1D8B               	goto	u429_21
 10279  06C5  2EC7               	goto	u429_20
 10280  06C6  2EC8               u429_21:
 10281  06C7                     	goto	i1l4820
 10282  06C7  2F94               u429_20:
 10283  06C8                     	
 10284                           i1l4796:	
 10285  06C8                     	btfss	(11),0	;volatile
 10286  06C8  1C0B               	goto	u430_21
 10287  06C9  2ECB               	goto	u430_20
 10288  06CA  2ECC               u430_21:
 10289  06CB                     	goto	i1l4820
 10290  06CB  2F94               u430_20:
 10291  06CC                     	line	20
 10292                           	
 10293                           i1l4798:	
 10294  06CC                     ;interrupt.c: 18:     {;interrupt.c: 20:         if(PORTBbits.RB7)
 10295                           	btfss	(6),7	;volatile
 10296  06CC  1F86               	goto	u431_21
 10297  06CD  2ECF               	goto	u431_20
 10298  06CE  2ED0               u431_21:
 10299  06CF                     	goto	i1l163
 10300  06CF  2EDC               u431_20:
 10301  06D0                     	line	22
 10302                           	
 10303                           i1l4800:	
 10304  06D0                     ;interrupt.c: 21:         {;interrupt.c: 22:             TMR1H = 0;
 10305                           	clrf	(15)	;volatile
 10306  06D0  018F               	line	23
 10307                           ;interrupt.c: 23:             TMR1L = 0;
 10308                           	clrf	(14)	;volatile
 10309  06D1  018E               	line	24
 10310                           	
 10311                           i1l4802:	
 10312  06D2                     ;interrupt.c: 24:             time = 0;
 10313                           	movlw	high highword(0)
 10314  06D2  3000               	movwf	(_time+3)
 10315  06D3  00CC               	movlw	low highword(0)
 10316  06D4  3000               	movwf	(_time+2)
 10317  06D5  00CB               	movlw	high(0)
 10318  06D6  3000               	movwf	(_time+1)
 10319  06D7  00CA               	movlw	low(0)
 10320  06D8  3000               	movwf	(_time)
 10321  06D9  00C9               
 10322                           	line	25
 10323                           	
 10324                           i1l4804:	
 10325  06DA                     ;interrupt.c: 25:             T1CONbits.TMR1ON = 1;
 10326                           	bsf	(16),0	;volatile
 10327  06DA  1410               	line	26
 10328                           ;interrupt.c: 26:         }
 10329                           	goto	i1l4818
 10330  06DB  2F92               	line	27
 10331                           ;interrupt.c: 27:         else
 10332                           	
 10333                           i1l163:	
 10334  06DC                     	line	29
 10335                           ;interrupt.c: 28:         {;interrupt.c: 29:             T1CONbits.TMR1ON = 0;
 10336                           	bcf	(16),0	;volatile
 10337  06DC  1010               	line	30
 10338                           	
 10339                           i1l4806:	
 10340  06DD                     ;interrupt.c: 30:             time = TMR1H;
 10341                           	movf	(15),w	;volatile
 10342  06DD  080F               	movwf	(??_isr+0)+0
 10343  06DE  00B2               	clrf	(??_isr+0)+0+1
 10344  06DF  01B3               	clrf	(??_isr+0)+0+2
 10345  06E0  01B4               	clrf	(??_isr+0)+0+3
 10346  06E1  01B5               	movf	3+(??_isr+0)+0,w
 10347  06E2  0835               	movwf	(_time+3)
 10348  06E3  00CC               	movf	2+(??_isr+0)+0,w
 10349  06E4  0834               	movwf	(_time+2)
 10350  06E5  00CB               	movf	1+(??_isr+0)+0,w
 10351  06E6  0833               	movwf	(_time+1)
 10352  06E7  00CA               	movf	0+(??_isr+0)+0,w
 10353  06E8  0832               	movwf	(_time)
 10354  06E9  00C9               
 10355                           	line	31
 10356                           	
 10357                           i1l4808:	
 10358  06EA                     ;interrupt.c: 31:             time <<= 8;
 10359                           	movlw	08h
 10360  06EA  3008               	movwf	(??_isr+0)+0
 10361  06EB  00B2               u432_25:
 10362  06EC                     	clrc
 10363  06EC  1003               	rlf	(_time),f
 10364  06ED  0DC9               	rlf	(_time+1),f
 10365  06EE  0DCA               	rlf	(_time+2),f
 10366  06EF  0DCB               	rlf	(_time+3),f
 10367  06F0  0DCC               	decfsz	(??_isr+0)+0
 10368  06F1  0BB2               	goto	u432_25
 10369  06F2  2EEC               	line	32
 10370                           	
 10371                           i1l4810:	
 10372  06F3                     ;interrupt.c: 32:             time += TMR1L;
 10373                           	movf	(14),w	;volatile
 10374  06F3  080E               	movwf	(??_isr+0)+0
 10375  06F4  00B2               	clrf	(??_isr+0)+0+1
 10376  06F5  01B3               	clrf	(??_isr+0)+0+2
 10377  06F6  01B4               	clrf	(??_isr+0)+0+3
 10378  06F7  01B5               	movf	0+(??_isr+0)+0,w
 10379  06F8  0832               	addwf	(_time),f
 10380  06F9  07C9               	movf	1+(??_isr+0)+0,w
 10381  06FA  0833               	clrz
 10382  06FB  1103               	skipnc
 10383  06FC  1803               	addlw	1
 10384  06FD  3E01               	skipnz
 10385  06FE  1903               	goto	u433_21
 10386  06FF  2F01               	addwf	(_time+1),f
 10387  0700  07CA               u433_21:
 10388  0701                     	movf	2+(??_isr+0)+0,w
 10389  0701  0834               	clrz
 10390  0702  1103               	skipnc
 10391  0703  1803               	addlw	1
 10392  0704  3E01               	skipnz
 10393  0705  1903               	goto	u433_22
 10394  0706  2F08               	addwf	(_time+2),f
 10395  0707  07CB               u433_22:
 10396  0708                     	movf	3+(??_isr+0)+0,w
 10397  0708  0835               	clrz
 10398  0709  1103               	skipnc
 10399  070A  1803               	addlw	1
 10400  070B  3E01               	skipnz
 10401  070C  1903               	goto	u433_23
 10402  070D  2F0F               	addwf	(_time+3),f
 10403  070E  07CC               u433_23:
 10404  070F                     
 10405                           	line	33
 10406                           	
 10407                           i1l4812:	
 10408  070F                     ;interrupt.c: 33:             dist = ((((time*34717) /5000) /2) /1000) ;
 10409                           	movlw	0
 10410  070F  3000               	movwf	(___aldiv@divisor+3)
 10411  0710  00A7               	movlw	0
 10412  0711  3000               	movwf	(___aldiv@divisor+2)
 10413  0712  00A6               	movlw	013h
 10414  0713  3013               	movwf	(___aldiv@divisor+1)
 10415  0714  00A5               	movlw	088h
 10416  0715  3088               	movwf	(___aldiv@divisor)
 10417  0716  00A4               
 10418                           	movf	(_time+3),w
 10419  0717  084C               	movwf	(___lmul@multiplier+3)
 10420  0718  00F3               	movf	(_time+2),w
 10421  0719  084B               	movwf	(___lmul@multiplier+2)
 10422  071A  00F2               	movf	(_time+1),w
 10423  071B  084A               	movwf	(___lmul@multiplier+1)
 10424  071C  00F1               	movf	(_time),w
 10425  071D  0849               	movwf	(___lmul@multiplier)
 10426  071E  00F0               
 10427                           	movlw	0
 10428  071F  3000               	movwf	(___lmul@multiplicand+3)
 10429  0720  00F7               	movlw	0
 10430  0721  3000               	movwf	(___lmul@multiplicand+2)
 10431  0722  00F6               	movlw	087h
 10432  0723  3087               	movwf	(___lmul@multiplicand+1)
 10433  0724  00F5               	movlw	09Dh
 10434  0725  309D               	movwf	(___lmul@multiplicand)
 10435  0726  00F4               
 10436                           	fcall	___lmul
 10437  0727  120A  158A  24C1  120A  118A  	movf	(3+(?___lmul)),w
 10438  072C  0873               	bcf	status, 5	;RP0=0, select bank0
 10439  072D  1283               	bcf	status, 6	;RP1=0, select bank0
 10440  072E  1303               	movwf	(___aldiv@dividend+3)
 10441  072F  00AB               	movf	(2+(?___lmul)),w
 10442  0730  0872               	movwf	(___aldiv@dividend+2)
 10443  0731  00AA               	movf	(1+(?___lmul)),w
 10444  0732  0871               	movwf	(___aldiv@dividend+1)
 10445  0733  00A9               	movf	(0+(?___lmul)),w
 10446  0734  0870               	movwf	(___aldiv@dividend)
 10447  0735  00A8               
 10448                           	fcall	___aldiv
 10449  0736  120A  158A  26B0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
 10450  073B  1283               	bcf	status, 6	;RP1=0, select bank0
 10451  073C  1303               	movf	(3+(?___aldiv)),w
 10452  073D  0827               	movwf	(_isr$1614+3)
 10453  073E  00BC               	movf	(2+(?___aldiv)),w
 10454  073F  0826               	movwf	(_isr$1614+2)
 10455  0740  00BB               	movf	(1+(?___aldiv)),w
 10456  0741  0825               	movwf	(_isr$1614+1)
 10457  0742  00BA               	movf	(0+(?___aldiv)),w
 10458  0743  0824               	movwf	(_isr$1614)
 10459  0744  00B9               
 10460                           	
 10461                           i1l4814:	
 10462  0745                     ;interrupt.c: 33:             dist = ((((time*34717) /5000) /2) /1000) ;
 10463                           	movlw	0
 10464  0745  3000               	movwf	(___aldiv@divisor+3)
 10465  0746  00A7               	movlw	0
 10466  0747  3000               	movwf	(___aldiv@divisor+2)
 10467  0748  00A6               	movlw	0
 10468  0749  3000               	movwf	(___aldiv@divisor+1)
 10469  074A  00A5               	movlw	02h
 10470  074B  3002               	movwf	(___aldiv@divisor)
 10471  074C  00A4               
 10472                           	movf	(_isr$1614+3),w
 10473  074D  083C               	movwf	(___aldiv@dividend+3)
 10474  074E  00AB               	movf	(_isr$1614+2),w
 10475  074F  083B               	movwf	(___aldiv@dividend+2)
 10476  0750  00AA               	movf	(_isr$1614+1),w
 10477  0751  083A               	movwf	(___aldiv@dividend+1)
 10478  0752  00A9               	movf	(_isr$1614),w
 10479  0753  0839               	movwf	(___aldiv@dividend)
 10480  0754  00A8               
 10481                           	fcall	___aldiv
 10482  0755  120A  158A  26B0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
 10483  075A  1283               	bcf	status, 6	;RP1=0, select bank0
 10484  075B  1303               	movf	(3+(?___aldiv)),w
 10485  075C  0827               	movwf	(_isr$1615+3)
 10486  075D  00C0               	movf	(2+(?___aldiv)),w
 10487  075E  0826               	movwf	(_isr$1615+2)
 10488  075F  00BF               	movf	(1+(?___aldiv)),w
 10489  0760  0825               	movwf	(_isr$1615+1)
 10490  0761  00BE               	movf	(0+(?___aldiv)),w
 10491  0762  0824               	movwf	(_isr$1615)
 10492  0763  00BD               
 10493                           	
 10494                           i1l4816:	
 10495  0764                     ;interrupt.c: 33:             dist = ((((time*34717) /5000) /2) /1000) ;
 10496                           	movlw	0
 10497  0764  3000               	movwf	(___aldiv@divisor+3)
 10498  0765  00A7               	movlw	0
 10499  0766  3000               	movwf	(___aldiv@divisor+2)
 10500  0767  00A6               	movlw	03h
 10501  0768  3003               	movwf	(___aldiv@divisor+1)
 10502  0769  00A5               	movlw	0E8h
 10503  076A  30E8               	movwf	(___aldiv@divisor)
 10504  076B  00A4               
 10505                           	movf	(_isr$1615+3),w
 10506  076C  0840               	movwf	(___aldiv@dividend+3)
 10507  076D  00AB               	movf	(_isr$1615+2),w
 10508  076E  083F               	movwf	(___aldiv@dividend+2)
 10509  076F  00AA               	movf	(_isr$1615+1),w
 10510  0770  083E               	movwf	(___aldiv@dividend+1)
 10511  0771  00A9               	movf	(_isr$1615),w
 10512  0772  083D               	movwf	(___aldiv@dividend)
 10513  0773  00A8               
 10514                           	fcall	___aldiv
 10515  0774  120A  158A  26B0  120A  118A  	bcf	status, 5	;RP0=0, select bank0
 10516  0779  1283               	bcf	status, 6	;RP1=0, select bank0
 10517  077A  1303               	movf	(3+(?___aldiv)),w
 10518  077B  0827               	bsf	status, 5	;RP0=1, select bank1
 10519  077C  1683               	bcf	status, 6	;RP1=0, select bank1
 10520  077D  1303               	movwf	(_dist+3)^080h
 10521  077E  00EB               	bcf	status, 5	;RP0=0, select bank0
 10522  077F  1283               	bcf	status, 6	;RP1=0, select bank0
 10523  0780  1303               	movf	(2+(?___aldiv)),w
 10524  0781  0826               	bsf	status, 5	;RP0=1, select bank1
 10525  0782  1683               	bcf	status, 6	;RP1=0, select bank1
 10526  0783  1303               	movwf	(_dist+2)^080h
 10527  0784  00EA               	bcf	status, 5	;RP0=0, select bank0
 10528  0785  1283               	bcf	status, 6	;RP1=0, select bank0
 10529  0786  1303               	movf	(1+(?___aldiv)),w
 10530  0787  0825               	bsf	status, 5	;RP0=1, select bank1
 10531  0788  1683               	bcf	status, 6	;RP1=0, select bank1
 10532  0789  1303               	movwf	(_dist+1)^080h
 10533  078A  00E9               	bcf	status, 5	;RP0=0, select bank0
 10534  078B  1283               	bcf	status, 6	;RP1=0, select bank0
 10535  078C  1303               	movf	(0+(?___aldiv)),w
 10536  078D  0824               	bsf	status, 5	;RP0=1, select bank1
 10537  078E  1683               	bcf	status, 6	;RP1=0, select bank1
 10538  078F  1303               	movwf	(_dist)^080h
 10539  0790  00E8               
 10540                           	goto	i1l4818
 10541  0791  2F92               	line	34
 10542                           ;interrupt.c: 34:         }
 10543                           	
 10544                           i1l164:	
 10545  0792                     	line	36
 10546                           	
 10547                           i1l4818:	
 10548  0792                     ;interrupt.c: 36:         INTCONbits.RBIF = 0;
 10549                           	bcf	(11),0	;volatile
 10550  0792  100B               	goto	i1l4820
 10551  0793  2F94               	line	37
 10552                           ;interrupt.c: 37:     }
 10553                           	
 10554                           i1l162:	
 10555  0794                     	line	39
 10556                           	
 10557                           i1l4820:	
 10558  0794                     ;interrupt.c: 39:     if( PIR1bits.TMR1IF )
 10559                           	bcf	status, 5	;RP0=0, select bank0
 10560  0794  1283               	btfss	(12),0	;volatile
 10561  0795  1C0C               	goto	u434_21
 10562  0796  2F98               	goto	u434_20
 10563  0797  2F99               u434_21:
 10564  0798                     	goto	i1l166
 10565  0798  2FA0               u434_20:
 10566  0799                     	line	42
 10567                           	
 10568                           i1l4822:	
 10569  0799                     ;interrupt.c: 40:     {;interrupt.c: 42:         PIR1bits.TMR1IF = 0;
 10570                           	bcf	(12),0	;volatile
 10571  0799  100C               	line	43
 10572                           	
 10573                           i1l4824:	
 10574  079A                     ;interrupt.c: 43:         tmr_tick_int();
 10575                           	fcall	_tmr_tick_int
 10576  079A  120A  158A  235F  120A  118A  	goto	i1l166
 10577  079F  2FA0               	line	45
 10578                           ;interrupt.c: 45:     }
 10579                           	
 10580                           i1l165:	
 10581  07A0                     	line	46
 10582                           	
 10583                           i1l166:	
 10584  07A0                     	bcf	status, 5	;RP0=0, select bank0
 10585  07A0  1283               	bcf	status, 6	;RP1=0, select bank0
 10586  07A1  1303               	movf	(??_isr+6),w
 10587  07A2  0838               	movwf	pclath
 10588  07A3  008A               	movf	(??_isr+5),w
 10589  07A4  0837               	movwf	fsr0
 10590  07A5  0084               	swapf	(??_isr+4)^00h,w
 10591  07A6  0E36               	movwf	status
 10592  07A7  0083               	swapf	saved_w,f
 10593  07A8  0EFE               	swapf	saved_w,w
 10594  07A9  0E7E               	retfie
 10595  07AA  0009               	opt stack 0
 10596                           GLOBAL	__end_of_isr
 10597                           	__end_of_isr:
 10598  07AB                     	signat	_isr,89
 10599                           	global	_tmr_tick_int
 10600                           
 10601 ;; *************** function _tmr_tick_int *****************
 10602 ;; Defined at:
 10603 ;;		line 22 in file "tmr_tick.c"
 10604 ;; Parameters:    Size  Location     Type
 10605 ;;		None
 10606 ;; Auto vars:     Size  Location     Type
 10607 ;;  i               1    3[COMMON] unsigned char 
 10608 ;; Return value:  Size  Location     Type
 10609 ;;                  1    wreg      void 
 10610 ;; Registers used:
 10611 ;;		wreg, fsr0l, fsr0h, status,2, status,0
 10612 ;; Tracked objects:
 10613 ;;		On entry : 0/0
 10614 ;;		On exit  : 0/0
 10615 ;;		Unchanged: 0/0
 10616 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10617 ;;      Params:         0       0       0       0       0
 10618 ;;      Locals:         1       0       0       0       0
 10619 ;;      Temps:          3       0       0       0       0
 10620 ;;      Totals:         4       0       0       0       0
 10621 ;;Total ram usage:        4 bytes
 10622 ;; Hardware stack levels used:    1
 10623 ;; This function calls:
 10624 ;;		Nothing
 10625 ;; This function is called by:
 10626 ;;		_isr
 10627 ;; This function uses a non-reentrant model
 10628 ;;
 10629                           psect	text34,local,class=CODE,delta=2,merge=1,group=0
 10630                           	file	"tmr_tick.c"
 10631                           	line	22
 10632                           global __ptext34
 10633                           __ptext34:	;psect for function _tmr_tick_int
 10634  0B5F                     psect	text34
 10635                           	file	"tmr_tick.c"
 10636                           	line	22
 10637                           	global	__size_of_tmr_tick_int
 10638                           	__size_of_tmr_tick_int	equ	__end_of_tmr_tick_int-_tmr_tick_int
 10639  003A                     	
 10640                           _tmr_tick_int:	
 10641  0B5F                     ;incstack = 0
 10642                           	opt	stack 0
 10643                           ; Regs used in _tmr_tick_int: [wreg-fsr0h+status,2+status,0]
 10644                           	line	24
 10645                           	
 10646                           i1l2806:	
 10647  0B5F                     ;tmr_tick.c: 24:     TMR1H = ((0xFFFF-5000+1) >> 8) & 0x00FF;
 10648                           	movlw	low(0ECh)
 10649  0B5F  30EC               	bcf	status, 5	;RP0=0, select bank0
 10650  0B60  1283               	bcf	status, 6	;RP1=0, select bank0
 10651  0B61  1303               	movwf	(15)	;volatile
 10652  0B62  008F               	line	25
 10653                           ;tmr_tick.c: 25:     TMR1L = ((0xFFFF-5000+1) >> 0) & 0x00FF;
 10654                           	movlw	low(078h)
 10655  0B63  3078               	movwf	(14)	;volatile
 10656  0B64  008E               	line	26
 10657                           	
 10658                           i1l2808:	
 10659  0B65                     ;tmr_tick.c: 26:     for( char i=0; i<4; i++ )
 10660                           	clrf	(tmr_tick_int@i)
 10661  0B65  01F3               	
 10662                           i1l2810:	
 10663  0B66                     	movlw	low(04h)
 10664  0B66  3004               	subwf	(tmr_tick_int@i),w
 10665  0B67  0273               	skipc
 10666  0B68  1C03               	goto	u192_21
 10667  0B69  2B6B               	goto	u192_20
 10668  0B6A  2B6C               u192_21:
 10669  0B6B                     	goto	i1l2814
 10670  0B6B  2B6E               u192_20:
 10671  0B6C                     	goto	i1l189
 10672  0B6C  2B98               	
 10673                           i1l2812:	
 10674  0B6D                     	goto	i1l189
 10675  0B6D  2B98               	
 10676                           i1l186:	
 10677  0B6E                     	line	28
 10678                           	
 10679                           i1l2814:	
 10680  0B6E                     ;tmr_tick.c: 27:     {;tmr_tick.c: 28:         if( timer[i] )
 10681                           	movf	(tmr_tick_int@i),w
 10682  0B6E  0873               	movwf	(??_tmr_tick_int+0)+0
 10683  0B6F  00F0               	addwf	(??_tmr_tick_int+0)+0,w
 10684  0B70  0770               	addlw	low(_timer|((0x0)<<8))&0ffh
 10685  0B71  3E41               	movwf	fsr0
 10686  0B72  0084               	bcf	status, 7	;select IRP bank0
 10687  0B73  1383               	movf	indf,w
 10688  0B74  0800               	movwf	(??_tmr_tick_int+1)+0+0
 10689  0B75  00F1               	incf	fsr0,f
 10690  0B76  0A84               	movf	indf,w
 10691  0B77  0800               	movwf	(??_tmr_tick_int+1)+0+1
 10692  0B78  00F2               	movf	((??_tmr_tick_int+1)+0),w
 10693  0B79  0871               iorwf	((??_tmr_tick_int+1)+1),w
 10694  0B7A  0472               	btfsc	status,2
 10695  0B7B  1903               	goto	u193_21
 10696  0B7C  2B7E               	goto	u193_20
 10697  0B7D  2B7F               u193_21:
 10698  0B7E                     	goto	i1l2818
 10699  0B7E  2B8D               u193_20:
 10700  0B7F                     	line	29
 10701                           	
 10702                           i1l2816:	
 10703  0B7F                     ;tmr_tick.c: 29:             --timer[i];
 10704                           	movf	(tmr_tick_int@i),w
 10705  0B7F  0873               	movwf	(??_tmr_tick_int+0)+0
 10706  0B80  00F0               	addwf	(??_tmr_tick_int+0)+0,w
 10707  0B81  0770               	addlw	low(_timer|((0x0)<<8))&0ffh
 10708  0B82  3E41               	movwf	fsr0
 10709  0B83  0084               	movlw	low(01h)
 10710  0B84  3001               	subwf	indf,f
 10711  0B85  0280               	incfsz	fsr0,f
 10712  0B86  0F84               	movlw	high(01h)
 10713  0B87  3000               	skipc
 10714  0B88  1C03               	decf	indf,f
 10715  0B89  0380               	subwf	indf,f
 10716  0B8A  0280               	decf	fsr0,f
 10717  0B8B  0384               	goto	i1l2818
 10718  0B8C  2B8D               	
 10719                           i1l188:	
 10720  0B8D                     	line	30
 10721                           	
 10722                           i1l2818:	
 10723  0B8D                     ;tmr_tick.c: 30:     }
 10724                           	movlw	low(01h)
 10725  0B8D  3001               	movwf	(??_tmr_tick_int+0)+0
 10726  0B8E  00F0               	movf	(??_tmr_tick_int+0)+0,w
 10727  0B8F  0870               	addwf	(tmr_tick_int@i),f
 10728  0B90  07F3               	
 10729                           i1l2820:	
 10730  0B91                     	movlw	low(04h)
 10731  0B91  3004               	subwf	(tmr_tick_int@i),w
 10732  0B92  0273               	skipc
 10733  0B93  1C03               	goto	u194_21
 10734  0B94  2B96               	goto	u194_20
 10735  0B95  2B97               u194_21:
 10736  0B96                     	goto	i1l2814
 10737  0B96  2B6E               u194_20:
 10738  0B97                     	goto	i1l189
 10739  0B97  2B98               	
 10740                           i1l187:	
 10741  0B98                     	line	31
 10742                           	
 10743                           i1l189:	
 10744  0B98                     	return
 10745  0B98  0008               	opt stack 0
 10746                           GLOBAL	__end_of_tmr_tick_int
 10747                           	__end_of_tmr_tick_int:
 10748  0B99                     	signat	_tmr_tick_int,89
 10749                           	global	___lmul
 10750                           
 10751 ;; *************** function ___lmul *****************
 10752 ;; Defined at:
 10753 ;;		line 15 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 10754 ;; Parameters:    Size  Location     Type
 10755 ;;  multiplier      4    0[COMMON] unsigned long 
 10756 ;;  multiplicand    4    4[COMMON] unsigned long 
 10757 ;; Auto vars:     Size  Location     Type
 10758 ;;  product         4    0[BANK0 ] unsigned long 
 10759 ;; Return value:  Size  Location     Type
 10760 ;;                  4    0[COMMON] unsigned long 
 10761 ;; Registers used:
 10762 ;;		wreg, status,2, status,0
 10763 ;; Tracked objects:
 10764 ;;		On entry : 0/0
 10765 ;;		On exit  : 0/0
 10766 ;;		Unchanged: 0/0
 10767 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10768 ;;      Params:         8       0       0       0       0
 10769 ;;      Locals:         0       4       0       0       0
 10770 ;;      Temps:          1       0       0       0       0
 10771 ;;      Totals:         9       4       0       0       0
 10772 ;;Total ram usage:       13 bytes
 10773 ;; Hardware stack levels used:    1
 10774 ;; This function calls:
 10775 ;;		Nothing
 10776 ;; This function is called by:
 10777 ;;		_isr
 10778 ;; This function uses a non-reentrant model
 10779 ;;
 10780                           psect	text35,local,class=CODE,delta=2,merge=1,group=1
 10781                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 10782                           	line	15
 10783                           global __ptext35
 10784                           __ptext35:	;psect for function ___lmul
 10785  0CC1                     psect	text35
 10786                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\Umul32.c"
 10787                           	line	15
 10788                           	global	__size_of___lmul
 10789                           	__size_of___lmul	equ	__end_of___lmul-___lmul
 10790  0050                     	
 10791                           ___lmul:	
 10792  0CC1                     ;incstack = 0
 10793                           	opt	stack 0
 10794                           ; Regs used in ___lmul: [wreg+status,2+status,0]
 10795                           	line	119
 10796                           	
 10797                           i1l4644:	
 10798  0CC1                     	movlw	high highword(0)
 10799  0CC1  3000               	bcf	status, 5	;RP0=0, select bank0
 10800  0CC2  1283               	bcf	status, 6	;RP1=0, select bank0
 10801  0CC3  1303               	movwf	(___lmul@product+3)
 10802  0CC4  00A3               	movlw	low highword(0)
 10803  0CC5  3000               	movwf	(___lmul@product+2)
 10804  0CC6  00A2               	movlw	high(0)
 10805  0CC7  3000               	movwf	(___lmul@product+1)
 10806  0CC8  00A1               	movlw	low(0)
 10807  0CC9  3000               	movwf	(___lmul@product)
 10808  0CCA  00A0               
 10809                           	goto	i1l4646
 10810  0CCB  2CCC               	line	120
 10811                           	
 10812                           i1l598:	
 10813  0CCC                     	line	121
 10814                           	
 10815                           i1l4646:	
 10816  0CCC                     	btfss	(___lmul@multiplier),(0)&7
 10817  0CCC  1C70               	goto	u417_21
 10818  0CCD  2CCF               	goto	u417_20
 10819  0CCE  2CD0               u417_21:
 10820  0CCF                     	goto	i1l4650
 10821  0CCF  2CEA               u417_20:
 10822  0CD0                     	line	122
 10823                           	
 10824                           i1l4648:	
 10825  0CD0                     	movf	(___lmul@multiplicand),w
 10826  0CD0  0874               	bcf	status, 5	;RP0=0, select bank0
 10827  0CD1  1283               	bcf	status, 6	;RP1=0, select bank0
 10828  0CD2  1303               	addwf	(___lmul@product),f
 10829  0CD3  07A0               	movf	(___lmul@multiplicand+1),w
 10830  0CD4  0875               	clrz
 10831  0CD5  1103               	skipnc
 10832  0CD6  1803               	addlw	1
 10833  0CD7  3E01               	skipnz
 10834  0CD8  1903               	goto	u418_21
 10835  0CD9  2CDB               	addwf	(___lmul@product+1),f
 10836  0CDA  07A1               u418_21:
 10837  0CDB                     	movf	(___lmul@multiplicand+2),w
 10838  0CDB  0876               	clrz
 10839  0CDC  1103               	skipnc
 10840  0CDD  1803               	addlw	1
 10841  0CDE  3E01               	skipnz
 10842  0CDF  1903               	goto	u418_22
 10843  0CE0  2CE2               	addwf	(___lmul@product+2),f
 10844  0CE1  07A2               u418_22:
 10845  0CE2                     	movf	(___lmul@multiplicand+3),w
 10846  0CE2  0877               	clrz
 10847  0CE3  1103               	skipnc
 10848  0CE4  1803               	addlw	1
 10849  0CE5  3E01               	skipnz
 10850  0CE6  1903               	goto	u418_23
 10851  0CE7  2CE9               	addwf	(___lmul@product+3),f
 10852  0CE8  07A3               u418_23:
 10853  0CE9                     
 10854                           	goto	i1l4650
 10855  0CE9  2CEA               	
 10856                           i1l599:	
 10857  0CEA                     	line	123
 10858                           	
 10859                           i1l4650:	
 10860  0CEA                     	movlw	01h
 10861  0CEA  3001               	movwf	(??___lmul+0)+0
 10862  0CEB  00F8               u419_25:
 10863  0CEC                     	clrc
 10864  0CEC  1003               	rlf	(___lmul@multiplicand),f
 10865  0CED  0DF4               	rlf	(___lmul@multiplicand+1),f
 10866  0CEE  0DF5               	rlf	(___lmul@multiplicand+2),f
 10867  0CEF  0DF6               	rlf	(___lmul@multiplicand+3),f
 10868  0CF0  0DF7               	decfsz	(??___lmul+0)+0
 10869  0CF1  0BF8               	goto	u419_25
 10870  0CF2  2CEC               	line	124
 10871                           	
 10872                           i1l4652:	
 10873  0CF3                     	movlw	01h
 10874  0CF3  3001               u420_25:
 10875  0CF4                     	clrc
 10876  0CF4  1003               	rrf	(___lmul@multiplier+3),f
 10877  0CF5  0CF3               	rrf	(___lmul@multiplier+2),f
 10878  0CF6  0CF2               	rrf	(___lmul@multiplier+1),f
 10879  0CF7  0CF1               	rrf	(___lmul@multiplier),f
 10880  0CF8  0CF0               	addlw	-1
 10881  0CF9  3EFF               	skipz
 10882  0CFA  1D03               	goto	u420_25
 10883  0CFB  2CF4               
 10884                           	line	125
 10885                           	movf	(___lmul@multiplier+3),w
 10886  0CFC  0873               	iorwf	(___lmul@multiplier+2),w
 10887  0CFD  0472               	iorwf	(___lmul@multiplier+1),w
 10888  0CFE  0471               	iorwf	(___lmul@multiplier),w
 10889  0CFF  0470               	skipz
 10890  0D00  1D03               	goto	u421_21
 10891  0D01  2D03               	goto	u421_20
 10892  0D02  2D04               u421_21:
 10893  0D03                     	goto	i1l4646
 10894  0D03  2CCC               u421_20:
 10895  0D04                     	goto	i1l4654
 10896  0D04  2D05               	
 10897                           i1l600:	
 10898  0D05                     	line	128
 10899                           	
 10900                           i1l4654:	
 10901  0D05                     	bcf	status, 5	;RP0=0, select bank0
 10902  0D05  1283               	bcf	status, 6	;RP1=0, select bank0
 10903  0D06  1303               	movf	(___lmul@product+3),w
 10904  0D07  0823               	movwf	(?___lmul+3)
 10905  0D08  00F3               	movf	(___lmul@product+2),w
 10906  0D09  0822               	movwf	(?___lmul+2)
 10907  0D0A  00F2               	movf	(___lmul@product+1),w
 10908  0D0B  0821               	movwf	(?___lmul+1)
 10909  0D0C  00F1               	movf	(___lmul@product),w
 10910  0D0D  0820               	movwf	(?___lmul)
 10911  0D0E  00F0               
 10912                           	goto	i1l601
 10913  0D0F  2D10               	
 10914                           i1l4656:	
 10915  0D10                     	line	129
 10916                           	
 10917                           i1l601:	
 10918  0D10                     	return
 10919  0D10  0008               	opt stack 0
 10920                           GLOBAL	__end_of___lmul
 10921                           	__end_of___lmul:
 10922  0D11                     	signat	___lmul,8316
 10923                           	global	___aldiv
 10924                           
 10925 ;; *************** function ___aldiv *****************
 10926 ;; Defined at:
 10927 ;;		line 5 in file "C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 10928 ;; Parameters:    Size  Location     Type
 10929 ;;  divisor         4    4[BANK0 ] long 
 10930 ;;  dividend        4    8[BANK0 ] long 
 10931 ;; Auto vars:     Size  Location     Type
 10932 ;;  quotient        4   14[BANK0 ] long 
 10933 ;;  sign            1   13[BANK0 ] unsigned char 
 10934 ;;  counter         1   12[BANK0 ] unsigned char 
 10935 ;; Return value:  Size  Location     Type
 10936 ;;                  4    4[BANK0 ] long 
 10937 ;; Registers used:
 10938 ;;		wreg, status,2, status,0
 10939 ;; Tracked objects:
 10940 ;;		On entry : 0/0
 10941 ;;		On exit  : 0/0
 10942 ;;		Unchanged: 0/0
 10943 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
 10944 ;;      Params:         0       8       0       0       0
 10945 ;;      Locals:         0       6       0       0       0
 10946 ;;      Temps:          1       0       0       0       0
 10947 ;;      Totals:         1      14       0       0       0
 10948 ;;Total ram usage:       15 bytes
 10949 ;; Hardware stack levels used:    1
 10950 ;; This function calls:
 10951 ;;		Nothing
 10952 ;; This function is called by:
 10953 ;;		_isr
 10954 ;; This function uses a non-reentrant model
 10955 ;;
 10956                           psect	text36,local,class=CODE,delta=2,merge=1,group=1
 10957                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 10958                           	line	5
 10959                           global __ptext36
 10960                           __ptext36:	;psect for function ___aldiv
 10961  0EB0                     psect	text36
 10962                           	file	"C:\Program Files (x86)\Microchip\xc8\v2.00\pic\sources\c90\common\aldiv.c"
 10963                           	line	5
 10964                           	global	__size_of___aldiv
 10965                           	__size_of___aldiv	equ	__end_of___aldiv-___aldiv
 10966  00A6                     	
 10967                           ___aldiv:	
 10968  0EB0                     ;incstack = 0
 10969                           	opt	stack 0
 10970                           ; Regs used in ___aldiv: [wreg+status,2+status,0]
 10971                           	line	13
 10972                           	
 10973                           i1l3958:	
 10974  0EB0                     	bcf	status, 5	;RP0=0, select bank0
 10975  0EB0  1283               	bcf	status, 6	;RP1=0, select bank0
 10976  0EB1  1303               	clrf	(___aldiv@sign)
 10977  0EB2  01AD               	line	14
 10978                           	
 10979                           i1l3960:	
 10980  0EB3                     	btfss	(___aldiv@divisor+3),7
 10981  0EB3  1FA7               	goto	u330_21
 10982  0EB4  2EB6               	goto	u330_20
 10983  0EB5  2EB7               u330_21:
 10984  0EB6                     	goto	i1l652
 10985  0EB6  2EC4               u330_20:
 10986  0EB7                     	line	15
 10987                           	
 10988                           i1l3962:	
 10989  0EB7                     	comf	(___aldiv@divisor),f
 10990  0EB7  09A4               	comf	(___aldiv@divisor+1),f
 10991  0EB8  09A5               	comf	(___aldiv@divisor+2),f
 10992  0EB9  09A6               	comf	(___aldiv@divisor+3),f
 10993  0EBA  09A7               	incf	(___aldiv@divisor),f
 10994  0EBB  0AA4               	skipnz
 10995  0EBC  1903               	incf	(___aldiv@divisor+1),f
 10996  0EBD  0AA5               	skipnz
 10997  0EBE  1903               	incf	(___aldiv@divisor+2),f
 10998  0EBF  0AA6               	skipnz
 10999  0EC0  1903               	incf	(___aldiv@divisor+3),f
 11000  0EC1  0AA7               	line	16
 11001                           	clrf	(___aldiv@sign)
 11002  0EC2  01AD               	incf	(___aldiv@sign),f
 11003  0EC3  0AAD               	line	17
 11004                           	
 11005                           i1l652:	
 11006  0EC4                     	line	18
 11007                           	btfss	(___aldiv@dividend+3),7
 11008  0EC4  1FAB               	goto	u331_21
 11009  0EC5  2EC7               	goto	u331_20
 11010  0EC6  2EC8               u331_21:
 11011  0EC7                     	goto	i1l3968
 11012  0EC7  2ED8               u331_20:
 11013  0EC8                     	line	19
 11014                           	
 11015                           i1l3964:	
 11016  0EC8                     	comf	(___aldiv@dividend),f
 11017  0EC8  09A8               	comf	(___aldiv@dividend+1),f
 11018  0EC9  09A9               	comf	(___aldiv@dividend+2),f
 11019  0ECA  09AA               	comf	(___aldiv@dividend+3),f
 11020  0ECB  09AB               	incf	(___aldiv@dividend),f
 11021  0ECC  0AA8               	skipnz
 11022  0ECD  1903               	incf	(___aldiv@dividend+1),f
 11023  0ECE  0AA9               	skipnz
 11024  0ECF  1903               	incf	(___aldiv@dividend+2),f
 11025  0ED0  0AAA               	skipnz
 11026  0ED1  1903               	incf	(___aldiv@dividend+3),f
 11027  0ED2  0AAB               	line	20
 11028                           	
 11029                           i1l3966:	
 11030  0ED3                     	movlw	low(01h)
 11031  0ED3  3001               	movwf	(??___aldiv+0)+0
 11032  0ED4  00F9               	movf	(??___aldiv+0)+0,w
 11033  0ED5  0879               	xorwf	(___aldiv@sign),f
 11034  0ED6  06AD               	goto	i1l3968
 11035  0ED7  2ED8               	line	21
 11036                           	
 11037                           i1l653:	
 11038  0ED8                     	line	22
 11039                           	
 11040                           i1l3968:	
 11041  0ED8                     	movlw	high highword(0)
 11042  0ED8  3000               	movwf	(___aldiv@quotient+3)
 11043  0ED9  00B1               	movlw	low highword(0)
 11044  0EDA  3000               	movwf	(___aldiv@quotient+2)
 11045  0EDB  00B0               	movlw	high(0)
 11046  0EDC  3000               	movwf	(___aldiv@quotient+1)
 11047  0EDD  00AF               	movlw	low(0)
 11048  0EDE  3000               	movwf	(___aldiv@quotient)
 11049  0EDF  00AE               
 11050                           	line	23
 11051                           	
 11052                           i1l3970:	
 11053  0EE0                     	movf	(___aldiv@divisor+3),w
 11054  0EE0  0827               	iorwf	(___aldiv@divisor+2),w
 11055  0EE1  0426               	iorwf	(___aldiv@divisor+1),w
 11056  0EE2  0425               	iorwf	(___aldiv@divisor),w
 11057  0EE3  0424               	skipnz
 11058  0EE4  1903               	goto	u332_21
 11059  0EE5  2EE7               	goto	u332_20
 11060  0EE6  2EE8               u332_21:
 11061  0EE7                     	goto	i1l3990
 11062  0EE7  2F3B               u332_20:
 11063  0EE8                     	line	24
 11064                           	
 11065                           i1l3972:	
 11066  0EE8                     	clrf	(___aldiv@counter)
 11067  0EE8  01AC               	incf	(___aldiv@counter),f
 11068  0EE9  0AAC               	line	25
 11069                           	goto	i1l3976
 11070  0EEA  2EF9               	
 11071                           i1l656:	
 11072  0EEB                     	line	26
 11073                           	
 11074                           i1l3974:	
 11075  0EEB                     	movlw	01h
 11076  0EEB  3001               	movwf	(??___aldiv+0)+0
 11077  0EEC  00F9               u333_25:
 11078  0EED                     	clrc
 11079  0EED  1003               	rlf	(___aldiv@divisor),f
 11080  0EEE  0DA4               	rlf	(___aldiv@divisor+1),f
 11081  0EEF  0DA5               	rlf	(___aldiv@divisor+2),f
 11082  0EF0  0DA6               	rlf	(___aldiv@divisor+3),f
 11083  0EF1  0DA7               	decfsz	(??___aldiv+0)+0
 11084  0EF2  0BF9               	goto	u333_25
 11085  0EF3  2EED               	line	27
 11086                           	movlw	low(01h)
 11087  0EF4  3001               	movwf	(??___aldiv+0)+0
 11088  0EF5  00F9               	movf	(??___aldiv+0)+0,w
 11089  0EF6  0879               	addwf	(___aldiv@counter),f
 11090  0EF7  07AC               	goto	i1l3976
 11091  0EF8  2EF9               	line	28
 11092                           	
 11093                           i1l655:	
 11094  0EF9                     	line	25
 11095                           	
 11096                           i1l3976:	
 11097  0EF9                     	btfss	(___aldiv@divisor+3),(31)&7
 11098  0EF9  1FA7               	goto	u334_21
 11099  0EFA  2EFC               	goto	u334_20
 11100  0EFB  2EFD               u334_21:
 11101  0EFC                     	goto	i1l3974
 11102  0EFC  2EEB               u334_20:
 11103  0EFD                     	goto	i1l3978
 11104  0EFD  2EFF               	
 11105                           i1l657:	
 11106  0EFE                     	goto	i1l3978
 11107  0EFE  2EFF               	line	29
 11108                           	
 11109                           i1l658:	
 11110  0EFF                     	line	30
 11111                           	
 11112                           i1l3978:	
 11113  0EFF                     	movlw	01h
 11114  0EFF  3001               	movwf	(??___aldiv+0)+0
 11115  0F00  00F9               u335_25:
 11116  0F01                     	clrc
 11117  0F01  1003               	rlf	(___aldiv@quotient),f
 11118  0F02  0DAE               	rlf	(___aldiv@quotient+1),f
 11119  0F03  0DAF               	rlf	(___aldiv@quotient+2),f
 11120  0F04  0DB0               	rlf	(___aldiv@quotient+3),f
 11121  0F05  0DB1               	decfsz	(??___aldiv+0)+0
 11122  0F06  0BF9               	goto	u335_25
 11123  0F07  2F01               	line	31
 11124                           	
 11125                           i1l3980:	
 11126  0F08                     	movf	(___aldiv@divisor+3),w
 11127  0F08  0827               	subwf	(___aldiv@dividend+3),w
 11128  0F09  022B               	skipz
 11129  0F0A  1D03               	goto	u336_25
 11130  0F0B  2F16               	movf	(___aldiv@divisor+2),w
 11131  0F0C  0826               	subwf	(___aldiv@dividend+2),w
 11132  0F0D  022A               	skipz
 11133  0F0E  1D03               	goto	u336_25
 11134  0F0F  2F16               	movf	(___aldiv@divisor+1),w
 11135  0F10  0825               	subwf	(___aldiv@dividend+1),w
 11136  0F11  0229               	skipz
 11137  0F12  1D03               	goto	u336_25
 11138  0F13  2F16               	movf	(___aldiv@divisor),w
 11139  0F14  0824               	subwf	(___aldiv@dividend),w
 11140  0F15  0228               u336_25:
 11141  0F16                     	skipc
 11142  0F16  1C03               	goto	u336_21
 11143  0F17  2F19               	goto	u336_20
 11144  0F18  2F1A               u336_21:
 11145  0F19                     	goto	i1l3986
 11146  0F19  2F2A               u336_20:
 11147  0F1A                     	line	32
 11148                           	
 11149                           i1l3982:	
 11150  0F1A                     	movf	(___aldiv@divisor),w
 11151  0F1A  0824               	subwf	(___aldiv@dividend),f
 11152  0F1B  02A8               	movf	(___aldiv@divisor+1),w
 11153  0F1C  0825               	skipc
 11154  0F1D  1C03               	incfsz	(___aldiv@divisor+1),w
 11155  0F1E  0F25               	subwf	(___aldiv@dividend+1),f
 11156  0F1F  02A9               	movf	(___aldiv@divisor+2),w
 11157  0F20  0826               	skipc
 11158  0F21  1C03               	incfsz	(___aldiv@divisor+2),w
 11159  0F22  0F26               	subwf	(___aldiv@dividend+2),f
 11160  0F23  02AA               	movf	(___aldiv@divisor+3),w
 11161  0F24  0827               	skipc
 11162  0F25  1C03               	incfsz	(___aldiv@divisor+3),w
 11163  0F26  0F27               	subwf	(___aldiv@dividend+3),f
 11164  0F27  02AB               	line	33
 11165                           	
 11166                           i1l3984:	
 11167  0F28                     	bsf	(___aldiv@quotient)+(0/8),(0)&7
 11168  0F28  142E               	goto	i1l3986
 11169  0F29  2F2A               	line	34
 11170                           	
 11171                           i1l659:	
 11172  0F2A                     	line	35
 11173                           	
 11174                           i1l3986:	
 11175  0F2A                     	movlw	01h
 11176  0F2A  3001               u337_25:
 11177  0F2B                     	clrc
 11178  0F2B  1003               	rrf	(___aldiv@divisor+3),f
 11179  0F2C  0CA7               	rrf	(___aldiv@divisor+2),f
 11180  0F2D  0CA6               	rrf	(___aldiv@divisor+1),f
 11181  0F2E  0CA5               	rrf	(___aldiv@divisor),f
 11182  0F2F  0CA4               	addlw	-1
 11183  0F30  3EFF               	skipz
 11184  0F31  1D03               	goto	u337_25
 11185  0F32  2F2B               
 11186                           	line	36
 11187                           	
 11188                           i1l3988:	
 11189  0F33                     	movlw	01h
 11190  0F33  3001               	subwf	(___aldiv@counter),f
 11191  0F34  02AC               	btfss	status,2
 11192  0F35  1D03               	goto	u338_21
 11193  0F36  2F38               	goto	u338_20
 11194  0F37  2F39               u338_21:
 11195  0F38                     	goto	i1l3978
 11196  0F38  2EFF               u338_20:
 11197  0F39                     	goto	i1l3990
 11198  0F39  2F3B               	
 11199                           i1l660:	
 11200  0F3A                     	goto	i1l3990
 11201  0F3A  2F3B               	line	37
 11202                           	
 11203                           i1l654:	
 11204  0F3B                     	line	38
 11205                           	
 11206                           i1l3990:	
 11207  0F3B                     	movf	((___aldiv@sign)),w
 11208  0F3B  082D               	btfsc	status,2
 11209  0F3C  1903               	goto	u339_21
 11210  0F3D  2F3F               	goto	u339_20
 11211  0F3E  2F40               u339_21:
 11212  0F3F                     	goto	i1l3994
 11213  0F3F  2F4C               u339_20:
 11214  0F40                     	line	39
 11215                           	
 11216                           i1l3992:	
 11217  0F40                     	comf	(___aldiv@quotient),f
 11218  0F40  09AE               	comf	(___aldiv@quotient+1),f
 11219  0F41  09AF               	comf	(___aldiv@quotient+2),f
 11220  0F42  09B0               	comf	(___aldiv@quotient+3),f
 11221  0F43  09B1               	incf	(___aldiv@quotient),f
 11222  0F44  0AAE               	skipnz
 11223  0F45  1903               	incf	(___aldiv@quotient+1),f
 11224  0F46  0AAF               	skipnz
 11225  0F47  1903               	incf	(___aldiv@quotient+2),f
 11226  0F48  0AB0               	skipnz
 11227  0F49  1903               	incf	(___aldiv@quotient+3),f
 11228  0F4A  0AB1               	goto	i1l3994
 11229  0F4B  2F4C               	
 11230                           i1l661:	
 11231  0F4C                     	line	40
 11232                           	
 11233                           i1l3994:	
 11234  0F4C                     	movf	(___aldiv@quotient+3),w
 11235  0F4C  0831               	movwf	(?___aldiv+3)
 11236  0F4D  00A7               	movf	(___aldiv@quotient+2),w
 11237  0F4E  0830               	movwf	(?___aldiv+2)
 11238  0F4F  00A6               	movf	(___aldiv@quotient+1),w
 11239  0F50  082F               	movwf	(?___aldiv+1)
 11240  0F51  00A5               	movf	(___aldiv@quotient),w
 11241  0F52  082E               	movwf	(?___aldiv)
 11242  0F53  00A4               
 11243                           	goto	i1l662
 11244  0F54  2F55               	
 11245                           i1l3996:	
 11246  0F55                     	line	41
 11247                           	
 11248                           i1l662:	
 11249  0F55                     	return
 11250  0F55  0008               	opt stack 0
 11251                           GLOBAL	__end_of___aldiv
 11252                           	__end_of___aldiv:
 11253  0F56                     	signat	___aldiv,8316
 11254                           global	___latbits
 11255                           ___latbits	equ	2
 11256  0002                     	global	btemp
 11257                           	btemp set 07Eh
 11258  007E                     
 11259                           	DABS	1,126,2	;btemp
 11260                           	global	wtemp0
 11261                           	wtemp0 set btemp+0
 11262  007E                     	end


Data Sizes:
    Strings     100
    Constant    2
    Data        128
    BSS         24
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14     10      14
    BANK0            80     33      54
    BANK1            80     47      76
    BANK3            96     35      78
    BANK2            96      0      55

Pointer List with Targets:

    sp__rfid_display_wait	PTR void  size(1) Largest target is 2
		 -> rfid_display_wait(), rfid_read(), 

    sp__rfid_display	PTR void  size(1) Largest target is 2
		 -> rfid_display(), rfid_read(), 

    sp__rfid_read_wait	PTR void  size(1) Largest target is 2
		 -> rfid_read_wait(), rfid_display(), 

    sp__rfid_read	PTR void  size(1) Largest target is 2
		 -> rfid_display(), rfid_read(), 

    hex2Ascii@strOut	PTR unsigned char  size(1) Largest target is 13
		 -> uidAsci(BANK3[13]), main@uidAsci(BANK3[13]), 

    hex2Ascii@strIn	PTR unsigned char  size(2) Largest target is 7
		 -> UID(BANK1[7]), main@UID(BANK3[7]), 

    MFRC522_AntiColl@serNum	PTR unsigned char  size(2) Largest target is 7
		 -> UID(BANK1[7]), main@UID(BANK3[7]), 

    tag_false@p2	PTR unsigned char  size(1) Largest target is 6
		 -> main@senha(BANK3[6]), 

    tag_false@p1	PTR unsigned char  size(1) Largest target is 7
		 -> main@UID(BANK3[7]), 

    MFRC522_ToCard@backData	PTR unsigned char  size(2) Largest target is 7
		 -> UID(BANK1[7]), main@UID(BANK3[7]), 

    MFRC522_ToCard@backLen	PTR unsigned char  size(1) Largest target is 1
		 -> MFRC522_AntiColl@unLen(BANK1[1]), 

    MFRC522_ToCard@sendData	PTR unsigned char  size(2) Largest target is 7
		 -> UID(BANK1[7]), main@UID(BANK3[7]), 

    procura_tag@data	PTR unsigned char  size(2) Largest target is 5
		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 

    tagTxCmd@result	PTR unsigned char  size(2) Largest target is 5
		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 

    tagTxCmd@rlen	PTR unsigned char  size(1) Largest target is 1
		 -> procura_tag@len(BANK1[1]), 

    tagTxCmd@data	PTR unsigned char  size(2) Largest target is 5
		 -> TAG(BANK0[5]), main@TAG(BANK3[5]), 

    lcd_print@str	PTR const unsigned char  size(2) Largest target is 16
		 -> uidAsci(BANK3[13]), STR_15(CODE[2]), STR_14(CODE[2]), STR_13(CODE[6]), 
		 -> STR_12(CODE[9]), STR_11(CODE[8]), STR_10(CODE[7]), STR_9(CODE[7]), 
		 -> STR_8(CODE[16]), STR_7(CODE[9]), STR_6(CODE[7]), STR_5(CODE[6]), 
		 -> STR_4(CODE[7]), STR_3(CODE[10]), STR_2(CODE[7]), STR_1(CODE[11]), 
		 -> main@uidAsci(BANK3[13]), 


Critical Paths under _main in COMMON

    None.

Critical Paths under _isr in COMMON

    _isr->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK0

    None.

Critical Paths under _isr in BANK0

    _isr->___aldiv
    ___aldiv->___lmul

Critical Paths under _main in BANK1

    _main->_MFRC522_AntiColl
    _prs_detect->_delay_ms
    _procura_tag->_tagTxCmd
    _tagTxCmd->_mfrc522ClrBit
    _tagTxCmd->_mfrc522SetBit
    _mfrc522ClrBit->_spiSoftTxCmd
    _mfrc522Iniciar->_mfrc522AntOn
    _mfrc522Rst->_spiSoftTxCmd
    _mfrc522AntOn->_mfrc522SetBit
    _mfrc522SetBit->_spiSoftTxCmd
    _lcd_print->_lcd_lincol
    _lcd_lincol->_lcd_inst
    _lcd_init->_lcd_inst
    _lcd_clr->_lcd_inst
    _MFRC522_AntiColl->_MFRC522_ToCard
    _MFRC522_ToCard->_MFRC522_Clear_Bit
    _MFRC522_Set_Bit->_MFRC522_Wr
    _MFRC522_Clear_Bit->_MFRC522_Wr
    _MFRC522_Wr->_MFRC522_Rd
    _MFRC522_Rd->_spiSoftTxDat

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                39    39      0   36503
                                             43 BANK1      4     4      0
                                              0 BANK3     35    35      0
                   _MFRC522_AntiColl
                           _delay_ms
                          _hex2Ascii
                            _lcd_clr
                           _lcd_init
                          _lcd_print
                     _mfrc522Iniciar
                        _procura_tag
                         _prs_detect
                       _sensors_init
                     _spiSoftIniciar
               _spi_hardware_disable
                          _tag_false
                      _tmr_tick_init
                        _uts_trigger
 ---------------------------------------------------------------------------------
 (1) _uts_trigger                                          1     1      0       0
                                              0 BANK1      1     1      0
 ---------------------------------------------------------------------------------
 (1) _tmr_tick_init                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _tag_false                                            7     6      1     355
                                              0 BANK1      7     6      1
 ---------------------------------------------------------------------------------
 (1) _spi_hardware_disable                                 0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _spiSoftIniciar                                       2     2      0       0
                                              0 BANK1      2     2      0
 ---------------------------------------------------------------------------------
 (1) _sensors_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _prs_detect                                           0     0      0     574
                           _delay_ms
 ---------------------------------------------------------------------------------
 (2) _delay_ms                                             4     2      2     574
                                              0 BANK1      4     2      2
 ---------------------------------------------------------------------------------
 (1) _procura_tag                                          7     5      2   13018
                                             27 BANK1      7     5      2
                       _spiSoftTxCmd
                       _spiSoftTxDat
                           _tagTxCmd
 ---------------------------------------------------------------------------------
 (2) _tagTxCmd                                            17    11      6   10145
                                             10 BANK1     17    11      6
                      _mfrc522ClrBit
                      _mfrc522SetBit
                       _spiSoftRxDat
                       _spiSoftTxCmd
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (3) _mfrc522ClrBit                                        4     3      1    2800
                                              6 BANK1      4     3      1
                       _spiSoftRxDat
                       _spiSoftTxCmd
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (1) _mfrc522Iniciar                                       0     0      0    7536
                       _mfrc522AntOn
                         _mfrc522Rst
                       _spiSoftTxCmd
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (2) _mfrc522Rst                                           0     0      0    2323
                       _spiSoftTxCmd
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (2) _mfrc522AntOn                                         1     1      0    2890
                                             10 BANK1      1     1      0
                      _mfrc522SetBit
 ---------------------------------------------------------------------------------
 (3) _mfrc522SetBit                                        4     3      1    2890
                                              6 BANK1      4     3      1
                       _spiSoftRxDat
                       _spiSoftTxCmd
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (3) _spiSoftTxCmd                                         6     5      1    2156
                                              0 BANK1      6     5      1
                         _spiSoftClk
 ---------------------------------------------------------------------------------
 (1) _lcd_print                                            6     3      3    3776
                                              6 BANK1      6     3      3
                           _lcd_data
                         _lcd_lincol
 ---------------------------------------------------------------------------------
 (2) _lcd_lincol                                           3     2      1     490
                                              3 BANK1      3     2      1
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (2) _lcd_data                                             3     3      0      62
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             3     3      0     248
                                              3 BANK1      3     3      0
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (1) _lcd_clr                                              0     0      0     248
                           _lcd_inst
 ---------------------------------------------------------------------------------
 (3) _lcd_inst                                             3     3      0     248
                                              0 BANK1      3     3      0
 ---------------------------------------------------------------------------------
 (1) _hex2Ascii                                           12     8      4    1362
                                              0 BANK1     12     8      4
 ---------------------------------------------------------------------------------
 (1) _MFRC522_AntiColl                                    11     9      2    8098
                                             32 BANK1     11     9      2
                  _MFRC522_Clear_Bit
                     _MFRC522_ToCard
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_ToCard                                      17    11      6    5407
                                             15 BANK1     17    11      6
                  _MFRC522_Clear_Bit
                         _MFRC522_Rd
                    _MFRC522_Set_Bit
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Set_Bit                                      3     2      1    1230
                                             11 BANK1      3     2      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (3) _MFRC522_Clear_Bit                                    4     3      1    1320
                                             11 BANK1      4     3      1
                         _MFRC522_Rd
                         _MFRC522_Wr
 ---------------------------------------------------------------------------------
 (2) _MFRC522_Wr                                           3     2      1     679
                                              8 BANK1      3     2      1
                         _MFRC522_Rd (ARG)
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (4) _MFRC522_Rd                                           3     3      0     368
                                              5 BANK1      3     3      0
                       _spiSoftRxDat
                       _spiSoftTxDat
 ---------------------------------------------------------------------------------
 (3) _spiSoftTxDat                                         5     5      0     167
                                              0 BANK1      5     5      0
                         _spiSoftClk
 ---------------------------------------------------------------------------------
 (3) _spiSoftRxDat                                         4     4      0     136
                                              0 BANK1      4     4      0
                         _spiSoftClk
 ---------------------------------------------------------------------------------
 (4) _spiSoftClk                                           0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (7) _isr                                                 15    15      0    1207
                                             18 BANK0     15    15      0
                            ___aldiv
                             ___lmul
                       _tmr_tick_int
 ---------------------------------------------------------------------------------
 (8) _tmr_tick_int                                         4     4      0      90
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 (8) ___lmul                                              13     5      8      36
                                              0 COMMON     9     1      8
                                              0 BANK0      4     4      0
 ---------------------------------------------------------------------------------
 (8) ___aldiv                                             15     7      8     985
                                              9 COMMON     1     1      0
                                              4 BANK0     14     6      8
                             ___lmul (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _MFRC522_AntiColl
     _MFRC522_Clear_Bit
       _MFRC522_Rd
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
       _MFRC522_Wr
         _MFRC522_Rd (ARG)
           _spiSoftRxDat
             _spiSoftClk
           _spiSoftTxDat
             _spiSoftClk
         _spiSoftTxDat (ARG)
           _spiSoftClk
     _MFRC522_ToCard
       _MFRC522_Clear_Bit
         _MFRC522_Rd
           _spiSoftRxDat
             _spiSoftClk
           _spiSoftTxDat
             _spiSoftClk
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _spiSoftRxDat
               _spiSoftClk
             _spiSoftTxDat
               _spiSoftClk
           _spiSoftTxDat (ARG)
             _spiSoftClk
       _MFRC522_Rd
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
       _MFRC522_Set_Bit
         _MFRC522_Rd
           _spiSoftRxDat
             _spiSoftClk
           _spiSoftTxDat
             _spiSoftClk
         _MFRC522_Wr
           _MFRC522_Rd (ARG)
             _spiSoftRxDat
               _spiSoftClk
             _spiSoftTxDat
               _spiSoftClk
           _spiSoftTxDat (ARG)
             _spiSoftClk
       _MFRC522_Wr
         _MFRC522_Rd (ARG)
           _spiSoftRxDat
             _spiSoftClk
           _spiSoftTxDat
             _spiSoftClk
         _spiSoftTxDat (ARG)
           _spiSoftClk
     _MFRC522_Wr
       _MFRC522_Rd (ARG)
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
       _spiSoftTxDat (ARG)
         _spiSoftClk
   _delay_ms
   _hex2Ascii
   _lcd_clr
     _lcd_inst
   _lcd_init
     _lcd_inst
   _lcd_print
     _lcd_data
     _lcd_lincol
       _lcd_inst
   _mfrc522Iniciar
     _mfrc522AntOn
       _mfrc522SetBit
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxCmd
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
     _mfrc522Rst
       _spiSoftTxCmd
         _spiSoftClk
       _spiSoftTxDat
         _spiSoftClk
     _spiSoftTxCmd
       _spiSoftClk
     _spiSoftTxDat
       _spiSoftClk
   _procura_tag
     _spiSoftTxCmd
       _spiSoftClk
     _spiSoftTxDat
       _spiSoftClk
     _tagTxCmd
       _mfrc522ClrBit
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxCmd
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
       _mfrc522SetBit
         _spiSoftRxDat
           _spiSoftClk
         _spiSoftTxCmd
           _spiSoftClk
         _spiSoftTxDat
           _spiSoftClk
       _spiSoftRxDat
         _spiSoftClk
       _spiSoftTxCmd
         _spiSoftClk
       _spiSoftTxDat
         _spiSoftClk
   _prs_detect
     _delay_ms
   _sensors_init
   _spiSoftIniciar
   _spi_hardware_disable
   _tag_false
   _tmr_tick_init
   _uts_trigger

 _isr (ROOT)
   ___aldiv
     ___lmul (ARG)
   ___lmul
   _tmr_tick_int

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60     23      4E       9       81.3%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0      37      11       57.3%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50     2F      4C       7       95.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50     21      36       5       67.5%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      A       E       1      100.0%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0     115      12        0.0%
ABS                  0      0     115       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.00 build -1524193055 
Symbol Table                                                                                   Wed Nov 09 08:47:02 2022

               ?_mfrc522ClrBit 00A6                              _b 007D                              _c 007B  
                            pc 0002                 ?_mfrc522SetBit 00A6                    __CFG_CP$OFF 0000  
                           l60 0165                             l61 0168                             l70 02BE  
                           l62 0169                             l71 02BF                             l63 01C1  
                           l55 00DF                             l56 0334                             l72 02E0  
                           l64 01CA                             l81 09A1                             l73 0301  
                           l65 01CB                             l57 00E0                             l82 098D  
                           l74 035E                             l58 035D                             l66 0216  
                           l83 09AA                             l75 035F                             l67 0250  
                           l59 0115                             l84 09AA                             l76 035F  
                           l68 0272                             l69 027B                             l95 0F8D  
                           l97 0F82                             l98 0F95                             l99 0FC9  
                           fsr 0004                ?_mfrc522Iniciar 0070  __size_of_spi_hardware_disable 000E  
                          l100 0FF4                            l102 0FE9                            l110 08C3  
                          l103 0FFC                            l104 0FFF                            l120 0C39  
                          l113 07FA                            l121 0C71                            l122 0C71  
                          l107 0BDC                            l116 17E0                            l302 17FF  
                          l119 0C5A                            l311 0380                            l400 0DC7  
                          l320 0429                            l312 036C                            l232 0A06  
                          l401 0DD8                            l305 089B                            l313 0390  
                          l233 0A22                            l402 0DE3                            l330 0502  
                          l322 045B                            l314 0375                            l234 0A21  
                          l403 0DF4                            l331 050D                            l323 045C  
                          l315 037E                            l235 0A28                            l404 0E14  
                          l308 0D87                            l332 0537                            l324 0552  
                          l316 03F6                            l405 0E14                            l325 054D  
                          l333 050F                            l317 03D1                            l341 0C20  
                          l229 0950                            l334 053E                            l326 0499  
                          l318 03FD                            l342 0C26                            l238 08ED  
                          l351 091B                            l335 0552                            l327 054C  
                          l319 0422                            l431 0888                            l183 08D8  
                          l360 0568                            l440 0CC0                            l336 0554  
                          l328 04E9                            l345 096D                            l361 0571  
                          l441 0CA2                            l329 04FA                            l450 0B27  
                          l354 0903                            l370 06C1                            l362 05A5  
                          l442 0CA6                            l434 098B                            l371 06BA  
                          l363 0586                            l443 0CC0                            l339 0C25  
                          l428 17F2                            l348 09CE                            l380 06AB  
                          l372 0624                            l364 05B3                            l453 0AC9  
                          l381 06C1                            l373 06B9                            l365 05D0  
                          l357 0573                            l437 0C8B                            l454 0AEE  
                          l446 0B01                            l382 06C3                            l374 0658  
                          l366 05D7                            l358 055F                            l438 0C91  
                          l455 0ADC                            l447 0B27                            l375 0669  
                          l359 0583                            l391 0EAD                            l439 0C9A  
                          l456 0AF0                            l448 0B09                            l376 0671  
                          l368 05F9                            l392 0E75                            l296 0ABD  
                          l449 0B0D                            l377 067C                            l369 05FA  
                          l393 0E90                            l385 0A36                            l378 069D  
                          l394 0EAD                            l386 0A57                            l379 067F  
                          l395 0EAF                            l299 0A8B                            l387 0A4C  
                          l388 0A59                            l398 0E0D                            l399 0D8C  
                          _TAG 0051                   __CFG_CPD$OFF 0000                            _UID 00E1  
                          _isr 06C4                            _ret 0050                            _uid 004F  
                          fsr0 0004                            indf 0000               ??_spiSoftIniciar 00A0  
                 __CFG_FOSC$HS 0000                 _rfid_read_wait 0000                   _tmr_tick_int 0B5F  
                 __CFG_LVP$OFF 0000                           l3300 0B05                           l3302 0B0D  
                         l3310 0C75                           l3304 0B15                           l3320 0C99  
                         l3312 0C78                           l3400 0ABA                           l3306 0B1A  
                         l3330 0CB9                           l3322 0C9E                           l3314 0C85  
                         l3410 0A80                           l3402 0A5D                           l3308 0B20  
                         l3340 09B1                           l3332 0954                           l3324 0CA6  
                         l3316 0C8B                           l3412 0A88                           l3404 0A6F  
                         l3420 098D                           _C2ON 0847                           l3270 0ABE  
                         l3342 09C7                           l3334 0957                           l3414 0907  
                         l3350 0F5C                           l3430 0BB7                           l3326 0CAE  
                         l3318 0C91                           l3406 0A72                           l3422 09A1  
                         l3280 0AD5                           l3272 0AC1                           l3344 09CA  
                         l3336 096A                           l3416 08F1                           l3360 0F95  
                         l3352 0F73                           l3440 0BD9                           l3432 0BBE  
                         l3424 0B9C                           l3328 0CB3                           l3408 0A79  
                         l4400 0429                           l3290 0AF0                           l3282 0ADC  
                         l3274 0AC8                           l3346 09CE                           l3338 09AE  
                         l3370 0FBE                           l3362 0F98                           l3354 0F7B  
                         l3434 0BC1                           l3426 0B9F                           l3442 08B2  
                         l4410 0454                           l4402 0444                           l3418 098C  
                         l3268 17E9                           l3284 0AE1                           l3276 0AC9  
                         l3292 0AF4                           l4500 05BD                           l3380 0FDB  
                         l3372 0FC5                           l3364 0FA3                           l3356 0F82  
                         l3348 0F59                           l3700 07D4                           l3436 0BC2  
                         l3428 0BB6                           l3444 17F3                           l4420 0482  
                         l4412 045C                           l4404 0447                           l3286 0AE7  
                         l3278 0ACF                           l3294 0AF8                           l4510 05EE  
                         l4502 05C5                           l3382 0FE2                           l3366 0FA6  
                         l3374 0FC9                           l3358 0F8D                           l3702 07DA  
                         l3438 0BD1                           l3446 0889                           l3390 0A8F  
                         l4430 0499                           l4422 0489                           l4414 0466  
                         l4406 044B                           l3710 0939                           l3288 0AEE  
                         l3296 0AF9                           l4520 0617                           l4512 05F2  
                         l4504 05D0                           l4600 0E85                           l3384 0FE9  
                         l3376 0FCB                           l3368 0FBD                           l3704 07E0  
                         l3448 0898                           l3392 0AA1                           l4440 04D2  
                         l4432 049F                           l4424 048E                           l4416 046D  
                         l4408 0450                           l4360 0369                           l3720 0942  
                         l3712 093C                           l3298 0B00                           l4530 0641  
                         l4522 061A                           l4514 05FA                           l4506 05D7  
                         l4602 0E89                           l4610 0D88                           l3386 0FF4  
                         l3378 0FDA                           l3706 07E6                           l3394 0AA4  
                         l4450 0502                           l4442 04D7                           l4434 04B1  
                         l4426 048F                           l4418 047F                           l4370 0380  
                         l4362 036A                           l3730 094C                           l3722 0945  
                         l3714 093D                           l4540 0671                           l4532 0646  
                         l4524 0621                           l4516 0604                           l4508 05E8  
                         l4604 0E90                           l4620 0DC2                           l4612 0D8C  
                         l3388 0FFC                           l3396 0AAB                           l4460 052D  
                         l4452 0508                           l4444 04E9                           l4436 04C8  
                         l4428 0496                           l4380 03D1                           l4372 0390  
                         l4364 036C                           l3732 094D                           l3724 0946  
                         l3716 0940                           l3708 0935                           l3660 0885  
                         l3740 08CA                           l4700 0156                           l4550 069D  
                         l4542 0677                           l4534 0658                           l4526 0624  
                         l4518 060C                           l4606 0EA8                           l4630 0DDE  
                         l4622 0DC7                           l4614 0D92                           l3670 0D37  
                         l3398 0AB2                           l4470 0554                           l4462 0530  
                         l4454 050D                           l4446 04FA                           l4438 04CB  
                         l4390 03FD                           l4382 03D8                           l4374 03A0  
                         l4366 0375                           l4358 0365                           l3734 094E  
                         l3726 0948                           l3718 0941                           l3662 096E  
                         l3654 087B                           l3750 08D4                           l3742 08CC  
                         l4710 017B                           l4702 015B                           l4552 06AB  
                         l4544 067C                           l4536 0669                           l4528 062A  
                         l4480 055D                           l4608 0EAF                           l4640 0DFE  
                         l4632 0DE3                           l4624 0DCD                           l4616 0DA3  
                         l3680 07AB                           l3760 0C4F                           l3672 0D49  
                         l4456 050F                           l4464 0537                           l4448 04FF  
                         l4392 040C                           l4384 03EC                           l4376 03CA  
                         l4368 037F                           l3736 094F                           l3728 0949  
                         l3664 0979                           l3656 087E                           l3752 08D5  
                         l3744 08CE                           l4720 01C1                           l4712 018E  
                         l4704 0164                           l4546 067F                           l4538 066E  
                         l4554 06BA                           l4490 0583                           l4482 055F  
                         l4634 0DE9                           l4626 0DD3                           l4618 0DBC  
                         l4642 0E0D                           l3690 07BF                           l3682 07B9  
                         l3762 0C55                           l3754 0C2A                           l3674 0D5B  
                         l3666 0D11                           l4466 053E                           l4458 0517  
                         l4394 040F                           l4386 03EF                           l4378 03CD  
                         l4570 0C14                           l4562 0BE0                           l3658 0882  
                         l3850 0A2C                           l3746 08D0                           l3738 08C4  
                         l4730 020D                           l4722 01CB                           l4714 019B  
                         l4706 0169                           l4556 06C3                           l4548 0696  
                         l4492 0586                           l4484 0568                           l4476 0558  
                         l4580 0E18                           l4636 0DEF                           l4628 0DD8  
                         l3692 07C0                           l3684 07BC                           l3764 0C5A  
                         l3756 0C2E                           l3676 0D6D                           l3668 0D25  
                         l4468 054D                           l4396 0417                           l4388 03F6  
                         l4572 0C19                           l4564 0BED                           l3860 0A4C  
                         l3852 0A2E                           l3748 08D1                           l4740 0250  
                         l4732 0216                           l4724 01D0                           l4716 01B7  
                         l4708 016E                           l4660 0065                           l4494 059C  
                         l4486 0572                           l4478 055C                           l4590 0E67  
                         l4582 0E1F                           l4638 0DF4                           l3766 17DA  
                         l3694 07C1                           l3686 07BD                           l3758 0C39  
                         l3678 0D7F                           l4398 0422                           l4574 0C20  
                         l4566 0BF0                           l3862 0A50                           l3854 0A35  
                         l3870 08DC                           l4750 027B                           l4742 0255  
                         l4734 021B                           l4726 01E0                           l4718 01C0  
                         l4670 00A4                           l4662 0066                           l4496 05A5  
                         l4488 0573                           l4592 0E6C                           l4584 0E2A  
                         l3696 07C2                           l3688 07BE                           l4576 0C26  
                         l4568 0BFB                           l3880 0A06                           l3864 0A57  
                         l3856 0A36                           l3872 08E3                           l4760 02C7  
                         l4752 0290                           l4744 025F                           l4736 022B  
                         l4728 0200                           l4680 00BD                           l4672 00B7  
                         l4664 0067                           l4498 05B3                           l4594 0E6D  
                         l4586 0E40                           l4578 0E15                           l3698 07D1  
                         l3890 0A26                           l3882 0A0C                           l3874 09FA  
                         l3866 0A59                           l3858 0A49                           l4770 02F8  
                         l4762 02D7                           l4754 02B7                           l4746 0269  
                         l4738 024B                           l4690 010F                           l4682 00DB  
                         l4674 00B8                           l4666 007F                           l4658 005F  
                         l4596 0E74                           l4588 0E4A                           l3892 0A28  
                         l3884 0A17                           l3876 0A00                           l3868 08D9  
                         l4924 0340                           l4780 0329                           l4772 0301  
                         l4764 02E0                           l4756 02BF                           l4748 0272  
                         l4692 0115                           l4684 00E0                           l4676 00B9  
                         l4668 008F                           l4598 0E75                           l4926 0388  
                         l3886 0A1F                           l3878 0A04                           l4782 032E  
                         l4774 0306                           l4766 02E5                           l4758 02C4  
                         l4694 0135                           l4686 0100                           l4678 00BC  
                         l4928 057B                           l3888 0A22                           l4784 0333  
                         l4776 030E                           l4768 02E8                           l4696 0138  
                         l4688 010B                           l4778 031E                           l4698 0144  
                         l4786 0334                           ?_isr 0070                           STR_1 0822  
                         STR_2 085F                           STR_3 082D                           STR_4 0858  
                         STR_5 0866                           STR_6 0858                           STR_7 0840  
                         STR_8 0812                           STR_9 0858                           u3100 0A49  
                         u3101 0A48                           u3110 0A56                           u3111 0A55  
                         u4000 066E                           u3120 0A00                           u4001 066D  
                         u3121 09FF                           u4010 0677                           u3130 0A1F  
                         u4011 0676                           u3131 0A1E                           u4020 06AA  
                         u4100 0DC2                           u2500 0C85                           u4021 06A9  
                         u4101 0DC1                           u2501 0C84                           u4110 0DCD  
                         u2510 0C98                           u4030 0C19                           u4111 0DCC  
                         u2511 0C97                           u4031 0C18                           u2440 0AC7  
                         u4120 0DD3                           u2600 0FE8                           u2520 0C9E  
                         u4040 0C1F                           u2441 0AC6                           u4025 06A6  
                         u4121 0DD2                           u2601 0FE7                           u2521 0C9D  
                         u4041 0C1E                           u2450 0AD5                           u4050 0E6C  
                         u4130 0DDE                           u2530 0CBF                           u2610 09A9  
                         u3090 0A34                           u2451 0AD4                           u4051 0E6B  
                         u4131 0DDD                           u2531 0CBE                           u2611 09A8  
                         u3091 0A33                           u2460 0AED                           u4060 0E73  
                         u4140 0DE9                           u4220 0071                           u2461 0AEC  
                         u4061 0E72                           u4141 0DE8                           u2470 0AFF  
                         u4070 0E8F                           u4150 0DEF                           u2550 0F7B  
                         u4230 0097                           u2471 0AFE                           u4071 0E8E  
                         u4151 0DEE                           u2551 0F7A                           u2480 0B05  
                         u4080 0EA8                           u4160 0E13                           u2560 0F81  
                         u4240 015B                           u2481 0B04                           u4081 0EA7  
                         u4161 0E12                           u2561 0F80                           u2545 0F61  
                         u2625 0BA4                           u4241 015A                           u2490 0B26  
                         u2570 0FA3                           u4250 01B7                           u2491 0B25  
                         u2571 0FA2                           u2635 08B5                           u4251 01B6  
                         u4260 0269                           u4261 0268                           u2590 0FE2  
                         u4270 0290                           u4095 0DB2                           u2591 0FE1  
                         u4407 0993                           u4271 028F                           u3800 0496  
                         u4280 02B7                           u2585 0FAB                           u3801 0495  
                         u4417 042D                           u4281 02B6                           u4273 028C  
                         u3810 049F                           u3730 03FC                           u4507 0FEF  
                         u4427 0BBB                           u3811 049E                           u3731 03FB  
                         u4283 02B3                           u3900 05EE                           u2940 0C70  
                         u3820 04D7                           u3740 0417                           u3901 05ED  
                         u4517 0FF8                           u4437 0BD6                           u2941 0C6F  
                         u3821 04D6                           u3741 0416                           u3910 05F2  
                         u3750 0450                           u3911 05F1                           u4447 07B3  
                         u3751 044F                           u4367 08E0                           u3920 05F8  
                         u3760 0454                           u3921 05F7                           u4457 07CB  
                         u3761 0453                           u4377 08EA                           u3930 060C  
                         u3850 04FF                           u3770 045A                           u3931 060B  
                         u4467 07F4                           u3851 04FE                           u3835 04DA  
                         u3771 0459                           u4387 097D                           u3940 0617  
                         u3860 0508                           u3780 046D                           u3941 0616  
                         u4477 0F88                           u3861 0507                           u3845 04EC  
                         u3781 046C                           u4397 0986                           u3950 0621  
                         u3870 053D                           u3790 048E                           u3951 0620  
                         u4487 0F91                           u3871 053C                           u3791 048D  
                         u3960 062A                           u3880 05B2                           u3961 0629  
                         u3881 05B1                           u4497 0FC2                           u3970 0646  
                         u3890 05C5                           u3971 0645                           u3891 05C4  
                         u3885 05AE                           u3985 0649                           u3995 065B  
                 __CFG_WRT$OFF 0000                    main@uidAsci 01C1                           _f_mp 007A  
                         _find 007C                           _dist 00E8                           _main 005F  
        MFRC522_AntiColl@unLen 00C8                           _time 0049                           btemp 007E  
                         start 0010                  __CFG_IESO$OFF 0000               _MFRC522_AntiColl 0E15  
               ??_mfrc522AntOn 00AA              _rfid_display_wait 0000                 MFRC522_Rd@addr 00A6  
                _tmr_tick_init 08C4                          ??_isr 0032           mfrc522ClrBit@mascara 00A6  
               MFRC522_Wr@addr 00AA                __end_of___aldiv 0F56                          ?_main 0070  
                        _EEADR 010D                          STR_10 0851                          STR_11 0849  
                        STR_12 0837                          STR_13 086C                          STR_14 0872  
                        STR_15 0874                  __CFG_WDTE$OFF 0000                          _ANSEL 0188  
                        i1l162 0794                          i1l163 06DC                          i1l164 0792  
                        i1l165 07A0                          i1l166 07A0                          i1l600 0D05  
                        i1l601 0D10                          i1l186 0B6E                          i1l187 0B98  
                        i1l188 0B8D                          i1l189 0B98                          i1l660 0F3A  
                        i1l652 0EC4                          i1l661 0F4C                          i1l653 0ED8  
                        i1l662 0F55                          i1l654 0F3B                          i1l655 0EF9  
                        i1l656 0EEB                          i1l657 0EFE                          i1l658 0EFF  
                        i1l659 0F2A                          i1l598 0CCC                          i1l599 0CEA  
                        _TMR1H 000F                          _TMR1L 000E                          _PORTD 0008  
                        _SSPIE 0463                          _SSPEN 00A5            ___lmul@multiplicand 0074  
          __size_of_MFRC522_Rd 0024                   lcd_print@col 00A6            __size_of_MFRC522_Wr 001D  
                 lcd_print@lin 00AB                 __CFG_FCMEN$OFF 0000                   lcd_print@pos 00AA  
                 lcd_print@str 00A7                __end_of_lcd_clr 17E1                    _uts_trigger 08D9  
                        _timer 0041         MFRC522_AntiColl@serNum 00C0                 __CFG_BOREN$OFF 0000  
                        pclath 000A              _MFRC522_Clear_Bit 0904                          status 0003  
                        wtemp0 007E             ?_MFRC522_Clear_Bit 00AB                  lcd_lincol@col 00A3  
                lcd_lincol@lin 00A5                ??_mfrc522ClrBit 00A7                 __CFG_MCLRE$OFF 0000  
              __initialization 0013                 ?_tmr_tick_init 0070                ??_mfrc522SetBit 00A7  
                 __end_of_main 0362            ??_MFRC522_Clear_Bit 00AC                MFRC522_Rd@value 00A7  
             ??_MFRC522_ToCard 00B5       __size_of_MFRC522_Set_Bit 0016                         ??_main 00CB  
              hex2Ascii@cntDig 00A3                MFRC522_ToCard@i 00BD                MFRC522_ToCard@n 00BF  
        MFRC522_ToCard@backLen 00B4                hex2Ascii@strOut 00A2                MFRC522_Wr@value 00A8  
    __end_of_MFRC522_Clear_Bit 091C          MFRC522_ToCard@_status 00BA          MFRC522_ToCard@command 00BC  
                       _EEDATA 010C                         _EECON2 018D                         _ANSELH 0189  
                       i1l2810 0B66                         i1l2820 0B91                         i1l2812 0B6D  
                       i1l2814 0B6E                         i1l2806 0B5F                         i1l2816 0B7F  
                       i1l2808 0B65                         i1l2818 0B8D                         i1l4800 06D0  
                       i1l4650 0CEA                         i1l4810 06F3                         i1l4802 06D2  
                       i1l4652 0CF3                         i1l4644 0CC1                         i1l4812 070F  
                       i1l4804 06DA                         i1l4820 0794                         i1l4654 0D05  
                       i1l4646 0CCC                         i1l4822 0799                         i1l4814 0745  
                       i1l4806 06DD                         i1l3960 0EB3                         i1l4656 0D10  
                       i1l4648 0CD0                         i1l4824 079A                         i1l4816 0764  
                       i1l4808 06EA                         i1l3970 0EE0                         i1l3962 0EB7  
                       i1l4818 0792                         i1l3980 0F08                         i1l3972 0EE8  
                       i1l3964 0EC8                         i1l3982 0F1A                         i1l3974 0EEB  
                       i1l3990 0F3B                         i1l3966 0ED3                         i1l3958 0EB0  
                       i1l3992 0F40                         i1l3984 0F28                         i1l3976 0EF9  
                       i1l3968 0ED8                         i1l3994 0F4C                         i1l3986 0F2A  
                       i1l3978 0EFF                         i1l4794 06C4                         i1l3996 0F55  
                       i1l3988 0F33                         i1l4796 06C8                         i1l4798 06CC  
                       u330_20 0EB7                         u330_21 0EB6                         u331_20 0EC8  
                       u331_21 0EC7                         u332_20 0EE8                         u332_21 0EE7  
                       u420_25 0CF4                         u421_20 0D04                         u421_21 0D03  
                       u333_25 0EED                         u334_20 0EFD                         u430_20 06CC  
                       u334_21 0EFC                         u430_21 06CB                         u431_20 06D0  
                       u431_21 06CF                         u335_25 0F01                         u336_20 0F1A  
                       u192_20 0B6C                         u336_21 0F19                         u192_21 0B6B  
                       u336_25 0F16                         u432_25 06EC                         u417_20 0CD0  
                       u193_20 0B7F                         u417_21 0CCF                         u193_21 0B7E  
                       u433_21 0701                         u433_22 0708                         u433_23 070F  
                       u337_25 0F2B                         u338_20 0F39                         u194_20 0B97  
                       u434_20 0799                         u338_21 0F38                         u418_21 0CDB  
                       u194_21 0B96                         u434_21 0798                         u418_22 0CE2  
                       u418_23 0CE9                         u339_20 0F40                         u339_21 0F3F  
                       u419_25 0CEC                         u429_20 06C8                         u429_21 06C7  
        MFRC522_ToCard@sendLen 00B1          MFRC522_ToCard@waitIRq 00B9               mfrc522ClrBit@end 00A8  
             __end_of_delay_ms 09AB                 __CFG_PWRTE$OFF 0000               __end_of_lcd_data 0BDD  
             __end_of_lcd_init 07FB               __end_of_lcd_inst 1000                         ___lmul 0CC1  
                    ??___aldiv 0079        MFRC522_AntiColl@_status 00C9               __end_of_tagTxCmd 0555  
                    ??_lcd_clr 00A3                    tagTxCmd@cmd 00B8                         saved_w 007E  
         __end_of_mfrc522AntOn 1800        __end_of__initialization 005B                   ?_procura_tag 00BB  
                 ??_MFRC522_Rd 00A5                   ??_MFRC522_Wr 00A9                ??_tmr_tick_init 00A0  
             ??_mfrc522Iniciar 00AB                 __pcstackCOMMON 0070                   __pidataBANK0 07FB  
                 __pidataBANK1 091C                   __pidataBANK2 0B28                   __pidataBANK3 09CF  
                  tag_false@p1 00A4                    tag_false@p2 00A0             __size_of_hex2Ascii 008D  
              _tmr_tick_reload 0810               tagTxCmd@lastBits 00B7       __end_of_MFRC522_AntiColl 0EB0  
            ??_MFRC522_Set_Bit 00AC             __end_of_MFRC522_Rd 09CF             __end_of_MFRC522_Wr 096E  
             mfrc522SetBit@end 00A8             __size_of_lcd_print 004B     __size_of_MFRC522_Clear_Bit 0018  
 __end_of_spi_hardware_disable 0889                     __pbssBANK0 0041                     __pbssBANK1 00E8  
       MFRC522_ToCard@backData 00B2             __size_of_tag_false 0031                     __pmaintext 005F  
                      ?___lmul 0070                     __pintentry 0004                 ___lmul@product 0020  
       MFRC522_ToCard@lastBits 00BB         MFRC522_ToCard@sendData 00AF                      ?_delay_ms 00A0  
                   _lcd_lincol 08AF                     _mfrc522Rst 0889              procura_tag@status 00C0  
                 ?_uts_trigger 0070                      ?_lcd_data 0070                      ?_lcd_init 0070  
                    ?_lcd_inst 0070                     __stringtab 0800              __end_of_hex2Ascii 0E15  
            mfrc522ClrBit@lido 00A9                      ?_tagTxCmd 00AA        __end_of_tmr_tick_reload 0812  
                      ___aldiv 0EB0              __end_of_lcd_print 0C72                __size_of___lmul 0050  
                   hex2Ascii@a 00A9                     hex2Ascii@b 00A8                  tmr_tick_int@i 0073  
                      __ptext1 08D9                        __ptext2 08C4                        __ptext3 0A29  
                      __ptext4 087B                        __ptext5 096E                        __ptext6 0935  
                      __ptext7 09FA                        __ptext8 098C                        __ptext9 0BDD  
               procura_tag@len 00C1                        _lcd_clr 17DA          __size_of_mfrc522AntOn 000D  
                    _T1CONbits 0010                   __size_of_isr 00E7                        _uidAsci 01AE  
             ___aldiv@dividend 0028                     ??_delay_ms 00A2              __end_of_tag_false 0A5A  
             spiSoftTxDat@dado 00A2                        main@TAG 01CE                        main@UID 01D3  
                   ??_lcd_data 00A0                        clrloop0 17E2                        main@uid 01DC  
             spiSoftTxCmd@oper 00A0                     ??_lcd_init 00A3                     ??_lcd_inst 00A0  
         end_of_initialization 005B                  ?_spiSoftRxDat 0070                  ?_spiSoftTxDat 0070  
                ?_spiSoftTxCmd 00A0                     ??_tagTxCmd 00B0                   tagTxCmd@data 00AA  
                ?_sensors_init 0070                   tagTxCmd@dlen 00AC        __size_of_spiSoftIniciar 001E  
                 tagTxCmd@rlen 00AF           __size_of_procura_tag 004A          __end_of_mfrc522ClrBit 0ABE  
                 _mfrc522AntOn 17F3               ___aldiv@quotient 002E          __end_of_mfrc522SetBit 0A8C  
                   _spiSoftClk 17E9           _spi_hardware_disable 087B                      _PORTAbits 0005  
                    _PORTBbits 0006                      _PORTCbits 0007                      _PORTDbits 0008  
                   _prs_detect 09FA                      _TRISAbits 0085                      _TRISBbits 0086  
                    _TRISCbits 0087                    ?_lcd_lincol 00A3                      _TRISDbits 0088  
                  ?_mfrc522Rst 0070                 ??_spiSoftRxDat 00A0                 ??_spiSoftTxDat 00A0  
               ??_spiSoftTxCmd 00A1                 ??_sensors_init 00A0                     main@perigo 01DA  
              _MFRC522_Set_Bit 08EE            MFRC522_ToCard@irqEn 00B8                 __end_of___lmul 0D11  
        ?_spi_hardware_disable 0070                   tag_false@ret 00A5            start_initialization 0013  
            ?_MFRC522_AntiColl 00C0              MFRC522_AntiColl@i 00CA                  ?_tmr_tick_int 0070  
                  __end_of_isr 07AB        __size_of_MFRC522_ToCard 016F             ??_MFRC522_AntiColl 00C2  
         __size_of_uts_trigger 0015                 hex2Ascii@strIn 00A0          __end_of_tmr_tick_init 08D9  
          __size_of_lcd_lincol 0015                       ??___lmul 0078              mfrc522SetBit@lido 00A9  
          __size_of_mfrc522Rst 0013                     init_fetch0 089C                    ?_spiSoftClk 0070  
                  __pdataBANK0 0051                    __pdataBANK1 00CF                    __pdataBANK2 0110  
                  __pdataBANK3 0190                    ?_prs_detect 0070                    __pbssCOMMON 007A  
               ??_tmr_tick_int 0070                      ___latbits 0002                  __pcstackBANK0 0020  
                __pcstackBANK1 00A0                  __pcstackBANK3 01BB                     tag_false@i 00A6  
            __size_of_delay_ms 001F                   hex2Ascii@dez 00AB                   hex2Ascii@uni 00AA  
            __size_of_lcd_data 0044              __size_of_lcd_init 0050              __size_of_lcd_inst 00AA  
              tagTxCmd@waitIRq 00B3                 _spiSoftIniciar 096E                      _dados_tag 0190  
                    _hex2Ascii 0D88        __end_of_MFRC522_Set_Bit 0904              __size_of_tagTxCmd 01F3  
          MFRC522_Set_Bit@addr 00AD            MFRC522_Set_Bit@mask 00AB                       ?___aldiv 0024  
       ??_spi_hardware_disable 00A0           __end_of_spiSoftRxDat 0AF1           __end_of_spiSoftTxDat 0B28  
         __end_of_spiSoftTxCmd 0CC1                      __pstrings 0800                      _lcd_print 0C27  
                    _matEeprom 0110                       ?_lcd_clr 0070           __end_of_sensors_init 0951  
      __size_of_mfrc522Iniciar 0077         __end_of_spiSoftIniciar 098C                      _tag_false 0A29  
          __size_of_spiSoftClk 000A                ___aldiv@divisor 0024              interrupt_function 0004  
              ___aldiv@counter 002C                spiSoftTxDat@reg 00A3                spiSoftTxCmd@end 00A3  
                    _rfid_read 0000                spiSoftTxCmd@reg 00A5                       _IOCBbits 0096  
                    delay_ms@t 00A0                     ?_hex2Ascii 00A0                      clear_ram0 17E1  
                     _PIE1bits 008C            __size_of_prs_detect 002F                       _PIR1bits 000C  
                    main@F1412 00CF                      main@F1414 00DC                      main@F1416 01A1  
                    main@F1418 00D6                      lcd_data@d 00A2                     ?_lcd_print 00A6  
                 _rfid_display 0000                    __stringbase 080F                      lcd_inst@i 00A2  
                    main@senha 01BB                      main@state 01DD                   ??_lcd_lincol 00A4  
                 ??_mfrc522Rst 00A6                 _MFRC522_ToCard 0555              ___lmul@multiplier 0070  
              ?_spiSoftIniciar 0070                     ?_tag_false 00A0                  ??_procura_tag 00BD  
                   _EECON1bits 018C               ?_MFRC522_Set_Bit 00AB          MFRC522_Clear_Bit@addr 00AE  
        MFRC522_Clear_Bit@mask 00AB           __end_of_tmr_tick_int 0B99                      tagTxCmd@a 00B5  
                    tagTxCmd@i 00B9                      tagTxCmd@n 00BA             __end_of_lcd_lincol 08C4  
             __size_of___aldiv 00A6             __end_of_mfrc522Rst 089C             __end_of__stringtab 0810  
             __size_of_lcd_clr 0007                 tagTxCmd@result 00AD         __end_of_MFRC522_ToCard 06C4  
               tagTxCmd@status 00B4                       _isr$1614 0039                       _isr$1615 003D  
                     _delay_ms 098C                       __ptext10 0362                       __ptext11 0A8C  
                     __ptext20 07AB                       __ptext12 0D11                       __ptext21 17DA  
                     __ptext13 0889                       __ptext30 0AF1                       __ptext22 0F56  
                     __ptext14 17F3                       __ptext31 0ABE                       __ptext23 0D88  
                     __ptext15 0A5A                       __ptext32 17E9                       __ptext24 0E15  
                     __ptext16 0C72                       __ptext33 06C4                       __ptext25 0555  
                     __ptext17 0C27                       __ptext34 0B5F                       __ptext26 08EE  
                     __ptext18 08AF                       __ptext35 0CC1                       __ptext27 0904  
                     __ptext19 0B99                       __ptext36 0EB0                       __ptext28 0951  
                     __ptext29 09AB              __CFG_BOR4V$BOR40V 0000                procura_tag@data 00BB  
                     _lcd_data 0B99         __size_of_mfrc522ClrBit 0032                procura_tag@modo 00BF  
         mfrc522SetBit@mascara 00A6                       _lcd_init 07AB                       _lcd_inst 0F56  
  MFRC522_AntiColl@serNumCheck 00C7         __size_of_mfrc522SetBit 0032                  __size_of_main 0303  
                     _tagTxCmd 0362                 spiSoftRxDat@rc 00A2                    ??_hex2Ascii 00A4  
                   _MFRC522_Rd 09AB                     _MFRC522_Wr 0951      __size_of_MFRC522_AntiColl 009B  
                     _t_sensor 004D          __size_of_spiSoftRxDat 0033          __size_of_spiSoftTxDat 0037  
        __size_of_spiSoftTxCmd 004F          __size_of_sensors_init 001C            __end_of_procura_tag 0C27  
                 ??_spiSoftClk 00A0                    ??_lcd_print 00A9                 _mfrc522Iniciar 0D11  
                 ??_prs_detect 00A4                     _INTCONbits 000B                ?_MFRC522_ToCard 00AF  
                ??_uts_trigger 00A0                       init_ram0 08A0                  tagTxCmd@irqEn 00B6  
                     intlevel1 0000                    ??_tag_false 00A1                   _spiSoftRxDat 0ABE  
                 _spiSoftTxDat 0AF1                   _spiSoftTxCmd 0C72             __end_of_spiSoftClk 17F3  
                 _sensors_init 0935                  spiSoftRxDat@a 00A3                      stringcode 080A  
                spiSoftTxDat@a 00A4                  spiSoftTxCmd@a 00A4             __end_of_prs_detect 0A29  
                _mfrc522ClrBit 0A8C                  _mfrc522SetBit 0A5A         __end_of_mfrc522Iniciar 0D88  
                     stringdir 080A                       stringtab 0800                   ___aldiv@sign 002D  
       __size_of_tmr_tick_init 0015          __size_of_tmr_tick_int 003A            __end_of_uts_trigger 08EE  
                  _procura_tag 0BDD                    ?_MFRC522_Rd 0070                    ?_MFRC522_Wr 00A8  
                ?_mfrc522AntOn 0070  
